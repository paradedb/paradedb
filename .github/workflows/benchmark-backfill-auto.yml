# workflows/benchmark-backfill-auto.yml
#
# Benchmark Backfill Auto
# Automatically backfill benchmarks results using existing commit hashes. This
# workflow is triggered by the `benchmark-backfill` workflow.

name: Benchmark Backfill Auto

on:
  workflow_dispatch:

# The token must be allowed to start other workflows
permissions:
  actions: write
  contents: write

# We don't specify a concurrency group here, as we want all jobs to complete.

jobs:
  reset:
    name: Reset the `gh-pages` data.js Files
    runs-on: ubuntu-latest
    outputs:
      ids: ${{ steps.extract_commits.outputs.ids }}

    steps:
      - name: Load and extract commit IDs from benchmark data
        id: extract_commits
        run: |
          # Fetch the existing benchmark data. We only get the stressgres data as
          # all benchmark styles should have the same commits
          curl -sSL https://paradedb.github.io/paradedb/stressgres/data.js \
            -o data.js

          # Run a tiny Node script to eval and extract distinct commit IDs
          ids=$(node -e "
            const fs = require('fs');
            global.window = {};
            // load the JS file, which populates window.BENCHMARK_DATA
            eval(fs.readFileSync('data.js', 'utf8'));
            const data = window.BENCHMARK_DATA;
            const ids = new Set();
            // traverse each entry array and collect commit.id
            for (const arr of Object.values(data.entries)) {
              for (const item of arr) {
                ids.add(item.commit.id);
              }
            }
            console.log(JSON.stringify([...ids]));   # <-- JSON array
          ")

          echo "ids=$ids" >> $GITHUB_OUTPUT

      - name: Checkout Git Repository at ref=gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      - name: Reset data.js Files
        run: |
          git config user.name "Benchmark Backfill Job"
          git config user.email "developers@paradedb.com"
          files=$(git ls-files stressgres/data.js benchmarks/data.js)
          if [ -n "$files" ]; then
            echo "$files" | xargs git rm
            git commit -m "Reset data.js files"
            git push
          fi

  # We run one job per commit
  dispatch:
    name: Dispatch All Benchmark Jobs
    runs-on: ubuntu-latest
    needs: reset
    strategy:
      matrix:
        sha: ${{ fromJSON(needs.reset.outputs.ids) }} # → ["…","…"]

    steps:
      - name: Fire Benchmark &Stressgres Jobs for ${{ matrix.sha }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = context.repo.owner;
            const repo  = context.repo.repo;
            const sha   = '${{ matrix.sha }}';

            // Workflows to queue
            const targets = ['benchmark-pg_search-benchmarks.yml', 'benchmark-pg_search-stressgres.yml'];

            for (const wf of targets) {
              /*  createWorkflowDispatch must point at a branch or tag, not a
                  bare SHA, so we send `ref:"main"` and hand the commit SHA
                  through an input named `commit`  */
              await github.rest.actions.createWorkflowDispatch({
                owner,
                repo,
                workflow_id: wf,
                ref: 'main',
                inputs: { commit: sha }
              });
              core.info(`queued ${wf} for ${sha}`);
            }
