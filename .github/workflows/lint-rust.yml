# workflows/lint-rust.yml
#
# Lint Rust
# Lint Rust files using Clippy and Rustfmt.

name: Lint Rust

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - "**/*.rs"
      - "**/*.toml"
      - ".github/workflows/lint-rust.yml"
  workflow_dispatch:

concurrency:
  group: lint-rust-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  lint-rust:
    name: Lint Rust Files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pg_version: [17]

    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt, clippy
          cache: false

      - name: Extract pgrx Version
        id: pgrx
        working-directory: pg_search/
        run: |
          version=$(cargo tree --depth 1 -i pgrx -p pg_search | head -n 1 | sed -E 's/.*v([0-9]+\.[0-9]+\.[0-9]+).*/\1/')
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Install Rust Cache
        uses: swatinem/rust-cache@v2
        with:
          prefix-key: "rust-cache"
          shared-key: pg${{ matrix.pg_version }}-${{ hashFiles('**/Cargo.lock') }}
          cache-targets: true
          cache-all-crates: true

      - name: Install & Configure Supported PostgreSQL Version
        run: |
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          sudo apt-get update && sudo apt-get install -y postgresql-${{ matrix.pg_version }} postgresql-server-dev-${{ matrix.pg_version }}
          echo "/usr/lib/postgresql/${{ matrix.pg_version }}/bin" >> $GITHUB_PATH

      - name: Install pgrx
        run: cargo install --locked cargo-pgrx --version ${{ steps.pgrx.outputs.version }} --debug

      - name: Initialize pgrx for Current PostgreSQL Version
        run: cargo pgrx init --pg${{ matrix.pg_version }}=/usr/lib/postgresql/${{ matrix.pg_version }}/bin/pg_config

      - name: Run Rustfmt
        run: cargo fmt -- --check

      - name: Run Clippy
        run: cargo clippy --workspace --all-targets -- -D warnings --no-deps

      - name: Install cargo-machete
        run: cargo install cargo-machete --debug

      - name: Install taplo
        run: cargo install taplo-cli --version ^0.9 --locked --debug

      - name: Run cargo-machete
        run: cargo machete

      # If you encounter an error, try running 'taplo format' to fix the formatting automatically.
      - name: Check Cargo.toml Formatting
        run: taplo format --check
