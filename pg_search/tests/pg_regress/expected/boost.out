EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description @@@ 'running shoes'::boost(3);
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"boost":{"field":"description","query":{"parse_with_field":{"query_string":"running shoes","lenient":null,"conjunction_mode":null}},"boost":3.0}}}}
(6 rows)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description @@@ 'running shoes'::boost(3.14159);
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"boost":{"field":"description","query":{"parse_with_field":{"query_string":"running shoes","lenient":null,"conjunction_mode":null}},"boost":3.140625}}}}
(6 rows)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description @@@ 'running shoes'::boost(0.5);
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"boost":{"field":"description","query":{"parse_with_field":{"query_string":"running shoes","lenient":null,"conjunction_mode":null}},"boost":0.5}}}}
(6 rows)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description @@@ 'running shoes'::boost(0);
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"boost":{"field":"description","query":{"parse_with_field":{"query_string":"running shoes","lenient":null,"conjunction_mode":null}},"boost":0.0}}}}
(6 rows)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description @@@ 'running shoes'::boost(-100);
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"boost":{"field":"description","query":{"parse_with_field":{"query_string":"running shoes","lenient":null,"conjunction_mode":null}},"boost":-100.0}}}}
(6 rows)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description &&& 'running shoes'::boost(3);
                                                                                                                QUERY PLAN                                                                                                                
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"boost":{"field":"description","query":{"match":{"value":"running shoes","tokenizer":null,"distance":null,"transposition_cost_one":null,"prefix":null,"conjunction_mode":true}},"boost":3.0}}}}
(6 rows)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description &&& 'running shoes'::boost(3.14159);
                                                                                                                  QUERY PLAN                                                                                                                   
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"boost":{"field":"description","query":{"match":{"value":"running shoes","tokenizer":null,"distance":null,"transposition_cost_one":null,"prefix":null,"conjunction_mode":true}},"boost":3.140625}}}}
(6 rows)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description &&& 'running shoes'::boost(0.5);
                                                                                                                QUERY PLAN                                                                                                                
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"boost":{"field":"description","query":{"match":{"value":"running shoes","tokenizer":null,"distance":null,"transposition_cost_one":null,"prefix":null,"conjunction_mode":true}},"boost":0.5}}}}
(6 rows)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description &&& 'running shoes'::boost(0);
                                                                                                                QUERY PLAN                                                                                                                
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"boost":{"field":"description","query":{"match":{"value":"running shoes","tokenizer":null,"distance":null,"transposition_cost_one":null,"prefix":null,"conjunction_mode":true}},"boost":0.0}}}}
(6 rows)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description &&& 'running shoes'::boost(-100);
                                                                                                                 QUERY PLAN                                                                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"boost":{"field":"description","query":{"match":{"value":"running shoes","tokenizer":null,"distance":null,"transposition_cost_one":null,"prefix":null,"conjunction_mode":true}},"boost":-100.0}}}}
(6 rows)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description ||| 'running shoes'::boost(3);
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"boost":{"field":"description","query":{"match":{"value":"running shoes","tokenizer":null,"distance":null,"transposition_cost_one":null,"prefix":null,"conjunction_mode":false}},"boost":3.0}}}}
(6 rows)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description ||| 'running shoes'::boost(3.14159);
                                                                                                                   QUERY PLAN                                                                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"boost":{"field":"description","query":{"match":{"value":"running shoes","tokenizer":null,"distance":null,"transposition_cost_one":null,"prefix":null,"conjunction_mode":false}},"boost":3.140625}}}}
(6 rows)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description ||| 'running shoes'::boost(0.5);
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"boost":{"field":"description","query":{"match":{"value":"running shoes","tokenizer":null,"distance":null,"transposition_cost_one":null,"prefix":null,"conjunction_mode":false}},"boost":0.5}}}}
(6 rows)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description ||| 'running shoes'::boost(0);
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"boost":{"field":"description","query":{"match":{"value":"running shoes","tokenizer":null,"distance":null,"transposition_cost_one":null,"prefix":null,"conjunction_mode":false}},"boost":0.0}}}}
(6 rows)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description ||| 'running shoes'::boost(-100);
                                                                                                                  QUERY PLAN                                                                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"boost":{"field":"description","query":{"match":{"value":"running shoes","tokenizer":null,"distance":null,"transposition_cost_one":null,"prefix":null,"conjunction_mode":false}},"boost":-100.0}}}}
(6 rows)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description ### 'running shoes'::boost(3);
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"boost":{"field":"description","query":{"tokenized_phrase":{"phrase":"running shoes","slop":null}},"boost":3.0}}}}
(6 rows)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description ### 'running shoes'::boost(3.14159);
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"boost":{"field":"description","query":{"tokenized_phrase":{"phrase":"running shoes","slop":null}},"boost":3.140625}}}}
(6 rows)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description ### 'running shoes'::boost(0.5);
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"boost":{"field":"description","query":{"tokenized_phrase":{"phrase":"running shoes","slop":null}},"boost":0.5}}}}
(6 rows)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description ### 'running shoes'::boost(0);
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"boost":{"field":"description","query":{"tokenized_phrase":{"phrase":"running shoes","slop":null}},"boost":0.0}}}}
(6 rows)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description ### 'running shoes'::boost(-100);
                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"boost":{"field":"description","query":{"tokenized_phrase":{"phrase":"running shoes","slop":null}},"boost":-100.0}}}}
(6 rows)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description === 'shoes'::boost(3);
                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"boost":{"field":"description","query":{"term":{"value":"shoes","is_datetime":false}},"boost":3.0}}}}
(6 rows)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description === 'shoes'::boost(3.14159);
                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"boost":{"field":"description","query":{"term":{"value":"shoes","is_datetime":false}},"boost":3.140625}}}}
(6 rows)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description === 'shoes'::boost(0.5);
                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"boost":{"field":"description","query":{"term":{"value":"shoes","is_datetime":false}},"boost":0.5}}}}
(6 rows)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description === 'shoes'::boost(0);
                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"boost":{"field":"description","query":{"term":{"value":"shoes","is_datetime":false}},"boost":0.0}}}}
(6 rows)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description === 'shoes'::boost(-100);
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"boost":{"field":"description","query":{"term":{"value":"shoes","is_datetime":false}},"boost":-100.0}}}}
(6 rows)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description @@@ pdb.term('shoes')::boost(-100);
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"boost":{"field":"description","query":{"term":{"value":"shoes","is_datetime":false}},"boost":-100.0}}}}
(6 rows)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description @@@ ('running' ##3## 'shoes')::boost(3);
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"boost":{"field":"description","query":{"proximity":{"left":{"term":"running"},"distance":{"in_order":3},"right":{"term":"shoes"}}},"boost":3.0}}}}
(6 rows)

--
-- validate basic json representations
--
SELECT 'foo'::boost(3);
                                  boost                                   
--------------------------------------------------------------------------
 {"boost":{"query":{"unclassified_string":{"string":"foo"}},"boost":3.0}}
(1 row)

SELECT pdb.term('foo')::boost(3);
                                     term                                     
------------------------------------------------------------------------------
 {"boost":{"query":{"term":{"value":"foo","is_datetime":false}},"boost":3.0}}
(1 row)

--
-- oob cases.  these all get clamped to [-2048..2048]
--
SELECT 'foo'::boost(2049);
                                    boost                                    
-----------------------------------------------------------------------------
 {"boost":{"query":{"unclassified_string":{"string":"foo"}},"boost":2048.0}}
(1 row)

SELECT 'foo'::boost(-2049);
                                    boost                                     
------------------------------------------------------------------------------
 {"boost":{"query":{"unclassified_string":{"string":"foo"}},"boost":-2048.0}}
(1 row)

SELECT 'foo'::boost(Inf);
                                    boost                                    
-----------------------------------------------------------------------------
 {"boost":{"query":{"unclassified_string":{"string":"foo"}},"boost":2048.0}}
(1 row)

--
-- error cases
--
SELECT 'foo'::boost(hi_mom);
ERROR:  invalid boost value: hi_mom at character 15
SELECT 'foo'::boost(1,2);
ERROR:  assertion failed: typmod_parts.len() == 1 at character 15
SELECT 'foo'::boost(NaN);
ERROR:  only 16 bit floats in the range [-2048..2048] are supported at character 15
EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description @@@ 'shoes'::boost;
ERROR:  boost value should have been set
