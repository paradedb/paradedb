-- Test custom agg function with paradedb.agg()
CREATE EXTENSION IF NOT EXISTS pg_search;
SET paradedb.enable_aggregate_custom_scan TO on;
DROP TABLE IF EXISTS logs CASCADE;
-- Setup test data
CREATE TABLE logs (
    id SERIAL PRIMARY KEY,
    description TEXT,
    severity TEXT,
    category TEXT,
    response_time INT,
    status_code INT,
    timestamp TIMESTAMP
);
INSERT INTO logs (description, severity, category, response_time, status_code, timestamp) VALUES
    ('Database connection error', 'error', 'database', 150, 500, '2024-01-01 10:00:00'),
    ('Failed to fetch data', 'error', 'api', 200, 404, '2024-01-01 10:01:00'),
    ('Timeout connecting to service', 'error', 'network', 5000, 503, '2024-01-01 10:02:00'),
    ('Invalid query syntax error', 'error', 'database', 50, 400, '2024-01-01 10:03:00');
CREATE INDEX logs_idx ON logs USING bm25 (id, description, severity, category, response_time, status_code, timestamp)
WITH (
    key_field = 'id',
    text_fields = '{"description": {}, "severity": {"fast": true}, "category": {"fast": true}}',
    numeric_fields = '{"response_time": {"fast": true}, "status_code": {"fast": true}}',
    datetime_fields = '{"timestamp": {"fast": true}}'
);
-- Test 1: Simple custom agg with terms aggregation (without search query - should fail gracefully or not be intercepted)
EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF, VERBOSE)
SELECT category, paradedb.agg('{"terms": {"field": "severity"}}'::jsonb)
FROM logs
WHERE description @@@ 'error'
GROUP BY category;
WARNING:  Hook: UPPERREL_GROUP_AGG stage, calling AggregateScan
WARNING:  AggregateScan::create_custom_path called at stage 2
WARNING:    input_rel.reloptkind = 0
WARNING:    AggregateCSClause::build starting
WARNING:    TargetList::from_pg starting
WARNING:    TargetList: is_window_stage = false
WARNING:    TargetList: got schema
WARNING:    TargetList: using output_rel reltarget (2 exprs)
WARNING:    TargetList: starting to process 2 expressions
WARNING:    TargetList: processing expr 0 with node_tag=T_Var
WARNING:    TargetList: processing expr 1 with node_tag=T_Aggref
WARNING:    targetlist extracted
WARNING:    orderby extracted
WARNING:    limit_offset extracted
WARNING:    quals extracted
WARNING:    Creating AggregateCSClause (quals=true, targetlist=false)
WARNING:    AggregateScan returned a path, adding it
WARNING:  AggregateScan::plan_custom_path called
WARNING:    Setting scanrelid = 1 (base scan)
WARNING:    rel.relid = 0
WARNING:    tlist has 2 entries
WARNING:  AggregateScan::begin_custom_scan called - THIS IS A BUG if query has window functions!
WARNING:    execution_rti = 1
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Aggregate Scan) on public.logs
   Output: category, now()
   Index: logs_idx
   Tantivy Query: {"with_index":{"query":{"parse_with_field":{"field":"description","query_string":"error","lenient":null,"conjunction_mode":null}}}}
     Applies to Aggregates: CUSTOM_AGG({"terms":{"field":"severity"}})
     Group By: category
     Aggregate Definition: {"grouped":{"aggs":{"0":{"terms":{"field":"severity"}}},"terms":{"field":"category","segment_size":65000,"size":65000}}}
(7 rows)

SELECT category, paradedb.agg('{"terms": {"field": "severity"}}'::jsonb)
FROM logs
WHERE description @@@ 'error'
GROUP BY category;
WARNING:  Hook: UPPERREL_GROUP_AGG stage, calling AggregateScan
WARNING:  AggregateScan::create_custom_path called at stage 2
WARNING:    input_rel.reloptkind = 0
WARNING:    AggregateCSClause::build starting
WARNING:    TargetList::from_pg starting
WARNING:    TargetList: is_window_stage = false
WARNING:    TargetList: got schema
WARNING:    TargetList: using output_rel reltarget (2 exprs)
WARNING:    TargetList: starting to process 2 expressions
WARNING:    TargetList: processing expr 0 with node_tag=T_Var
WARNING:    TargetList: processing expr 1 with node_tag=T_Aggref
WARNING:    targetlist extracted
WARNING:    orderby extracted
WARNING:    limit_offset extracted
WARNING:    quals extracted
WARNING:    Creating AggregateCSClause (quals=true, targetlist=false)
WARNING:    AggregateScan returned a path, adding it
WARNING:  AggregateScan::plan_custom_path called
WARNING:    Setting scanrelid = 1 (base scan)
WARNING:    rel.relid = 0
WARNING:    tlist has 2 entries
WARNING:  AggregateScan::begin_custom_scan called - THIS IS A BUG if query has window functions!
WARNING:    execution_rti = 1
 category | agg 
----------+-----
 database | 
(1 row)

-- Test 2: Custom agg in window function
EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF, VERBOSE)
SELECT *, paradedb.agg('{"avg": {"field": "response_time"}}'::jsonb) OVER ()
FROM logs
WHERE description @@@ 'error'
ORDER BY timestamp DESC LIMIT 10;
WARNING:  Hook: UPPERREL_WINDOW stage, calling AggregateScan
WARNING:  AggregateScan::create_custom_path called at stage 3
WARNING:    input_rel.reloptkind = 0
WARNING:    UPPERREL_WINDOW: checking available target lists
WARNING:    input_rel.reltarget has 7 exprs
WARNING:    output_rel.reltarget has 0 exprs
WARNING:    output_rel.pathlist has 1 paths
WARNING:    input_rel.pathlist has 2 paths
WARNING:    input_rel.cheapest_total_path.pathtarget has 7 exprs
WARNING:      input path expr 0: type=T_Var
WARNING:      input path expr 1: type=T_Var
WARNING:      input path expr 2: type=T_Var
WARNING:      input path expr 3: type=T_Var
WARNING:      input path expr 4: type=T_Var
WARNING:      input path expr 5: type=T_Var
WARNING:      input path expr 6: type=T_Var
WARNING:    parse.windowClause has 1 entries
WARNING:    parse.targetList has 1 WindowFunc nodes
WARNING:    root.processed_tlist has 8 entries
WARNING:    root.processed_tlist has 1 WindowFunc nodes
WARNING:    AggregateCSClause::build starting
WARNING:    TargetList::from_pg starting
WARNING:    TargetList: is_window_stage = true
WARNING:    TargetList: got schema
WARNING:    TargetList: UPPERREL_WINDOW using input_rel.reltarget (7 base columns)
WARNING:      base column 0: Var with varno=1, varattno=1
WARNING:      base column 1: Var with varno=1, varattno=2
WARNING:      base column 2: Var with varno=1, varattno=3
WARNING:      base column 3: Var with varno=1, varattno=4
WARNING:      base column 4: Var with varno=1, varattno=5
WARNING:      base column 5: Var with varno=1, varattno=6
WARNING:      base column 6: Var with varno=1, varattno=7
WARNING:    TargetList: combined 8 total exprs (7 base + 1 window funcs)
WARNING:    TargetList: starting to process 8 expressions
WARNING:    TargetList: processing expr 0 with node_tag=T_Var
WARNING:    TargetList: processing expr 1 with node_tag=T_Var
WARNING:    TargetList: processing expr 2 with node_tag=T_Var
WARNING:    TargetList: processing expr 3 with node_tag=T_Var
WARNING:    TargetList: processing expr 4 with node_tag=T_Var
WARNING:    TargetList: processing expr 5 with node_tag=T_Var
WARNING:    TargetList: processing expr 6 with node_tag=T_Var
WARNING:    TargetList: processing expr 7 with node_tag=T_WindowFunc
WARNING:    targetlist extracted
WARNING:    orderby extracted
WARNING:    limit_offset extracted
WARNING:    quals extracted
WARNING:    Creating AggregateCSClause (quals=true, targetlist=false)
WARNING:    AggregateScan returned a path, adding it
WARNING:  AggregateScan::plan_custom_path called
WARNING:    Setting scanrelid = 1 (base scan)
WARNING:    rel.relid = 0
WARNING:    tlist has 0 entries
WARNING:    tlist is empty at UPPERREL_WINDOW, building our own
WARNING:      processed_tlist has 8 entries
WARNING:    Built new tlist with 8 entries
WARNING:    Setting new target list on plan
WARNING:    Replacing WindowFunc nodes immediately
WARNING:  replace_windowfuncs_in_target_list called
WARNING:    original_tlist has 8 entries
WARNING:      Processing entry 0: type=T_Var
WARNING:      Processing entry 1: type=T_Var
WARNING:      Processing entry 2: type=T_Var
WARNING:      Processing entry 3: type=T_Var
WARNING:      Processing entry 4: type=T_Var
WARNING:      Processing entry 5: type=T_Var
WARNING:      Processing entry 6: type=T_Var
WARNING:      Processing entry 7: type=T_WindowFunc
WARNING:      Found WindowFunc at entry 7, replacing
WARNING:        make_window_func_placeholder_without_accessing_windowfunc called
WARNING:  AggregateScan::begin_custom_scan called - THIS IS A BUG if query has window functions!
WARNING:    execution_rti = 1
ERROR:  WindowFunc found in non-WindowAgg plan node
SELECT *, paradedb.agg('{"avg": {"field": "response_time"}}'::jsonb) OVER ()
FROM logs
WHERE description @@@ 'error'
ORDER BY timestamp DESC LIMIT 10;
WARNING:  Hook: UPPERREL_WINDOW stage, calling AggregateScan
WARNING:  AggregateScan::create_custom_path called at stage 3
WARNING:    input_rel.reloptkind = 0
WARNING:    UPPERREL_WINDOW: checking available target lists
WARNING:    input_rel.reltarget has 7 exprs
WARNING:    output_rel.reltarget has 0 exprs
WARNING:    output_rel.pathlist has 1 paths
WARNING:    input_rel.pathlist has 2 paths
WARNING:    input_rel.cheapest_total_path.pathtarget has 7 exprs
WARNING:      input path expr 0: type=T_Var
WARNING:      input path expr 1: type=T_Var
WARNING:      input path expr 2: type=T_Var
WARNING:      input path expr 3: type=T_Var
WARNING:      input path expr 4: type=T_Var
WARNING:      input path expr 5: type=T_Var
WARNING:      input path expr 6: type=T_Var
WARNING:    parse.windowClause has 1 entries
WARNING:    parse.targetList has 1 WindowFunc nodes
WARNING:    root.processed_tlist has 8 entries
WARNING:    root.processed_tlist has 1 WindowFunc nodes
WARNING:    AggregateCSClause::build starting
WARNING:    TargetList::from_pg starting
WARNING:    TargetList: is_window_stage = true
WARNING:    TargetList: got schema
WARNING:    TargetList: UPPERREL_WINDOW using input_rel.reltarget (7 base columns)
WARNING:      base column 0: Var with varno=1, varattno=1
WARNING:      base column 1: Var with varno=1, varattno=2
WARNING:      base column 2: Var with varno=1, varattno=3
WARNING:      base column 3: Var with varno=1, varattno=4
WARNING:      base column 4: Var with varno=1, varattno=5
WARNING:      base column 5: Var with varno=1, varattno=6
WARNING:      base column 6: Var with varno=1, varattno=7
WARNING:    TargetList: combined 8 total exprs (7 base + 1 window funcs)
WARNING:    TargetList: starting to process 8 expressions
WARNING:    TargetList: processing expr 0 with node_tag=T_Var
WARNING:    TargetList: processing expr 1 with node_tag=T_Var
WARNING:    TargetList: processing expr 2 with node_tag=T_Var
WARNING:    TargetList: processing expr 3 with node_tag=T_Var
WARNING:    TargetList: processing expr 4 with node_tag=T_Var
WARNING:    TargetList: processing expr 5 with node_tag=T_Var
WARNING:    TargetList: processing expr 6 with node_tag=T_Var
WARNING:    TargetList: processing expr 7 with node_tag=T_WindowFunc
WARNING:    targetlist extracted
WARNING:    orderby extracted
WARNING:    limit_offset extracted
WARNING:    quals extracted
WARNING:    Creating AggregateCSClause (quals=true, targetlist=false)
WARNING:    AggregateScan returned a path, adding it
WARNING:  AggregateScan::plan_custom_path called
WARNING:    Setting scanrelid = 1 (base scan)
WARNING:    rel.relid = 0
WARNING:    tlist has 0 entries
WARNING:    tlist is empty at UPPERREL_WINDOW, building our own
WARNING:      processed_tlist has 8 entries
WARNING:    Built new tlist with 8 entries
WARNING:    Setting new target list on plan
WARNING:    Replacing WindowFunc nodes immediately
WARNING:  replace_windowfuncs_in_target_list called
WARNING:    original_tlist has 8 entries
WARNING:      Processing entry 0: type=T_Var
WARNING:      Processing entry 1: type=T_Var
WARNING:      Processing entry 2: type=T_Var
WARNING:      Processing entry 3: type=T_Var
WARNING:      Processing entry 4: type=T_Var
WARNING:      Processing entry 5: type=T_Var
WARNING:      Processing entry 6: type=T_Var
WARNING:      Processing entry 7: type=T_WindowFunc
WARNING:      Found WindowFunc at entry 7, replacing
WARNING:        make_window_func_placeholder_without_accessing_windowfunc called
WARNING:  AggregateScan::begin_custom_scan called - THIS IS A BUG if query has window functions!
WARNING:    execution_rti = 1
ERROR:  WindowFunc found in non-WindowAgg plan node
-- Test 3: Mix custom and standard aggregates
EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF, VERBOSE)
SELECT category, 
       COUNT(*),
       paradedb.agg('{"terms": {"field": "severity"}}'::jsonb)
FROM logs
WHERE description @@@ 'error'
GROUP BY category;
WARNING:  Hook: UPPERREL_GROUP_AGG stage, calling AggregateScan
WARNING:  AggregateScan::create_custom_path called at stage 2
WARNING:    input_rel.reloptkind = 0
WARNING:    AggregateCSClause::build starting
WARNING:    TargetList::from_pg starting
WARNING:    TargetList: is_window_stage = false
WARNING:    TargetList: got schema
WARNING:    TargetList: using output_rel reltarget (3 exprs)
WARNING:    TargetList: starting to process 3 expressions
WARNING:    TargetList: processing expr 0 with node_tag=T_Var
WARNING:    TargetList: processing expr 1 with node_tag=T_Aggref
WARNING:    TargetList: processing expr 2 with node_tag=T_Aggref
WARNING:    targetlist extracted
WARNING:    orderby extracted
WARNING:    limit_offset extracted
WARNING:    quals extracted
WARNING:    Creating AggregateCSClause (quals=true, targetlist=false)
WARNING:    AggregateScan returned a path, adding it
WARNING:  AggregateScan::plan_custom_path called
WARNING:    Setting scanrelid = 1 (base scan)
WARNING:    rel.relid = 0
WARNING:    tlist has 3 entries
WARNING:  AggregateScan::begin_custom_scan called - THIS IS A BUG if query has window functions!
WARNING:    execution_rti = 1
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Aggregate Scan) on public.logs
   Output: category, now(), now()
   Index: logs_idx
   Tantivy Query: {"with_index":{"query":{"parse_with_field":{"field":"description","query_string":"error","lenient":null,"conjunction_mode":null}}}}
     Applies to Aggregates: COUNT(*), CUSTOM_AGG({"terms":{"field":"severity"}})
     Group By: category
     Aggregate Definition: {"grouped":{"aggs":{"0":{"terms":{"field":"severity"}}},"terms":{"field":"category","segment_size":65000,"size":65000}}}
(7 rows)

SELECT category, 
       COUNT(*),
       paradedb.agg('{"terms": {"field": "severity"}}'::jsonb)
FROM logs
WHERE description @@@ 'error'
GROUP BY category;
WARNING:  Hook: UPPERREL_GROUP_AGG stage, calling AggregateScan
WARNING:  AggregateScan::create_custom_path called at stage 2
WARNING:    input_rel.reloptkind = 0
WARNING:    AggregateCSClause::build starting
WARNING:    TargetList::from_pg starting
WARNING:    TargetList: is_window_stage = false
WARNING:    TargetList: got schema
WARNING:    TargetList: using output_rel reltarget (3 exprs)
WARNING:    TargetList: starting to process 3 expressions
WARNING:    TargetList: processing expr 0 with node_tag=T_Var
WARNING:    TargetList: processing expr 1 with node_tag=T_Aggref
WARNING:    TargetList: processing expr 2 with node_tag=T_Aggref
WARNING:    targetlist extracted
WARNING:    orderby extracted
WARNING:    limit_offset extracted
WARNING:    quals extracted
WARNING:    Creating AggregateCSClause (quals=true, targetlist=false)
WARNING:    AggregateScan returned a path, adding it
WARNING:  AggregateScan::plan_custom_path called
WARNING:    Setting scanrelid = 1 (base scan)
WARNING:    rel.relid = 0
WARNING:    tlist has 3 entries
WARNING:  AggregateScan::begin_custom_scan called - THIS IS A BUG if query has window functions!
WARNING:    execution_rti = 1
 category | count | agg 
----------+-------+-----
 database |     2 | 
(1 row)

-- Test 4: Custom agg with FILTER (extracted at planning time)
EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF, VERBOSE)
SELECT paradedb.agg('{"avg": {"field": "response_time"}}'::jsonb) 
       FILTER (WHERE status_code >= 500)
FROM logs
WHERE description @@@ 'error';
WARNING:  Hook: UPPERREL_GROUP_AGG stage, calling AggregateScan
WARNING:  AggregateScan::create_custom_path called at stage 2
WARNING:    input_rel.reloptkind = 0
WARNING:    AggregateCSClause::build starting
WARNING:    TargetList::from_pg starting
WARNING:    TargetList: is_window_stage = false
WARNING:    TargetList: got schema
WARNING:    TargetList: using output_rel reltarget (1 exprs)
WARNING:    TargetList: starting to process 1 expressions
WARNING:    TargetList: processing expr 0 with node_tag=T_Aggref
WARNING:    targetlist extracted
WARNING:    orderby extracted
WARNING:    limit_offset extracted
WARNING:    quals extracted
WARNING:    Creating AggregateCSClause (quals=true, targetlist=false)
WARNING:    AggregateScan returned a path, adding it
WARNING:  AggregateScan::plan_custom_path called
WARNING:    Setting scanrelid = 1 (base scan)
WARNING:    rel.relid = 0
WARNING:    tlist has 1 entries
WARNING:  AggregateScan::begin_custom_scan called - THIS IS A BUG if query has window functions!
WARNING:    execution_rti = 1
                                                                                                                                  QUERY PLAN                                                                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Aggregate Scan) on public.logs
   Output: now()
   Index: logs_idx
   Tantivy Query: {"with_index":{"query":{"parse_with_field":{"field":"description","query_string":"error","lenient":null,"conjunction_mode":null}}}}
     Applies to Aggregates: CUSTOM_AGG({"avg":{"field":"response_time"}})
     Aggregate Definition: {"0":{"aggs":{"0":{"avg":{"field":"response_time","missing":null}}},"filter":{"range":{"field":"status_code","is_datetime":false,"lower_bound":{"included":500},"upper_bound":null}}},"_doc_count":{"value_count":{"field":"ctid","missing":null}}}
(6 rows)

SELECT paradedb.agg('{"avg": {"field": "response_time"}}'::jsonb) 
       FILTER (WHERE status_code >= 500)
FROM logs
WHERE description @@@ 'error';
WARNING:  Hook: UPPERREL_GROUP_AGG stage, calling AggregateScan
WARNING:  AggregateScan::create_custom_path called at stage 2
WARNING:    input_rel.reloptkind = 0
WARNING:    AggregateCSClause::build starting
WARNING:    TargetList::from_pg starting
WARNING:    TargetList: is_window_stage = false
WARNING:    TargetList: got schema
WARNING:    TargetList: using output_rel reltarget (1 exprs)
WARNING:    TargetList: starting to process 1 expressions
WARNING:    TargetList: processing expr 0 with node_tag=T_Aggref
WARNING:    targetlist extracted
WARNING:    orderby extracted
WARNING:    limit_offset extracted
WARNING:    quals extracted
WARNING:    Creating AggregateCSClause (quals=true, targetlist=false)
WARNING:    AggregateScan returned a path, adding it
WARNING:  AggregateScan::plan_custom_path called
WARNING:    Setting scanrelid = 1 (base scan)
WARNING:    rel.relid = 0
WARNING:    tlist has 1 entries
WARNING:  AggregateScan::begin_custom_scan called - THIS IS A BUG if query has window functions!
WARNING:    execution_rti = 1
ERROR:  called `Result::unwrap()` on an `Err` value: UnsupportedIntoConversion("jsonb")
-- Test 5: Custom agg with FILTER and OVER (window function)
EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF, VERBOSE)
SELECT *, paradedb.agg('{"terms": {"field": "category"}}'::jsonb) 
       FILTER (WHERE status_code >= 500) OVER ()
FROM logs
WHERE description @@@ 'error'
ORDER BY timestamp DESC LIMIT 10;
WARNING:  Hook: UPPERREL_WINDOW stage, calling AggregateScan
WARNING:  AggregateScan::create_custom_path called at stage 3
WARNING:    input_rel.reloptkind = 0
WARNING:    UPPERREL_WINDOW: checking available target lists
WARNING:    input_rel.reltarget has 7 exprs
WARNING:    output_rel.reltarget has 0 exprs
WARNING:    output_rel.pathlist has 1 paths
WARNING:    input_rel.pathlist has 2 paths
WARNING:    input_rel.cheapest_total_path.pathtarget has 7 exprs
WARNING:      input path expr 0: type=T_Var
WARNING:      input path expr 1: type=T_Var
WARNING:      input path expr 2: type=T_Var
WARNING:      input path expr 3: type=T_Var
WARNING:      input path expr 4: type=T_Var
WARNING:      input path expr 5: type=T_Var
WARNING:      input path expr 6: type=T_Var
WARNING:    parse.windowClause has 1 entries
WARNING:    parse.targetList has 1 WindowFunc nodes
WARNING:    root.processed_tlist has 8 entries
WARNING:    root.processed_tlist has 1 WindowFunc nodes
WARNING:    AggregateCSClause::build starting
WARNING:    TargetList::from_pg starting
WARNING:    TargetList: is_window_stage = true
WARNING:    TargetList: got schema
WARNING:    TargetList: UPPERREL_WINDOW using input_rel.reltarget (7 base columns)
WARNING:      base column 0: Var with varno=1, varattno=1
WARNING:      base column 1: Var with varno=1, varattno=2
WARNING:      base column 2: Var with varno=1, varattno=3
WARNING:      base column 3: Var with varno=1, varattno=4
WARNING:      base column 4: Var with varno=1, varattno=5
WARNING:      base column 5: Var with varno=1, varattno=6
WARNING:      base column 6: Var with varno=1, varattno=7
WARNING:    TargetList: combined 8 total exprs (7 base + 1 window funcs)
WARNING:    TargetList: starting to process 8 expressions
WARNING:    TargetList: processing expr 0 with node_tag=T_Var
WARNING:    TargetList: processing expr 1 with node_tag=T_Var
WARNING:    TargetList: processing expr 2 with node_tag=T_Var
WARNING:    TargetList: processing expr 3 with node_tag=T_Var
WARNING:    TargetList: processing expr 4 with node_tag=T_Var
WARNING:    TargetList: processing expr 5 with node_tag=T_Var
WARNING:    TargetList: processing expr 6 with node_tag=T_Var
WARNING:    TargetList: processing expr 7 with node_tag=T_WindowFunc
WARNING:    AggregateScan returned None
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit
   Output: id, description, severity, category, response_time, status_code, "timestamp", (paradedb.agg('{"terms": {"field": "category"}}'::jsonb) FILTER (WHERE (status_code >= 500)) OVER (?))
   ->  Sort
         Output: id, description, severity, category, response_time, status_code, "timestamp", (paradedb.agg('{"terms": {"field": "category"}}'::jsonb) FILTER (WHERE (status_code >= 500)) OVER (?))
         Sort Key: logs."timestamp" DESC
         ->  WindowAgg
               Output: id, description, severity, category, response_time, status_code, "timestamp", paradedb.agg('{"terms": {"field": "category"}}'::jsonb) FILTER (WHERE (status_code >= 500)) OVER (?)
               ->  Custom Scan (ParadeDB Scan) on public.logs
                     Output: id, description, severity, category, response_time, status_code, "timestamp"
                     Table: logs
                     Index: logs_idx
                     Exec Method: NormalScanExecState
                     Scores: false
                     Tantivy Query: {"with_index":{"query":{"parse_with_field":{"field":"description","query_string":"error","lenient":null,"conjunction_mode":null}}}}
(14 rows)

SELECT *, paradedb.agg('{"terms": {"field": "category"}}'::jsonb) 
       FILTER (WHERE status_code >= 500) OVER ()
FROM logs
WHERE description @@@ 'error'
ORDER BY timestamp DESC LIMIT 10;
WARNING:  Hook: UPPERREL_WINDOW stage, calling AggregateScan
WARNING:  AggregateScan::create_custom_path called at stage 3
WARNING:    input_rel.reloptkind = 0
WARNING:    UPPERREL_WINDOW: checking available target lists
WARNING:    input_rel.reltarget has 7 exprs
WARNING:    output_rel.reltarget has 0 exprs
WARNING:    output_rel.pathlist has 1 paths
WARNING:    input_rel.pathlist has 2 paths
WARNING:    input_rel.cheapest_total_path.pathtarget has 7 exprs
WARNING:      input path expr 0: type=T_Var
WARNING:      input path expr 1: type=T_Var
WARNING:      input path expr 2: type=T_Var
WARNING:      input path expr 3: type=T_Var
WARNING:      input path expr 4: type=T_Var
WARNING:      input path expr 5: type=T_Var
WARNING:      input path expr 6: type=T_Var
WARNING:    parse.windowClause has 1 entries
WARNING:    parse.targetList has 1 WindowFunc nodes
WARNING:    root.processed_tlist has 8 entries
WARNING:    root.processed_tlist has 1 WindowFunc nodes
WARNING:    AggregateCSClause::build starting
WARNING:    TargetList::from_pg starting
WARNING:    TargetList: is_window_stage = true
WARNING:    TargetList: got schema
WARNING:    TargetList: UPPERREL_WINDOW using input_rel.reltarget (7 base columns)
WARNING:      base column 0: Var with varno=1, varattno=1
WARNING:      base column 1: Var with varno=1, varattno=2
WARNING:      base column 2: Var with varno=1, varattno=3
WARNING:      base column 3: Var with varno=1, varattno=4
WARNING:      base column 4: Var with varno=1, varattno=5
WARNING:      base column 5: Var with varno=1, varattno=6
WARNING:      base column 6: Var with varno=1, varattno=7
WARNING:    TargetList: combined 8 total exprs (7 base + 1 window funcs)
WARNING:    TargetList: starting to process 8 expressions
WARNING:    TargetList: processing expr 0 with node_tag=T_Var
WARNING:    TargetList: processing expr 1 with node_tag=T_Var
WARNING:    TargetList: processing expr 2 with node_tag=T_Var
WARNING:    TargetList: processing expr 3 with node_tag=T_Var
WARNING:    TargetList: processing expr 4 with node_tag=T_Var
WARNING:    TargetList: processing expr 5 with node_tag=T_Var
WARNING:    TargetList: processing expr 6 with node_tag=T_Var
WARNING:    TargetList: processing expr 7 with node_tag=T_WindowFunc
WARNING:    AggregateScan returned None
ERROR:  paradedb.agg() placeholder function should not be executed.
-- Test 6: EXPLAIN query to show custom agg is recognized
EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF, VERBOSE)
SELECT category, 
       COUNT(*),
       paradedb.agg('{"max": {"field": "response_time"}}'::jsonb)
FROM logs
WHERE description @@@ 'error'
GROUP BY category;
WARNING:  Hook: UPPERREL_GROUP_AGG stage, calling AggregateScan
WARNING:  AggregateScan::create_custom_path called at stage 2
WARNING:    input_rel.reloptkind = 0
WARNING:    AggregateCSClause::build starting
WARNING:    TargetList::from_pg starting
WARNING:    TargetList: is_window_stage = false
WARNING:    TargetList: got schema
WARNING:    TargetList: using output_rel reltarget (3 exprs)
WARNING:    TargetList: starting to process 3 expressions
WARNING:    TargetList: processing expr 0 with node_tag=T_Var
WARNING:    TargetList: processing expr 1 with node_tag=T_Aggref
WARNING:    TargetList: processing expr 2 with node_tag=T_Aggref
WARNING:    targetlist extracted
WARNING:    orderby extracted
WARNING:    limit_offset extracted
WARNING:    quals extracted
WARNING:    Creating AggregateCSClause (quals=true, targetlist=false)
WARNING:    AggregateScan returned a path, adding it
WARNING:  AggregateScan::plan_custom_path called
WARNING:    Setting scanrelid = 1 (base scan)
WARNING:    rel.relid = 0
WARNING:    tlist has 3 entries
WARNING:  AggregateScan::begin_custom_scan called - THIS IS A BUG if query has window functions!
WARNING:    execution_rti = 1
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Aggregate Scan) on public.logs
   Output: category, now(), now()
   Index: logs_idx
   Tantivy Query: {"with_index":{"query":{"parse_with_field":{"field":"description","query_string":"error","lenient":null,"conjunction_mode":null}}}}
     Applies to Aggregates: COUNT(*), CUSTOM_AGG({"max":{"field":"response_time"}})
     Group By: category
     Aggregate Definition: {"grouped":{"aggs":{"0":{"max":{"field":"response_time","missing":null}}},"terms":{"field":"category","segment_size":65000,"size":65000}}}
(7 rows)

SELECT category, 
       COUNT(*),
       paradedb.agg('{"max": {"field": "response_time"}}'::jsonb)
FROM logs
WHERE description @@@ 'error'
GROUP BY category;
WARNING:  Hook: UPPERREL_GROUP_AGG stage, calling AggregateScan
WARNING:  AggregateScan::create_custom_path called at stage 2
WARNING:    input_rel.reloptkind = 0
WARNING:    AggregateCSClause::build starting
WARNING:    TargetList::from_pg starting
WARNING:    TargetList: is_window_stage = false
WARNING:    TargetList: got schema
WARNING:    TargetList: using output_rel reltarget (3 exprs)
WARNING:    TargetList: starting to process 3 expressions
WARNING:    TargetList: processing expr 0 with node_tag=T_Var
WARNING:    TargetList: processing expr 1 with node_tag=T_Aggref
WARNING:    TargetList: processing expr 2 with node_tag=T_Aggref
WARNING:    targetlist extracted
WARNING:    orderby extracted
WARNING:    limit_offset extracted
WARNING:    quals extracted
WARNING:    Creating AggregateCSClause (quals=true, targetlist=false)
WARNING:    AggregateScan returned a path, adding it
WARNING:  AggregateScan::plan_custom_path called
WARNING:    Setting scanrelid = 1 (base scan)
WARNING:    rel.relid = 0
WARNING:    tlist has 3 entries
WARNING:  AggregateScan::begin_custom_scan called - THIS IS A BUG if query has window functions!
WARNING:    execution_rti = 1
ERROR:  called `Result::unwrap()` on an `Err` value: UnsupportedIntoConversion("jsonb")
-- Cleanup
DROP TABLE logs CASCADE;
