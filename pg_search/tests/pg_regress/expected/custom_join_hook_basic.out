-- Test basic join hook functionality
-- This test verifies that our custom join hook is being called
-- Create the extension first
CREATE EXTENSION IF NOT EXISTS pg_search;
-- Enable the custom join feature
SET paradedb.enable_custom_join = true;
SET paradedb.enable_topn_join_optimization = true;
-- Create test tables with BM25 indexes
CREATE TABLE documents_join_test (
    id SERIAL PRIMARY KEY,
    title TEXT,
    content TEXT
);
CREATE TABLE files_join_test (
    id SERIAL PRIMARY KEY,
    document_id INTEGER,
    filename TEXT,
    content TEXT
);
-- Create a third table for 3-way joins
CREATE TABLE authors_join_test (
    id SERIAL PRIMARY KEY,
    document_id INTEGER,
    author_name TEXT,
    bio TEXT
);
-- Insert test data
INSERT INTO documents_join_test (title, content) VALUES 
    ('Document 1', 'This is the first document about technology'),
    ('Document 2', 'This is the second document about science and research'),
    ('Document 3', 'This is the third document about research and data analysis');
INSERT INTO files_join_test (document_id, filename, content) VALUES 
    (1, 'file1.txt', 'Technology file content with data'),
    (2, 'file2.txt', 'Science file content with research data'),
    (3, 'file3.txt', 'Research file content and analysis data');
INSERT INTO authors_join_test (document_id, author_name, bio) VALUES 
    (1, 'John Smith', 'Expert in technology and innovation with research background'),
    (2, 'Jane Doe', 'Scientist specializing in research methods and data analysis'),
    (3, 'Bob Wilson', 'Research analyst with focus on data science and research');
-- Create BM25 indexes
CREATE INDEX documents_join_test_idx ON documents_join_test USING bm25 (
    id,
    title,
    content
) WITH (
    key_field = 'id',
    text_fields = '{"title": {"tokenizer": {"type": "default"}}, "content": {"tokenizer": {"type": "default"}}}'
);
CREATE INDEX files_join_test_idx ON files_join_test USING bm25 (
    id,
    document_id,
    filename,
    content
) WITH (
    key_field = 'id',
    numeric_fields = '{"document_id": {"fast": true}}',
    text_fields = '{"filename": {"tokenizer": {"type": "default"}}, "content": {"tokenizer": {"type": "default"}}}'
);
CREATE INDEX authors_join_test_idx ON authors_join_test USING bm25 (
    id,
    document_id,
    author_name,
    bio
) WITH (
    key_field = 'id',
    numeric_fields = '{"document_id": {"fast": true}}',
    text_fields = '{"author_name": {"tokenizer": {"type": "default"}}, "bio": {"tokenizer": {"type": "default"}}}'
);
-- Test 1: Simple INNER JOIN with search predicates
-- This should trigger our join hook and show debug output
SELECT d.id, d.title, f.filename
FROM documents_join_test d
JOIN files_join_test f ON d.id = f.document_id
WHERE d.content @@@ 'technology' AND f.content @@@ 'file';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["documents_join_test"], inner relids: ["files_join_test"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Checked relations ["documents_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation files_join_test (rti 2)
WARNING:  ParadeDB: Checked relations ["files_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Extracted search query for documents_join_test: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation files_join_test (rti 2)
WARNING:  ParadeDB: Extracted search query for files_join_test: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for documents_join_test - uses_search: true
WARNING:  ParadeDB: Inner predicate for files_join_test - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["documents_join_test"], inner: ["files_join_test"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["documents_join_test"], inner: ["files_join_test"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["files_join_test"], inner relids: ["documents_join_test"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation files_join_test (rti 2)
WARNING:  ParadeDB: Checked relations ["files_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Checked relations ["documents_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation files_join_test (rti 2)
WARNING:  ParadeDB: Extracted search query for files_join_test: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Extracted search query for documents_join_test: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for files_join_test - uses_search: true
WARNING:  ParadeDB: Inner predicate for documents_join_test - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["files_join_test"], inner: ["documents_join_test"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["files_join_test"], inner: ["documents_join_test"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = true
WARNING:  ParadeDB: Found join search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: ========== JOIN NODE PLANNING ==========
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Using PostgreSQL's provided target list with 3 entries, processed_tlist has 3 entries
WARNING:  ParadeDB: Found 2 relevant RTIs for score functions: {2, 1}
WARNING:  ParadeDB: No score functions detected - using PostgreSQL's standard target list handling for joins
WARNING:  ParadeDB: ========== JOIN PLANNING COMPLETE ==========
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: Input Target List: ({TARGETENTRY :expr {VAR :varno 1 :varattno 1 :vartype 23 :vartypmod -1 :varcollid 0 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 1 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 1 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 3 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 3 :location -1} :resno 3 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: Custom Target List We're Setting: ({TARGETENTRY :expr {VAR :varno 1 :varattno 1 :vartype 23 :vartypmod -1 :varcollid 0 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 1 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 1 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 3 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 3 :location -1} :resno 3 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: ==========================================
ERROR:  variable not found in subplan target list
-- Test 2: JOIN without search predicates (should not trigger custom join)
SELECT d.id, d.title, f.filename  
FROM documents_join_test d
JOIN files_join_test f ON d.id = f.document_id
WHERE d.id = 1;
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["documents_join_test"], inner relids: ["files_join_test"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Checked relations ["documents_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation files_join_test (rti 2)
WARNING:  ParadeDB: Checked relations ["files_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Extracted search query for documents_join_test: uses_search_operator=false
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation files_join_test (rti 2)
WARNING:  ParadeDB: Extracted search query for files_join_test: uses_search_operator=false
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 0 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Skipping custom join - no search operators found (outer: false, inner: false)
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["files_join_test"], inner relids: ["documents_join_test"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation files_join_test (rti 2)
WARNING:  ParadeDB: Checked relations ["files_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Checked relations ["documents_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation files_join_test (rti 2)
WARNING:  ParadeDB: Extracted search query for files_join_test: uses_search_operator=false
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Extracted search query for documents_join_test: uses_search_operator=false
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 0 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Skipping custom join - no search operators found (outer: false, inner: false)
 id |   title    | filename  
----+------------+-----------
  1 | Document 1 | file1.txt
(1 row)

-- Test 3: Search on only one side (unilateral join)
SELECT d.id, d.title, f.filename
FROM documents_join_test d  
JOIN files_join_test f ON d.id = f.document_id
WHERE d.content @@@ 'science';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["documents_join_test"], inner relids: ["files_join_test"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Checked relations ["documents_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation files_join_test (rti 2)
WARNING:  ParadeDB: Checked relations ["files_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Extracted search query for documents_join_test: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 0 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 0, bilateral: false
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for documents_join_test - uses_search: true
WARNING:  ParadeDB: Unilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Will use search on one side and heap scanning on the other side
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["documents_join_test"], inner: ["files_join_test"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["documents_join_test"], inner: ["files_join_test"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Unilateral join - outer has search, inner needs table scan
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 75.00, total_cost: 75.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["files_join_test"], inner relids: ["documents_join_test"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation files_join_test (rti 2)
WARNING:  ParadeDB: Checked relations ["files_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Checked relations ["documents_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Extracted search query for documents_join_test: uses_search_operator=true
WARNING:  ParadeDB: Extracted 0 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 0, inner: 1, bilateral: false
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Inner predicate for documents_join_test - uses_search: true
WARNING:  ParadeDB: Unilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Will use search on one side and heap scanning on the other side
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["files_join_test"], inner: ["documents_join_test"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["files_join_test"], inner: ["documents_join_test"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Unilateral join - inner has search, outer needs table scan
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 75.00, total_cost: 75.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = true
WARNING:  ParadeDB: Found join search predicates - outer: 1, inner: 0, bilateral: false
WARNING:  ParadeDB: ========== JOIN NODE PLANNING ==========
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Using PostgreSQL's provided target list with 3 entries, processed_tlist has 3 entries
WARNING:  ParadeDB: Found 1 relevant RTIs for score functions: {1}
WARNING:  ParadeDB: No score functions detected - using PostgreSQL's standard target list handling for joins
WARNING:  ParadeDB: ========== JOIN PLANNING COMPLETE ==========
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: Input Target List: ({TARGETENTRY :expr {VAR :varno 1 :varattno 1 :vartype 23 :vartypmod -1 :varcollid 0 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 1 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 1 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 3 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 3 :location -1} :resno 3 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: Custom Target List We're Setting: ({TARGETENTRY :expr {VAR :varno 1 :varattno 1 :vartype 23 :vartypmod -1 :varcollid 0 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 1 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 1 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 3 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 3 :location -1} :resno 3 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: ==========================================
ERROR:  variable not found in subplan target list
-- Test 4: 3-way join with bilateral search (documents + files)
SELECT d.id, d.title, f.filename, a.author_name
FROM documents_join_test d
JOIN files_join_test f ON d.id = f.document_id
JOIN authors_join_test a ON d.id = a.document_id
WHERE d.content @@@ 'technology' AND f.content @@@ 'file';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["documents_join_test"], inner relids: ["files_join_test"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Checked relations ["documents_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation files_join_test (rti 2)
WARNING:  ParadeDB: Checked relations ["files_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Extracted search query for documents_join_test: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation files_join_test (rti 2)
WARNING:  ParadeDB: Extracted search query for files_join_test: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for documents_join_test - uses_search: true
WARNING:  ParadeDB: Inner predicate for files_join_test - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["documents_join_test"], inner: ["files_join_test"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["documents_join_test"], inner: ["files_join_test"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["files_join_test"], inner relids: ["documents_join_test"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation files_join_test (rti 2)
WARNING:  ParadeDB: Checked relations ["files_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Checked relations ["documents_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation files_join_test (rti 2)
WARNING:  ParadeDB: Extracted search query for files_join_test: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Extracted search query for documents_join_test: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for files_join_test - uses_search: true
WARNING:  ParadeDB: Inner predicate for documents_join_test - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["files_join_test"], inner: ["documents_join_test"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["files_join_test"], inner: ["documents_join_test"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["documents_join_test"], inner relids: ["authors_join_test"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Checked relations ["documents_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation authors_join_test (rti 4)
WARNING:  ParadeDB: Checked relations ["authors_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 4.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Extracted search query for documents_join_test: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 0 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 0, bilateral: false
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for documents_join_test - uses_search: true
WARNING:  ParadeDB: Unilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Will use search on one side and heap scanning on the other side
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["documents_join_test"], inner: ["authors_join_test"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["documents_join_test"], inner: ["authors_join_test"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Unilateral join - outer has search, inner needs table scan
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 75.00, total_cost: 75.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["authors_join_test"], inner relids: ["documents_join_test"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation authors_join_test (rti 4)
WARNING:  ParadeDB: Checked relations ["authors_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Checked relations ["documents_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 4.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Extracted search query for documents_join_test: uses_search_operator=true
WARNING:  ParadeDB: Extracted 0 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 0, inner: 1, bilateral: false
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Inner predicate for documents_join_test - uses_search: true
WARNING:  ParadeDB: Unilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Will use search on one side and heap scanning on the other side
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["authors_join_test"], inner: ["documents_join_test"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["authors_join_test"], inner: ["documents_join_test"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Unilateral join - inner has search, outer needs table scan
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 75.00, total_cost: 75.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["files_join_test"], inner relids: ["authors_join_test"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation files_join_test (rti 2)
WARNING:  ParadeDB: Checked relations ["files_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation authors_join_test (rti 4)
WARNING:  ParadeDB: Checked relations ["authors_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 2.document_id = 4.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation files_join_test (rti 2)
WARNING:  ParadeDB: Extracted search query for files_join_test: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 0 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 0, bilateral: false
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for files_join_test - uses_search: true
WARNING:  ParadeDB: Unilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Will use search on one side and heap scanning on the other side
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["files_join_test"], inner: ["authors_join_test"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["files_join_test"], inner: ["authors_join_test"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Unilateral join - outer has search, inner needs table scan
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 75.00, total_cost: 75.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["authors_join_test"], inner relids: ["files_join_test"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation authors_join_test (rti 4)
WARNING:  ParadeDB: Checked relations ["authors_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation files_join_test (rti 2)
WARNING:  ParadeDB: Checked relations ["files_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 2.document_id = 4.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation files_join_test (rti 2)
WARNING:  ParadeDB: Extracted search query for files_join_test: uses_search_operator=true
WARNING:  ParadeDB: Extracted 0 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 0, inner: 1, bilateral: false
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Inner predicate for files_join_test - uses_search: true
WARNING:  ParadeDB: Unilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Will use search on one side and heap scanning on the other side
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["authors_join_test"], inner: ["files_join_test"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["authors_join_test"], inner: ["files_join_test"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Unilateral join - inner has search, outer needs table scan
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 75.00, total_cost: 75.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["documents_join_test", "files_join_test"], inner relids: ["authors_join_test"]
WARNING:  ParadeDB: Outer side is composite, inner is base - checking feasibility
WARNING:  ParadeDB: Composite joins not yet supported - intermediate result access not implemented
WARNING:  ParadeDB: Rejecting composite join to allow PostgreSQL's optimized default processing
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["authors_join_test"], inner relids: ["documents_join_test", "files_join_test"]
WARNING:  ParadeDB: Outer side is base, inner is composite - checking feasibility
WARNING:  ParadeDB: Composite joins not yet supported - intermediate result access not implemented
WARNING:  ParadeDB: Rejecting composite join to allow PostgreSQL's optimized default processing
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["documents_join_test", "authors_join_test"], inner relids: ["files_join_test"]
WARNING:  ParadeDB: Outer side is composite, inner is base - checking feasibility
WARNING:  ParadeDB: Composite joins not yet supported - intermediate result access not implemented
WARNING:  ParadeDB: Rejecting composite join to allow PostgreSQL's optimized default processing
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["files_join_test"], inner relids: ["documents_join_test", "authors_join_test"]
WARNING:  ParadeDB: Outer side is base, inner is composite - checking feasibility
WARNING:  ParadeDB: Composite joins not yet supported - intermediate result access not implemented
WARNING:  ParadeDB: Rejecting composite join to allow PostgreSQL's optimized default processing
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["files_join_test", "authors_join_test"], inner relids: ["documents_join_test"]
WARNING:  ParadeDB: Outer side is composite, inner is base - checking feasibility
WARNING:  ParadeDB: Composite joins not yet supported - intermediate result access not implemented
WARNING:  ParadeDB: Rejecting composite join to allow PostgreSQL's optimized default processing
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["documents_join_test"], inner relids: ["files_join_test", "authors_join_test"]
WARNING:  ParadeDB: Outer side is base, inner is composite - checking feasibility
WARNING:  ParadeDB: Composite joins not yet supported - intermediate result access not implemented
WARNING:  ParadeDB: Rejecting composite join to allow PostgreSQL's optimized default processing
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = true
WARNING:  ParadeDB: Found join search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: ========== JOIN NODE PLANNING ==========
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Using PostgreSQL's provided target list with 4 entries, processed_tlist has 4 entries
WARNING:  ParadeDB: Found 2 relevant RTIs for score functions: {2, 1}
WARNING:  ParadeDB: No score functions detected - using PostgreSQL's standard target list handling for joins
WARNING:  ParadeDB: ========== JOIN PLANNING COMPLETE ==========
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: Input Target List: ({TARGETENTRY :expr {VAR :varno 1 :varattno 1 :vartype 23 :vartypmod -1 :varcollid 0 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 1 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 1 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 3 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 3 :location -1} :resno 3 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 2 :vartype 23 :vartypmod -1 :varcollid 0 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 2 :location -1} :resno 4 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: Custom Target List We're Setting: ({TARGETENTRY :expr {VAR :varno 1 :varattno 1 :vartype 23 :vartypmod -1 :varcollid 0 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 1 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 1 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 3 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 3 :location -1} :resno 3 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 2 :vartype 23 :vartypmod -1 :varcollid 0 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 2 :location -1} :resno 4 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: ==========================================
ERROR:  variable not found in subplan target list
-- Test 5: 3-way join with trilateral search (all three tables)
SELECT d.id, d.title, f.filename, a.author_name
FROM documents_join_test d
JOIN files_join_test f ON d.id = f.document_id
JOIN authors_join_test a ON d.id = a.document_id
WHERE d.content @@@ 'science' AND f.content @@@ 'file' AND a.bio @@@ 'research';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["documents_join_test"], inner relids: ["files_join_test"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Checked relations ["documents_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation files_join_test (rti 2)
WARNING:  ParadeDB: Checked relations ["files_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Extracted search query for documents_join_test: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation files_join_test (rti 2)
WARNING:  ParadeDB: Extracted search query for files_join_test: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for documents_join_test - uses_search: true
WARNING:  ParadeDB: Inner predicate for files_join_test - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["documents_join_test"], inner: ["files_join_test"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["documents_join_test"], inner: ["files_join_test"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["files_join_test"], inner relids: ["documents_join_test"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation files_join_test (rti 2)
WARNING:  ParadeDB: Checked relations ["files_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Checked relations ["documents_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation files_join_test (rti 2)
WARNING:  ParadeDB: Extracted search query for files_join_test: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Extracted search query for documents_join_test: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for files_join_test - uses_search: true
WARNING:  ParadeDB: Inner predicate for documents_join_test - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["files_join_test"], inner: ["documents_join_test"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["files_join_test"], inner: ["documents_join_test"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["documents_join_test"], inner relids: ["authors_join_test"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Checked relations ["documents_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation authors_join_test (rti 4)
WARNING:  ParadeDB: Checked relations ["authors_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 4.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Extracted search query for documents_join_test: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation authors_join_test (rti 4)
WARNING:  ParadeDB: Extracted search query for authors_join_test: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for documents_join_test - uses_search: true
WARNING:  ParadeDB: Inner predicate for authors_join_test - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["documents_join_test"], inner: ["authors_join_test"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["documents_join_test"], inner: ["authors_join_test"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["authors_join_test"], inner relids: ["documents_join_test"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation authors_join_test (rti 4)
WARNING:  ParadeDB: Checked relations ["authors_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Checked relations ["documents_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 4.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation authors_join_test (rti 4)
WARNING:  ParadeDB: Extracted search query for authors_join_test: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Extracted search query for documents_join_test: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for authors_join_test - uses_search: true
WARNING:  ParadeDB: Inner predicate for documents_join_test - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["authors_join_test"], inner: ["documents_join_test"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["authors_join_test"], inner: ["documents_join_test"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["files_join_test"], inner relids: ["authors_join_test"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation files_join_test (rti 2)
WARNING:  ParadeDB: Checked relations ["files_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation authors_join_test (rti 4)
WARNING:  ParadeDB: Checked relations ["authors_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 2.document_id = 4.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation files_join_test (rti 2)
WARNING:  ParadeDB: Extracted search query for files_join_test: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation authors_join_test (rti 4)
WARNING:  ParadeDB: Extracted search query for authors_join_test: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for files_join_test - uses_search: true
WARNING:  ParadeDB: Inner predicate for authors_join_test - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["files_join_test"], inner: ["authors_join_test"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["files_join_test"], inner: ["authors_join_test"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["authors_join_test"], inner relids: ["files_join_test"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation authors_join_test (rti 4)
WARNING:  ParadeDB: Checked relations ["authors_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation files_join_test (rti 2)
WARNING:  ParadeDB: Checked relations ["files_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 2.document_id = 4.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation authors_join_test (rti 4)
WARNING:  ParadeDB: Extracted search query for authors_join_test: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation files_join_test (rti 2)
WARNING:  ParadeDB: Extracted search query for files_join_test: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for authors_join_test - uses_search: true
WARNING:  ParadeDB: Inner predicate for files_join_test - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["authors_join_test"], inner: ["files_join_test"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["authors_join_test"], inner: ["files_join_test"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["documents_join_test", "files_join_test"], inner relids: ["authors_join_test"]
WARNING:  ParadeDB: Outer side is composite, inner is base - checking feasibility
WARNING:  ParadeDB: Composite joins not yet supported - intermediate result access not implemented
WARNING:  ParadeDB: Rejecting composite join to allow PostgreSQL's optimized default processing
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["authors_join_test"], inner relids: ["documents_join_test", "files_join_test"]
WARNING:  ParadeDB: Outer side is base, inner is composite - checking feasibility
WARNING:  ParadeDB: Composite joins not yet supported - intermediate result access not implemented
WARNING:  ParadeDB: Rejecting composite join to allow PostgreSQL's optimized default processing
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["documents_join_test", "authors_join_test"], inner relids: ["files_join_test"]
WARNING:  ParadeDB: Outer side is composite, inner is base - checking feasibility
WARNING:  ParadeDB: Composite joins not yet supported - intermediate result access not implemented
WARNING:  ParadeDB: Rejecting composite join to allow PostgreSQL's optimized default processing
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["files_join_test"], inner relids: ["documents_join_test", "authors_join_test"]
WARNING:  ParadeDB: Outer side is base, inner is composite - checking feasibility
WARNING:  ParadeDB: Composite joins not yet supported - intermediate result access not implemented
WARNING:  ParadeDB: Rejecting composite join to allow PostgreSQL's optimized default processing
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["files_join_test", "authors_join_test"], inner relids: ["documents_join_test"]
WARNING:  ParadeDB: Outer side is composite, inner is base - checking feasibility
WARNING:  ParadeDB: Composite joins not yet supported - intermediate result access not implemented
WARNING:  ParadeDB: Rejecting composite join to allow PostgreSQL's optimized default processing
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["documents_join_test"], inner relids: ["files_join_test", "authors_join_test"]
WARNING:  ParadeDB: Outer side is base, inner is composite - checking feasibility
WARNING:  ParadeDB: Composite joins not yet supported - intermediate result access not implemented
WARNING:  ParadeDB: Rejecting composite join to allow PostgreSQL's optimized default processing
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = false
WARNING:  ParadeDB: No join search predicates found in private data
WARNING:  ParadeDB: ========== SCAN NODE PLANNING ==========
WARNING:  ParadeDB: Planning regular scan node
WARNING:  ParadeDB: Completed scan node planning
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: Input Target List: ({TARGETENTRY :expr {VAR :varno 4 :varattno 3 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 4 :varattnosyn 3 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 4 :varattno 2 :vartype 23 :vartypmod -1 :varcollid 0 :varnullingrels (b) :varlevelsup 0 :varnosyn 4 :varattnosyn 2 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: Custom Target List We're Setting: ({TARGETENTRY :expr {VAR :varno 4 :varattno 3 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 4 :varattnosyn 3 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 4 :varattno 2 :vartype 23 :vartypmod -1 :varcollid 0 :varnullingrels (b) :varlevelsup 0 :varnosyn 4 :varattnosyn 2 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: ==========================================
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = false
WARNING:  ParadeDB: No join search predicates found in private data
WARNING:  ParadeDB: ========== SCAN NODE PLANNING ==========
WARNING:  ParadeDB: Planning regular scan node
WARNING:  ParadeDB: Completed scan node planning
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: Input Target List: ({TARGETENTRY :expr {VAR :varno 2 :varattno 3 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 3 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 2 :vartype 23 :vartypmod -1 :varcollid 0 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 2 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: Custom Target List We're Setting: ({TARGETENTRY :expr {VAR :varno 2 :varattno 3 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 3 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 2 :vartype 23 :vartypmod -1 :varcollid 0 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 2 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: ==========================================
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = false
WARNING:  ParadeDB: No join search predicates found in private data
WARNING:  ParadeDB: ========== SCAN NODE PLANNING ==========
WARNING:  ParadeDB: Planning regular scan node
WARNING:  ParadeDB: Completed scan node planning
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: Input Target List: ({TARGETENTRY :expr {VAR :varno 1 :varattno 1 :vartype 23 :vartypmod -1 :varcollid 0 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 1 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 1 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: Custom Target List We're Setting: ({TARGETENTRY :expr {VAR :varno 1 :varattno 1 :vartype 23 :vartypmod -1 :varcollid 0 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 1 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 1 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: ==========================================
 id |   title    | filename  | author_name 
----+------------+-----------+-------------
  2 | Document 2 | file2.txt | Jane Doe
(1 row)

-- Test 6: 3-way join with unilateral search (only documents)
SELECT d.id, d.title, f.filename, a.author_name
FROM documents_join_test d
JOIN files_join_test f ON d.id = f.document_id
JOIN authors_join_test a ON d.id = a.document_id
WHERE d.content @@@ 'research';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["documents_join_test"], inner relids: ["files_join_test"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Checked relations ["documents_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation files_join_test (rti 2)
WARNING:  ParadeDB: Checked relations ["files_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Extracted search query for documents_join_test: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 0 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 0, bilateral: false
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for documents_join_test - uses_search: true
WARNING:  ParadeDB: Unilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Will use search on one side and heap scanning on the other side
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["documents_join_test"], inner: ["files_join_test"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["documents_join_test"], inner: ["files_join_test"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Unilateral join - outer has search, inner needs table scan
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 75.00, total_cost: 75.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["files_join_test"], inner relids: ["documents_join_test"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation files_join_test (rti 2)
WARNING:  ParadeDB: Checked relations ["files_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Checked relations ["documents_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Extracted search query for documents_join_test: uses_search_operator=true
WARNING:  ParadeDB: Extracted 0 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 0, inner: 1, bilateral: false
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Inner predicate for documents_join_test - uses_search: true
WARNING:  ParadeDB: Unilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Will use search on one side and heap scanning on the other side
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["files_join_test"], inner: ["documents_join_test"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["files_join_test"], inner: ["documents_join_test"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Unilateral join - inner has search, outer needs table scan
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 75.00, total_cost: 75.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["documents_join_test"], inner relids: ["authors_join_test"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Checked relations ["documents_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation authors_join_test (rti 4)
WARNING:  ParadeDB: Checked relations ["authors_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 4.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Extracted search query for documents_join_test: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 0 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 0, bilateral: false
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for documents_join_test - uses_search: true
WARNING:  ParadeDB: Unilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Will use search on one side and heap scanning on the other side
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["documents_join_test"], inner: ["authors_join_test"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["documents_join_test"], inner: ["authors_join_test"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Unilateral join - outer has search, inner needs table scan
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 75.00, total_cost: 75.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["authors_join_test"], inner relids: ["documents_join_test"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation authors_join_test (rti 4)
WARNING:  ParadeDB: Checked relations ["authors_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Checked relations ["documents_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 4.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation documents_join_test (rti 1)
WARNING:  ParadeDB: Extracted search query for documents_join_test: uses_search_operator=true
WARNING:  ParadeDB: Extracted 0 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 0, inner: 1, bilateral: false
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Inner predicate for documents_join_test - uses_search: true
WARNING:  ParadeDB: Unilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Will use search on one side and heap scanning on the other side
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["authors_join_test"], inner: ["documents_join_test"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["authors_join_test"], inner: ["documents_join_test"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Unilateral join - inner has search, outer needs table scan
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 75.00, total_cost: 75.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["files_join_test"], inner relids: ["authors_join_test"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation files_join_test (rti 2)
WARNING:  ParadeDB: Checked relations ["files_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation authors_join_test (rti 4)
WARNING:  ParadeDB: Checked relations ["authors_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 2.document_id = 4.document_id
WARNING:  ParadeDB: Extracted 0 outer predicates, 0 inner predicates, 1 join conditions
WARNING:  ParadeDB: No search predicates found in join - skipping custom join
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["authors_join_test"], inner relids: ["files_join_test"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation authors_join_test (rti 4)
WARNING:  ParadeDB: Checked relations ["authors_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation files_join_test (rti 2)
WARNING:  ParadeDB: Checked relations ["files_join_test"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 2.document_id = 4.document_id
WARNING:  ParadeDB: Extracted 0 outer predicates, 0 inner predicates, 1 join conditions
WARNING:  ParadeDB: No search predicates found in join - skipping custom join
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["documents_join_test", "files_join_test"], inner relids: ["authors_join_test"]
WARNING:  ParadeDB: Outer side is composite, inner is base - checking feasibility
WARNING:  ParadeDB: Composite joins not yet supported - intermediate result access not implemented
WARNING:  ParadeDB: Rejecting composite join to allow PostgreSQL's optimized default processing
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["authors_join_test"], inner relids: ["documents_join_test", "files_join_test"]
WARNING:  ParadeDB: Outer side is base, inner is composite - checking feasibility
WARNING:  ParadeDB: Composite joins not yet supported - intermediate result access not implemented
WARNING:  ParadeDB: Rejecting composite join to allow PostgreSQL's optimized default processing
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["documents_join_test", "authors_join_test"], inner relids: ["files_join_test"]
WARNING:  ParadeDB: Outer side is composite, inner is base - checking feasibility
WARNING:  ParadeDB: Composite joins not yet supported - intermediate result access not implemented
WARNING:  ParadeDB: Rejecting composite join to allow PostgreSQL's optimized default processing
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["files_join_test"], inner relids: ["documents_join_test", "authors_join_test"]
WARNING:  ParadeDB: Outer side is base, inner is composite - checking feasibility
WARNING:  ParadeDB: Composite joins not yet supported - intermediate result access not implemented
WARNING:  ParadeDB: Rejecting composite join to allow PostgreSQL's optimized default processing
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["files_join_test", "authors_join_test"], inner relids: ["documents_join_test"]
WARNING:  ParadeDB: Outer side is composite, inner is base - checking feasibility
WARNING:  ParadeDB: Composite joins not yet supported - intermediate result access not implemented
WARNING:  ParadeDB: Rejecting composite join to allow PostgreSQL's optimized default processing
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["documents_join_test"], inner relids: ["files_join_test", "authors_join_test"]
WARNING:  ParadeDB: Outer side is base, inner is composite - checking feasibility
WARNING:  ParadeDB: Composite joins not yet supported - intermediate result access not implemented
WARNING:  ParadeDB: Rejecting composite join to allow PostgreSQL's optimized default processing
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = true
WARNING:  ParadeDB: Found join search predicates - outer: 1, inner: 0, bilateral: false
WARNING:  ParadeDB: ========== JOIN NODE PLANNING ==========
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Using PostgreSQL's provided target list with 4 entries, processed_tlist has 4 entries
WARNING:  ParadeDB: Found 1 relevant RTIs for score functions: {1}
WARNING:  ParadeDB: No score functions detected - using PostgreSQL's standard target list handling for joins
WARNING:  ParadeDB: ========== JOIN PLANNING COMPLETE ==========
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: Input Target List: ({TARGETENTRY :expr {VAR :varno 1 :varattno 1 :vartype 23 :vartypmod -1 :varcollid 0 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 1 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 1 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 3 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 3 :location -1} :resno 3 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 2 :vartype 23 :vartypmod -1 :varcollid 0 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 2 :location -1} :resno 4 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: Custom Target List We're Setting: ({TARGETENTRY :expr {VAR :varno 1 :varattno 1 :vartype 23 :vartypmod -1 :varcollid 0 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 1 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 1 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 3 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 3 :location -1} :resno 3 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 2 :vartype 23 :vartypmod -1 :varcollid 0 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 2 :location -1} :resno 4 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: ==========================================
ERROR:  variable not found in subplan target list
-- Cleanup
DROP TABLE documents_join_test CASCADE;
DROP TABLE files_join_test CASCADE;
DROP TABLE authors_join_test CASCADE;
RESET paradedb.enable_custom_join;
RESET paradedb.enable_topn_join_optimization;
