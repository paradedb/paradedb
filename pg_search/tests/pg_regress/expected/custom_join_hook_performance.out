-- Test performance and edge cases for custom join execution
-- This test validates various scenarios and edge cases
-- Create the extension first
CREATE EXTENSION IF NOT EXISTS pg_search;
-- Enable the custom join feature
SET paradedb.enable_custom_join = true;
-- Create test tables for performance testing
CREATE TABLE documents_perf (
    id SERIAL PRIMARY KEY,
    title TEXT,
    content TEXT,
    author TEXT,
    created_at TIMESTAMP DEFAULT NOW()
);
CREATE TABLE tags_perf (
    id SERIAL PRIMARY KEY,
    document_id INTEGER,
    tag_name TEXT,
    tag_value TEXT
);
-- Insert larger dataset for performance testing
INSERT INTO documents_perf (title, content, author) 
SELECT 
    'Document ' || i,
    'This is document number ' || i || ' with content about ' || 
    CASE (i % 5) 
        WHEN 0 THEN 'technology and innovation'
        WHEN 1 THEN 'science and research'
        WHEN 2 THEN 'business and finance'
        WHEN 3 THEN 'health and medicine'
        ELSE 'education and learning'
    END,
    'Author ' || ((i % 10) + 1)
FROM generate_series(1, 50) i;
INSERT INTO tags_perf (document_id, tag_name, tag_value)
SELECT 
    (i % 50) + 1,
    CASE (i % 4)
        WHEN 0 THEN 'category'
        WHEN 1 THEN 'priority'
        WHEN 2 THEN 'status'
        ELSE 'type'
    END,
    CASE (i % 3)
        WHEN 0 THEN 'high'
        WHEN 1 THEN 'medium'
        ELSE 'low'
    END
FROM generate_series(1, 100) i;
-- Create BM25 indexes
CREATE INDEX documents_perf_idx ON documents_perf USING bm25 (
    id,
    title,
    content,
    author
) WITH (
    key_field = 'id',
    text_fields = '{"title": {"tokenizer": {"type": "default"}}, "content": {"tokenizer": {"type": "default"}}, "author": {"tokenizer": {"type": "default"}}}'
);
CREATE INDEX tags_perf_idx ON tags_perf USING bm25 (
    id,
    document_id,
    tag_name,
    tag_value
) WITH (
    key_field = 'id',
    numeric_fields = '{"document_id": {"fast": true}}',
    text_fields = '{"tag_name": {"tokenizer": {"type": "default"}}, "tag_value": {"tokenizer": {"type": "default"}}}'
);
-- Test 1: Large result set join
SELECT COUNT(*) as total_matches
FROM documents_perf d
JOIN tags_perf t ON d.id = t.document_id
WHERE d.content @@@ 'technology OR science' AND t.tag_value @@@ 'high OR medium';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["documents_perf"], inner relids: ["tags_perf"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation documents_perf (rti 1)
WARNING:  ParadeDB: Checked relations ["documents_perf"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation tags_perf (rti 2)
WARNING:  ParadeDB: Checked relations ["tags_perf"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation documents_perf (rti 1)
WARNING:  ParadeDB: Extracted search query for documents_perf: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation tags_perf (rti 2)
WARNING:  ParadeDB: Extracted search query for tags_perf: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for documents_perf - uses_search: true
WARNING:  ParadeDB: Inner predicate for tags_perf - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["documents_perf"], inner: ["tags_perf"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["documents_perf"], inner: ["tags_perf"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 67, startup_cost: 50.00, total_cost: 50.34
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["tags_perf"], inner relids: ["documents_perf"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation tags_perf (rti 2)
WARNING:  ParadeDB: Checked relations ["tags_perf"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation documents_perf (rti 1)
WARNING:  ParadeDB: Checked relations ["documents_perf"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation tags_perf (rti 2)
WARNING:  ParadeDB: Extracted search query for tags_perf: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation documents_perf (rti 1)
WARNING:  ParadeDB: Extracted search query for documents_perf: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for tags_perf - uses_search: true
WARNING:  ParadeDB: Inner predicate for documents_perf - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["tags_perf"], inner: ["documents_perf"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["tags_perf"], inner: ["documents_perf"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 67, startup_cost: 50.00, total_cost: 50.34
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = true
WARNING:  ParadeDB: Found join search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: ========== JOIN NODE PLANNING ==========
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Using PostgreSQL's provided target list with 0 entries, processed_tlist has 1 entries
WARNING:  ParadeDB: Found 2 relevant RTIs for score functions: {2, 1}
WARNING:  ParadeDB: No score functions detected - using PostgreSQL's standard target list handling for joins
WARNING:  ParadeDB: ========== JOIN PLANNING COMPLETE ==========
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: ==========================================
WARNING:  ParadeDB: Creating custom scan state for join node (scanrelid = 0)
WARNING:  ParadeDB: Extracted search predicates from private data - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Set join state - limit: None
WARNING:  ParadeDB: Created join execution state with limit None, outer_relid: 180923, inner_relid: 180933
WARNING:  ParadeDB: Beginning custom scan for join node
WARNING:  ParadeDB: Initializing join execution
WARNING:  ParadeDB: Join execution initialization complete
WARNING:  ParadeDB: Executing join step in phase: NotStarted
WARNING:  ParadeDB: Starting join execution
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1
WARNING:  ParadeDB: Outer predicate 0: relation=documents_perf, uses_search=true
WARNING:  ParadeDB: Inner predicate 0: relation=tags_perf, uses_search=true
WARNING:  ParadeDB: Initialized mock results - outer: 2, inner: 2
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: documents_perf, inner: tags_perf
WARNING:  ParadeDB: Determining join keys for relations documents_perf and tags_perf using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (document_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("documents_perf"), RTI 2 to relid Some("tags_perf")
WARNING:  ParadeDB: Found matching join condition: documents_perf.id = tags_perf.document_id
WARNING:  ParadeDB: Fetching column 'id' from relation documents_perf with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'document_id' from relation tags_perf with CTID 1
WARNING:  ParadeDB: Fetched column 'document_id' (attno 2) = Some("2")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) Ã— inner[0] (ctid 1) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [1]
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: documents_perf, inner: tags_perf
WARNING:  ParadeDB: Determining join keys for relations documents_perf and tags_perf using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (document_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("documents_perf"), RTI 2 to relid Some("tags_perf")
WARNING:  ParadeDB: Found matching join condition: documents_perf.id = tags_perf.document_id
WARNING:  ParadeDB: Fetching column 'id' from relation documents_perf with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'document_id' from relation tags_perf with CTID 2
WARNING:  ParadeDB: Fetched column 'document_id' (attno 2) = Some("3")
WARNING:  ParadeDB: Iteration 2: outer[0] (ctid 1) Ã— inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next outer tuple [2/2], reset inner to 0
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: documents_perf, inner: tags_perf
WARNING:  ParadeDB: Determining join keys for relations documents_perf and tags_perf using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (document_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("documents_perf"), RTI 2 to relid Some("tags_perf")
WARNING:  ParadeDB: Found matching join condition: documents_perf.id = tags_perf.document_id
WARNING:  ParadeDB: Fetching column 'id' from relation documents_perf with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'document_id' from relation tags_perf with CTID 1
WARNING:  ParadeDB: Fetched column 'document_id' (attno 2) = Some("2")
WARNING:  ParadeDB: Iteration 3: outer[1] (ctid 2) Ã— inner[0] (ctid 1) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[1] Ã— inner[0] after 3 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[1], inner[0]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: documents_perf, inner: tags_perf
WARNING:  ParadeDB: Fetching real heap tuple values from relations documents_perf and tags_perf
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: documents_perf, inner: tags_perf
WARNING:  ParadeDB: Detected relations from predicates - outer: 'documents_perf', inner: 'tags_perf'
WARNING:  ParadeDB: Fetching all columns with names from relation documents_perf with CTID 2
WARNING:  ParadeDB: documents_perf column 'id' = '2'
WARNING:  ParadeDB: documents_perf column 'title' = 'Document 2'
WARNING:  ParadeDB: documents_perf column 'content' = 'This is document number 2 with content about business and finance'
WARNING:  ParadeDB: documents_perf column 'author' = 'Author 3'
WARNING:  ParadeDB: documents_perf column 'created_at' = 'ERROR_TEXT_5'
WARNING:  ParadeDB: Successfully fetched 5 columns from documents_perf relation
WARNING:  ParadeDB: Fetching all columns with names from relation tags_perf with CTID 1
WARNING:  ParadeDB: tags_perf column 'id' = '1'
WARNING:  ParadeDB: tags_perf column 'document_id' = '2'
WARNING:  ParadeDB: tags_perf column 'tag_name' = 'priority'
WARNING:  ParadeDB: tags_perf column 'tag_value' = 'medium'
WARNING:  ParadeDB: Successfully fetched 4 columns from tags_perf relation
WARNING:  ParadeDB: Fetched 5 columns from outer relation, 4 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [2]
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 1/2, inner: 1/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: documents_perf, inner: tags_perf
WARNING:  ParadeDB: Determining join keys for relations documents_perf and tags_perf using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (document_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("documents_perf"), RTI 2 to relid Some("tags_perf")
WARNING:  ParadeDB: Found matching join condition: documents_perf.id = tags_perf.document_id
WARNING:  ParadeDB: Fetching column 'id' from relation documents_perf with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'document_id' from relation tags_perf with CTID 2
WARNING:  ParadeDB: Fetched column 'document_id' (attno 2) = Some("3")
WARNING:  ParadeDB: Iteration 1: outer[1] (ctid 2) Ã— inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: All join combinations exhausted
WARNING:  ParadeDB: Join execution finished after advancing position
WARNING:  ParadeDB: Cleaning up join execution state
WARNING:  ParadeDB: Join execution cleanup complete
 total_matches 
---------------
             1
(1 row)

-- Test 2: Selective search (should return fewer results)
SELECT d.title, t.tag_name, t.tag_value
FROM documents_perf d
JOIN tags_perf t ON d.id = t.document_id
WHERE d.content @@@ 'innovation' AND t.tag_value @@@ 'high'
LIMIT 5;
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["documents_perf"], inner relids: ["tags_perf"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation documents_perf (rti 1)
WARNING:  ParadeDB: Checked relations ["documents_perf"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation tags_perf (rti 2)
WARNING:  ParadeDB: Checked relations ["tags_perf"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation documents_perf (rti 1)
WARNING:  ParadeDB: Extracted search query for documents_perf: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation tags_perf (rti 2)
WARNING:  ParadeDB: Extracted search query for tags_perf: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for documents_perf - uses_search: true
WARNING:  ParadeDB: Inner predicate for tags_perf - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["documents_perf"], inner: ["tags_perf"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["documents_perf"], inner: ["tags_perf"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 16, startup_cost: 50.00, total_cost: 50.08
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["tags_perf"], inner relids: ["documents_perf"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation tags_perf (rti 2)
WARNING:  ParadeDB: Checked relations ["tags_perf"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation documents_perf (rti 1)
WARNING:  ParadeDB: Checked relations ["documents_perf"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation tags_perf (rti 2)
WARNING:  ParadeDB: Extracted search query for tags_perf: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation documents_perf (rti 1)
WARNING:  ParadeDB: Extracted search query for documents_perf: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for tags_perf - uses_search: true
WARNING:  ParadeDB: Inner predicate for documents_perf - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["tags_perf"], inner: ["documents_perf"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["tags_perf"], inner: ["documents_perf"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 16, startup_cost: 50.00, total_cost: 50.08
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = true
WARNING:  ParadeDB: Found join search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: ========== JOIN NODE PLANNING ==========
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Using PostgreSQL's provided target list with 3 entries, processed_tlist has 3 entries
WARNING:  ParadeDB: Found 2 relevant RTIs for score functions: {2, 1}
WARNING:  ParadeDB: No score functions detected - using PostgreSQL's standard target list handling for joins
WARNING:  ParadeDB: ========== JOIN PLANNING COMPLETE ==========
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: Input Target List: ({TARGETENTRY :expr {VAR :varno 1 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 3 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 3 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 4 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 4 :location -1} :resno 3 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: Custom Target List We're Setting: ({TARGETENTRY :expr {VAR :varno 1 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 3 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 3 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 4 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 4 :location -1} :resno 3 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: ==========================================
ERROR:  variable not found in subplan target list
-- Test 3: Cross-product scenario (many-to-many)
SELECT COUNT(*) as cross_product_count
FROM documents_perf d
JOIN tags_perf t ON d.id = t.document_id
WHERE d.author @@@ 'Author' AND t.tag_name @@@ 'category OR priority';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["documents_perf"], inner relids: ["tags_perf"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation documents_perf (rti 1)
WARNING:  ParadeDB: Checked relations ["documents_perf"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation tags_perf (rti 2)
WARNING:  ParadeDB: Checked relations ["tags_perf"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation documents_perf (rti 1)
WARNING:  ParadeDB: Extracted search query for documents_perf: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation tags_perf (rti 2)
WARNING:  ParadeDB: Extracted search query for tags_perf: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for documents_perf - uses_search: true
WARNING:  ParadeDB: Inner predicate for tags_perf - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["documents_perf"], inner: ["tags_perf"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["documents_perf"], inner: ["tags_perf"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 125, startup_cost: 50.00, total_cost: 50.62
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["tags_perf"], inner relids: ["documents_perf"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation tags_perf (rti 2)
WARNING:  ParadeDB: Checked relations ["tags_perf"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation documents_perf (rti 1)
WARNING:  ParadeDB: Checked relations ["documents_perf"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation tags_perf (rti 2)
WARNING:  ParadeDB: Extracted search query for tags_perf: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation documents_perf (rti 1)
WARNING:  ParadeDB: Extracted search query for documents_perf: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for tags_perf - uses_search: true
WARNING:  ParadeDB: Inner predicate for documents_perf - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["tags_perf"], inner: ["documents_perf"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["tags_perf"], inner: ["documents_perf"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 125, startup_cost: 50.00, total_cost: 50.62
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = true
WARNING:  ParadeDB: Found join search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: ========== JOIN NODE PLANNING ==========
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Using PostgreSQL's provided target list with 0 entries, processed_tlist has 1 entries
WARNING:  ParadeDB: Found 2 relevant RTIs for score functions: {2, 1}
WARNING:  ParadeDB: No score functions detected - using PostgreSQL's standard target list handling for joins
WARNING:  ParadeDB: ========== JOIN PLANNING COMPLETE ==========
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: ==========================================
WARNING:  ParadeDB: Creating custom scan state for join node (scanrelid = 0)
WARNING:  ParadeDB: Extracted search predicates from private data - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Set join state - limit: None
WARNING:  ParadeDB: Created join execution state with limit None, outer_relid: 180923, inner_relid: 180933
WARNING:  ParadeDB: Beginning custom scan for join node
WARNING:  ParadeDB: Initializing join execution
WARNING:  ParadeDB: Join execution initialization complete
WARNING:  ParadeDB: Executing join step in phase: NotStarted
WARNING:  ParadeDB: Starting join execution
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1
WARNING:  ParadeDB: Outer predicate 0: relation=documents_perf, uses_search=true
WARNING:  ParadeDB: Inner predicate 0: relation=tags_perf, uses_search=true
WARNING:  ParadeDB: Initialized mock results - outer: 2, inner: 2
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: documents_perf, inner: tags_perf
WARNING:  ParadeDB: Determining join keys for relations documents_perf and tags_perf using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (document_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("documents_perf"), RTI 2 to relid Some("tags_perf")
WARNING:  ParadeDB: Found matching join condition: documents_perf.id = tags_perf.document_id
WARNING:  ParadeDB: Fetching column 'id' from relation documents_perf with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'document_id' from relation tags_perf with CTID 1
WARNING:  ParadeDB: Fetched column 'document_id' (attno 2) = Some("2")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) Ã— inner[0] (ctid 1) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [1]
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: documents_perf, inner: tags_perf
WARNING:  ParadeDB: Determining join keys for relations documents_perf and tags_perf using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (document_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("documents_perf"), RTI 2 to relid Some("tags_perf")
WARNING:  ParadeDB: Found matching join condition: documents_perf.id = tags_perf.document_id
WARNING:  ParadeDB: Fetching column 'id' from relation documents_perf with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'document_id' from relation tags_perf with CTID 2
WARNING:  ParadeDB: Fetched column 'document_id' (attno 2) = Some("3")
WARNING:  ParadeDB: Iteration 2: outer[0] (ctid 1) Ã— inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next outer tuple [2/2], reset inner to 0
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: documents_perf, inner: tags_perf
WARNING:  ParadeDB: Determining join keys for relations documents_perf and tags_perf using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (document_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("documents_perf"), RTI 2 to relid Some("tags_perf")
WARNING:  ParadeDB: Found matching join condition: documents_perf.id = tags_perf.document_id
WARNING:  ParadeDB: Fetching column 'id' from relation documents_perf with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'document_id' from relation tags_perf with CTID 1
WARNING:  ParadeDB: Fetched column 'document_id' (attno 2) = Some("2")
WARNING:  ParadeDB: Iteration 3: outer[1] (ctid 2) Ã— inner[0] (ctid 1) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[1] Ã— inner[0] after 3 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[1], inner[0]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: documents_perf, inner: tags_perf
WARNING:  ParadeDB: Fetching real heap tuple values from relations documents_perf and tags_perf
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: documents_perf, inner: tags_perf
WARNING:  ParadeDB: Detected relations from predicates - outer: 'documents_perf', inner: 'tags_perf'
WARNING:  ParadeDB: Fetching all columns with names from relation documents_perf with CTID 2
WARNING:  ParadeDB: documents_perf column 'id' = '2'
WARNING:  ParadeDB: documents_perf column 'title' = 'Document 2'
WARNING:  ParadeDB: documents_perf column 'content' = 'This is document number 2 with content about business and finance'
WARNING:  ParadeDB: documents_perf column 'author' = 'Author 3'
WARNING:  ParadeDB: documents_perf column 'created_at' = 'ERROR_TEXT_5'
WARNING:  ParadeDB: Successfully fetched 5 columns from documents_perf relation
WARNING:  ParadeDB: Fetching all columns with names from relation tags_perf with CTID 1
WARNING:  ParadeDB: tags_perf column 'id' = '1'
WARNING:  ParadeDB: tags_perf column 'document_id' = '2'
WARNING:  ParadeDB: tags_perf column 'tag_name' = 'priority'
WARNING:  ParadeDB: tags_perf column 'tag_value' = 'medium'
WARNING:  ParadeDB: Successfully fetched 4 columns from tags_perf relation
WARNING:  ParadeDB: Fetched 5 columns from outer relation, 4 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [2]
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 1/2, inner: 1/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: documents_perf, inner: tags_perf
WARNING:  ParadeDB: Determining join keys for relations documents_perf and tags_perf using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (document_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("documents_perf"), RTI 2 to relid Some("tags_perf")
WARNING:  ParadeDB: Found matching join condition: documents_perf.id = tags_perf.document_id
WARNING:  ParadeDB: Fetching column 'id' from relation documents_perf with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'document_id' from relation tags_perf with CTID 2
WARNING:  ParadeDB: Fetched column 'document_id' (attno 2) = Some("3")
WARNING:  ParadeDB: Iteration 1: outer[1] (ctid 2) Ã— inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: All join combinations exhausted
WARNING:  ParadeDB: Join execution finished after advancing position
WARNING:  ParadeDB: Cleaning up join execution state
WARNING:  ParadeDB: Join execution cleanup complete
 cross_product_count 
---------------------
                   1
(1 row)

-- Test 4: Empty result set
SELECT d.title, t.tag_value
FROM documents_perf d
JOIN tags_perf t ON d.id = t.document_id
WHERE d.content @@@ 'nonexistent_term' AND t.tag_value @@@ 'impossible_value';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["documents_perf"], inner relids: ["tags_perf"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation documents_perf (rti 1)
WARNING:  ParadeDB: Checked relations ["documents_perf"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation tags_perf (rti 2)
WARNING:  ParadeDB: Checked relations ["tags_perf"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation documents_perf (rti 1)
WARNING:  ParadeDB: Extracted search query for documents_perf: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation tags_perf (rti 2)
WARNING:  ParadeDB: Extracted search query for tags_perf: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for documents_perf - uses_search: true
WARNING:  ParadeDB: Inner predicate for tags_perf - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["documents_perf"], inner: ["tags_perf"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["documents_perf"], inner: ["tags_perf"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["tags_perf"], inner relids: ["documents_perf"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation tags_perf (rti 2)
WARNING:  ParadeDB: Checked relations ["tags_perf"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation documents_perf (rti 1)
WARNING:  ParadeDB: Checked relations ["documents_perf"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation tags_perf (rti 2)
WARNING:  ParadeDB: Extracted search query for tags_perf: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation documents_perf (rti 1)
WARNING:  ParadeDB: Extracted search query for documents_perf: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for tags_perf - uses_search: true
WARNING:  ParadeDB: Inner predicate for documents_perf - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["tags_perf"], inner: ["documents_perf"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["tags_perf"], inner: ["documents_perf"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = true
WARNING:  ParadeDB: Found join search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: ========== JOIN NODE PLANNING ==========
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Using PostgreSQL's provided target list with 2 entries, processed_tlist has 2 entries
WARNING:  ParadeDB: Found 2 relevant RTIs for score functions: {2, 1}
WARNING:  ParadeDB: No score functions detected - using PostgreSQL's standard target list handling for joins
WARNING:  ParadeDB: ========== JOIN PLANNING COMPLETE ==========
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: Input Target List: ({TARGETENTRY :expr {VAR :varno 1 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 4 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 4 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: Custom Target List We're Setting: ({TARGETENTRY :expr {VAR :varno 1 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 4 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 4 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: ==========================================
ERROR:  variable not found in subplan target list
-- Test 5: Single result
SELECT d.title, d.author, t.tag_name
FROM documents_perf d
JOIN tags_perf t ON d.id = t.document_id
WHERE d.title @@@ 'Document 1' AND t.tag_value @@@ 'high'
LIMIT 1;
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["documents_perf"], inner relids: ["tags_perf"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation documents_perf (rti 1)
WARNING:  ParadeDB: Checked relations ["documents_perf"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation tags_perf (rti 2)
WARNING:  ParadeDB: Checked relations ["tags_perf"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation documents_perf (rti 1)
WARNING:  ParadeDB: Extracted search query for documents_perf: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation tags_perf (rti 2)
WARNING:  ParadeDB: Extracted search query for tags_perf: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for documents_perf - uses_search: true
WARNING:  ParadeDB: Inner predicate for tags_perf - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["documents_perf"], inner: ["tags_perf"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["documents_perf"], inner: ["tags_perf"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 82, startup_cost: 50.00, total_cost: 50.41
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["tags_perf"], inner relids: ["documents_perf"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation tags_perf (rti 2)
WARNING:  ParadeDB: Checked relations ["tags_perf"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation documents_perf (rti 1)
WARNING:  ParadeDB: Checked relations ["documents_perf"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation tags_perf (rti 2)
WARNING:  ParadeDB: Extracted search query for tags_perf: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation documents_perf (rti 1)
WARNING:  ParadeDB: Extracted search query for documents_perf: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for tags_perf - uses_search: true
WARNING:  ParadeDB: Inner predicate for documents_perf - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["tags_perf"], inner: ["documents_perf"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["tags_perf"], inner: ["documents_perf"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 82, startup_cost: 50.00, total_cost: 50.41
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = true
WARNING:  ParadeDB: Found join search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: ========== JOIN NODE PLANNING ==========
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Using PostgreSQL's provided target list with 3 entries, processed_tlist has 3 entries
WARNING:  ParadeDB: Found 2 relevant RTIs for score functions: {2, 1}
WARNING:  ParadeDB: No score functions detected - using PostgreSQL's standard target list handling for joins
WARNING:  ParadeDB: ========== JOIN PLANNING COMPLETE ==========
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: Input Target List: ({TARGETENTRY :expr {VAR :varno 1 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 1 :varattno 4 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 4 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 3 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 3 :location -1} :resno 3 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: Custom Target List We're Setting: ({TARGETENTRY :expr {VAR :varno 1 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 1 :varattno 4 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 4 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 3 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 3 :location -1} :resno 3 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: ==========================================
ERROR:  variable not found in subplan target list
-- Test 6: EXPLAIN to see execution plan
EXPLAIN (COSTS OFF, BUFFERS OFF) 
SELECT d.title, t.tag_value
FROM documents_perf d
JOIN tags_perf t ON d.id = t.document_id
WHERE d.content @@@ 'technology' AND t.tag_value @@@ 'high';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["documents_perf"], inner relids: ["tags_perf"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation documents_perf (rti 1)
WARNING:  ParadeDB: Checked relations ["documents_perf"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation tags_perf (rti 2)
WARNING:  ParadeDB: Checked relations ["tags_perf"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation documents_perf (rti 1)
WARNING:  ParadeDB: Extracted search query for documents_perf: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation tags_perf (rti 2)
WARNING:  ParadeDB: Extracted search query for tags_perf: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for documents_perf - uses_search: true
WARNING:  ParadeDB: Inner predicate for tags_perf - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["documents_perf"], inner: ["tags_perf"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["documents_perf"], inner: ["tags_perf"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 16, startup_cost: 50.00, total_cost: 50.08
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["tags_perf"], inner relids: ["documents_perf"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation tags_perf (rti 2)
WARNING:  ParadeDB: Checked relations ["tags_perf"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation documents_perf (rti 1)
WARNING:  ParadeDB: Checked relations ["documents_perf"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.document_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation tags_perf (rti 2)
WARNING:  ParadeDB: Extracted search query for tags_perf: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation documents_perf (rti 1)
WARNING:  ParadeDB: Extracted search query for documents_perf: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for tags_perf - uses_search: true
WARNING:  ParadeDB: Inner predicate for documents_perf - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["tags_perf"], inner: ["documents_perf"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["tags_perf"], inner: ["documents_perf"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 16, startup_cost: 50.00, total_cost: 50.08
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = true
WARNING:  ParadeDB: Found join search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: ========== JOIN NODE PLANNING ==========
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Using PostgreSQL's provided target list with 2 entries, processed_tlist has 2 entries
WARNING:  ParadeDB: Found 2 relevant RTIs for score functions: {2, 1}
WARNING:  ParadeDB: No score functions detected - using PostgreSQL's standard target list handling for joins
WARNING:  ParadeDB: ========== JOIN PLANNING COMPLETE ==========
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: Input Target List: ({TARGETENTRY :expr {VAR :varno 1 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 4 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 4 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: Custom Target List We're Setting: ({TARGETENTRY :expr {VAR :varno 1 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 4 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 4 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: ==========================================
ERROR:  variable not found in subplan target list
-- Cleanup
DROP TABLE documents_perf CASCADE;
DROP TABLE tags_perf CASCADE;
RESET paradedb.enable_custom_join; 
