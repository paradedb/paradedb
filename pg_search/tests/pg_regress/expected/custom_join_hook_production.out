-- Test production scenarios and edge cases for custom join execution
-- This test validates robustness and handles real-world edge cases
-- Create the extension first
CREATE EXTENSION IF NOT EXISTS pg_search;
-- Enable the custom join feature
SET paradedb.enable_custom_join = true;
-- Test 1: Different data types and NULL handling
CREATE TABLE mixed_types_docs (
    id SERIAL PRIMARY KEY,
    title TEXT,
    content TEXT,
    created_at TIMESTAMP,
    score NUMERIC(5,2),
    is_published BOOLEAN,
    metadata JSONB
);
CREATE TABLE mixed_types_reviews (
    id SERIAL PRIMARY KEY,
    doc_id INTEGER,
    reviewer_name TEXT,
    review_text TEXT,
    rating INTEGER,
    review_date DATE,
    helpful_votes INTEGER DEFAULT 0
);
-- Insert data with various types and NULLs
INSERT INTO mixed_types_docs (title, content, created_at, score, is_published, metadata) VALUES 
    ('Document 1', 'Technology content with innovation', '2024-01-01 10:00:00', 95.50, true, '{"category": "tech", "priority": "high"}'),
    ('Document 2', 'Science research and analysis', '2024-01-02 11:00:00', 87.25, true, '{"category": "science", "priority": "medium"}'),
    ('Document 3', 'Business strategy overview', '2024-01-03 12:00:00', NULL, false, NULL),
    ('Document 4', NULL, '2024-01-04 13:00:00', 92.75, true, '{"category": "business"}'),
    (NULL, 'Content without title', NULL, 88.00, NULL, '{"priority": "low"}');
INSERT INTO mixed_types_reviews (doc_id, reviewer_name, review_text, rating, review_date, helpful_votes) VALUES 
    (1, 'John Doe', 'Excellent technology analysis', 5, '2024-01-05', 10),
    (1, NULL, 'Good innovation coverage', 4, '2024-01-06', NULL),
    (2, 'Jane Smith', 'Comprehensive science review', 5, '2024-01-07', 8),
    (3, 'Bob Wilson', NULL, 3, '2024-01-08', 2),
    (4, 'Alice Brown', 'Solid business insights', 4, NULL, 5),
    (999, 'Test User', 'Review for non-existent doc', 1, '2024-01-09', 0);
-- Create BM25 indexes
CREATE INDEX mixed_types_docs_idx ON mixed_types_docs USING bm25 (
    id, title, content
) WITH (
    key_field = 'id',
    text_fields = '{"title": {"tokenizer": {"type": "default"}}, "content": {"tokenizer": {"type": "default"}}}'
);
CREATE INDEX mixed_types_reviews_idx ON mixed_types_reviews USING bm25 (
    id, doc_id, reviewer_name, review_text
) WITH (
    key_field = 'id',
    numeric_fields = '{"doc_id": {"fast": true}}',
    text_fields = '{"reviewer_name": {"tokenizer": {"type": "default"}}, "review_text": {"tokenizer": {"type": "default"}}}'
);
-- Test NULL handling in joins
SELECT d.title, r.reviewer_name, r.review_text, r.rating
FROM mixed_types_docs d
JOIN mixed_types_reviews r ON d.id = r.doc_id
WHERE d.content @@@ 'technology' AND r.review_text @@@ 'excellent';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["mixed_types_docs"], inner relids: ["mixed_types_reviews"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation mixed_types_docs (rti 1)
WARNING:  ParadeDB: Checked relations ["mixed_types_docs"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation mixed_types_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["mixed_types_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.doc_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation mixed_types_docs (rti 1)
WARNING:  ParadeDB: Extracted search query for mixed_types_docs: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation mixed_types_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for mixed_types_reviews: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for mixed_types_docs - uses_search: true
WARNING:  ParadeDB: Inner predicate for mixed_types_reviews - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["mixed_types_docs"], inner: ["mixed_types_reviews"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["mixed_types_docs"], inner: ["mixed_types_reviews"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["mixed_types_reviews"], inner relids: ["mixed_types_docs"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation mixed_types_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["mixed_types_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation mixed_types_docs (rti 1)
WARNING:  ParadeDB: Checked relations ["mixed_types_docs"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.doc_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation mixed_types_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for mixed_types_reviews: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation mixed_types_docs (rti 1)
WARNING:  ParadeDB: Extracted search query for mixed_types_docs: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for mixed_types_reviews - uses_search: true
WARNING:  ParadeDB: Inner predicate for mixed_types_docs - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["mixed_types_reviews"], inner: ["mixed_types_docs"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["mixed_types_reviews"], inner: ["mixed_types_docs"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = true
WARNING:  ParadeDB: Found join search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: ========== JOIN NODE PLANNING ==========
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Using PostgreSQL's provided target list with 4 entries, processed_tlist has 4 entries
WARNING:  ParadeDB: Found 2 relevant RTIs for score functions: {2, 1}
WARNING:  ParadeDB: No score functions detected - using PostgreSQL's standard target list handling for joins
WARNING:  ParadeDB: ========== JOIN PLANNING COMPLETE ==========
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: Input Target List: ({TARGETENTRY :expr {VAR :varno 1 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 3 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 3 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 4 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 4 :location -1} :resno 3 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 5 :vartype 23 :vartypmod -1 :varcollid 0 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 5 :location -1} :resno 4 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: Custom Target List We're Setting: ({TARGETENTRY :expr {VAR :varno 1 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 3 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 3 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 4 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 4 :location -1} :resno 3 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 5 :vartype 23 :vartypmod -1 :varcollid 0 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 5 :location -1} :resno 4 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: ==========================================
ERROR:  variable not found in subplan target list
-- Test 2: Complex join conditions with multiple predicates
CREATE TABLE complex_products (
    id SERIAL PRIMARY KEY,
    name TEXT,
    description TEXT,
    category TEXT,
    price DECIMAL(10,2),
    manufacturer TEXT
);
CREATE TABLE complex_reviews (
    id SERIAL PRIMARY KEY,
    product_id INTEGER,
    title TEXT,
    content TEXT,
    rating INTEGER,
    verified_purchase BOOLEAN
);
-- Insert test data
INSERT INTO complex_products (name, description, category, price, manufacturer) VALUES 
    ('Laptop Pro X1', 'High-performance laptop with advanced features', 'electronics', 1299.99, 'TechCorp'),
    ('Wireless Headphones', 'Premium noise-canceling headphones', 'electronics', 299.99, 'AudioTech'),
    ('Smart Watch', 'Fitness tracking smartwatch with GPS', 'wearables', 399.99, 'WearableTech'),
    ('Gaming Mouse', 'Precision gaming mouse with RGB lighting', 'electronics', 79.99, 'GameGear'),
    ('Coffee Machine', 'Automatic espresso machine with grinder', 'appliances', 599.99, 'BrewMaster');
INSERT INTO complex_reviews (product_id, title, content, rating, verified_purchase) VALUES 
    (1, 'Amazing Performance', 'This laptop delivers exceptional performance for professional work', 5, true),
    (1, 'Great Build Quality', 'Solid construction and premium materials', 4, true),
    (2, 'Excellent Sound', 'Outstanding audio quality with great noise cancellation', 5, true),
    (2, 'Comfortable Fit', 'Very comfortable for long listening sessions', 4, false),
    (3, 'Perfect for Fitness', 'Accurate tracking and long battery life', 5, true),
    (4, 'Responsive Gaming', 'Great precision and responsiveness for gaming', 4, true),
    (5, 'Perfect Coffee', 'Makes excellent espresso every time', 5, true);
-- Create BM25 indexes
CREATE INDEX complex_products_idx ON complex_products USING bm25 (
    id, name, description, category, manufacturer
) WITH (
    key_field = 'id',
    text_fields = '{"name": {"tokenizer": {"type": "default"}}, "description": {"tokenizer": {"type": "default"}}, "category": {"tokenizer": {"type": "default"}}, "manufacturer": {"tokenizer": {"type": "default"}}}'
);
CREATE INDEX complex_reviews_idx ON complex_reviews USING bm25 (
    id, product_id, title, content
) WITH (
    key_field = 'id',
    numeric_fields = '{"product_id": {"fast": true}}',
    text_fields = '{"title": {"tokenizer": {"type": "default"}}, "content": {"tokenizer": {"type": "default"}}}'
);
-- Test complex search predicates
SELECT p.name, p.category, r.title, r.content, r.rating
FROM complex_products p
JOIN complex_reviews r ON p.id = r.product_id
WHERE p.description @@@ 'performance OR quality' AND r.content @@@ 'excellent AND professional';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_products"], inner relids: ["complex_reviews"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_reviews"], inner relids: ["complex_products"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = true
WARNING:  ParadeDB: Found join search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: ========== JOIN NODE PLANNING ==========
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Using PostgreSQL's provided target list with 5 entries, processed_tlist has 5 entries
WARNING:  ParadeDB: Found 2 relevant RTIs for score functions: {2, 1}
WARNING:  ParadeDB: No score functions detected - using PostgreSQL's standard target list handling for joins
WARNING:  ParadeDB: ========== JOIN PLANNING COMPLETE ==========
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: Input Target List: ({TARGETENTRY :expr {VAR :varno 1 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 1 :varattno 4 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 4 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 3 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 3 :location -1} :resno 3 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 4 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 4 :location -1} :resno 4 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 5 :vartype 23 :vartypmod -1 :varcollid 0 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 5 :location -1} :resno 5 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: Custom Target List We're Setting: ({TARGETENTRY :expr {VAR :varno 1 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 1 :varattno 4 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 4 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 3 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 3 :location -1} :resno 3 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 4 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 4 :location -1} :resno 4 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 5 :vartype 23 :vartypmod -1 :varcollid 0 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 5 :location -1} :resno 5 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: ==========================================
ERROR:  variable not found in subplan target list
-- Test 3: Concurrent access simulation (multiple similar queries)
-- These would typically be run in parallel in a real scenario
SELECT COUNT(*) as concurrent_test_1
FROM complex_products p
JOIN complex_reviews r ON p.id = r.product_id
WHERE p.description @@@ 'laptop' AND r.content @@@ 'performance';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_products"], inner relids: ["complex_reviews"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_reviews"], inner relids: ["complex_products"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = true
WARNING:  ParadeDB: Found join search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: ========== JOIN NODE PLANNING ==========
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Using PostgreSQL's provided target list with 0 entries, processed_tlist has 1 entries
WARNING:  ParadeDB: Found 2 relevant RTIs for score functions: {2, 1}
WARNING:  ParadeDB: No score functions detected - using PostgreSQL's standard target list handling for joins
WARNING:  ParadeDB: ========== JOIN PLANNING COMPLETE ==========
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: ==========================================
WARNING:  ParadeDB: Creating custom scan state for join node (scanrelid = 0)
WARNING:  ParadeDB: Extracted search predicates from private data - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Set join state - limit: None
WARNING:  ParadeDB: Created join execution state with limit None, outer_relid: 180965, inner_relid: 180974
WARNING:  ParadeDB: Beginning custom scan for join node
WARNING:  ParadeDB: Initializing join execution
WARNING:  ParadeDB: Join execution initialization complete
WARNING:  ParadeDB: Executing join step in phase: NotStarted
WARNING:  ParadeDB: Starting join execution
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1
WARNING:  ParadeDB: Outer predicate 0: relation=complex_products, uses_search=true
WARNING:  ParadeDB: Inner predicate 0: relation=complex_reviews, uses_search=true
WARNING:  ParadeDB: Initialized mock results - outer: 2, inner: 2
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[0] (ctid 1) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[0] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[0]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations complex_products and complex_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'complex_products', inner: 'complex_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation complex_products with CTID 1
WARNING:  ParadeDB: complex_products column 'id' = '1'
WARNING:  ParadeDB: complex_products column 'name' = 'Laptop Pro X1'
WARNING:  ParadeDB: complex_products column 'description' = 'High-performance laptop with advanced features'
WARNING:  ParadeDB: complex_products column 'category' = 'electronics'
WARNING:  ParadeDB: complex_products column 'price' = 'ERROR_TEXT_5'
WARNING:  ParadeDB: complex_products column 'manufacturer' = 'TechCorp'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation complex_reviews with CTID 1
WARNING:  ParadeDB: complex_reviews column 'id' = '1'
WARNING:  ParadeDB: complex_reviews column 'product_id' = '1'
WARNING:  ParadeDB: complex_reviews column 'title' = 'Amazing Performance'
WARNING:  ParadeDB: complex_reviews column 'content' = 'This laptop delivers exceptional performance for professional work'
WARNING:  ParadeDB: complex_reviews column 'rating' = '5'
WARNING:  ParadeDB: complex_reviews column 'verified_purchase' = 'ERROR_TEXT_6'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_reviews relation
WARNING:  ParadeDB: Fetched 6 columns from outer relation, 6 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [1]
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 1/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[1] (ctid 2) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[1] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[1]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations complex_products and complex_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'complex_products', inner: 'complex_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation complex_products with CTID 1
WARNING:  ParadeDB: complex_products column 'id' = '1'
WARNING:  ParadeDB: complex_products column 'name' = 'Laptop Pro X1'
WARNING:  ParadeDB: complex_products column 'description' = 'High-performance laptop with advanced features'
WARNING:  ParadeDB: complex_products column 'category' = 'electronics'
WARNING:  ParadeDB: complex_products column 'price' = 'ERROR_TEXT_5'
WARNING:  ParadeDB: complex_products column 'manufacturer' = 'TechCorp'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation complex_reviews with CTID 2
WARNING:  ParadeDB: complex_reviews column 'id' = '2'
WARNING:  ParadeDB: complex_reviews column 'product_id' = '1'
WARNING:  ParadeDB: complex_reviews column 'title' = 'Great Build Quality'
WARNING:  ParadeDB: complex_reviews column 'content' = 'Solid construction and premium materials'
WARNING:  ParadeDB: complex_reviews column 'rating' = '4'
WARNING:  ParadeDB: complex_reviews column 'verified_purchase' = 'ERROR_TEXT_6'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_reviews relation
WARNING:  ParadeDB: Fetched 6 columns from outer relation, 6 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next outer tuple [2/2], reset inner to 0
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 1/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[1] (ctid 2) × inner[0] (ctid 1) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [2]
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 2: outer[1] (ctid 2) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: All join combinations exhausted
WARNING:  ParadeDB: Join execution finished after advancing position
WARNING:  ParadeDB: Cleaning up join execution state
WARNING:  ParadeDB: Join execution cleanup complete
 concurrent_test_1 
-------------------
                 2
(1 row)

SELECT COUNT(*) as concurrent_test_2
FROM complex_products p
JOIN complex_reviews r ON p.id = r.product_id
WHERE p.description @@@ 'headphones' AND r.content @@@ 'audio';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_products"], inner relids: ["complex_reviews"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_reviews"], inner relids: ["complex_products"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = true
WARNING:  ParadeDB: Found join search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: ========== JOIN NODE PLANNING ==========
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Using PostgreSQL's provided target list with 0 entries, processed_tlist has 1 entries
WARNING:  ParadeDB: Found 2 relevant RTIs for score functions: {2, 1}
WARNING:  ParadeDB: No score functions detected - using PostgreSQL's standard target list handling for joins
WARNING:  ParadeDB: ========== JOIN PLANNING COMPLETE ==========
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: ==========================================
WARNING:  ParadeDB: Creating custom scan state for join node (scanrelid = 0)
WARNING:  ParadeDB: Extracted search predicates from private data - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Set join state - limit: None
WARNING:  ParadeDB: Created join execution state with limit None, outer_relid: 180965, inner_relid: 180974
WARNING:  ParadeDB: Beginning custom scan for join node
WARNING:  ParadeDB: Initializing join execution
WARNING:  ParadeDB: Join execution initialization complete
WARNING:  ParadeDB: Executing join step in phase: NotStarted
WARNING:  ParadeDB: Starting join execution
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1
WARNING:  ParadeDB: Outer predicate 0: relation=complex_products, uses_search=true
WARNING:  ParadeDB: Inner predicate 0: relation=complex_reviews, uses_search=true
WARNING:  ParadeDB: Initialized mock results - outer: 2, inner: 2
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[0] (ctid 1) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[0] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[0]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations complex_products and complex_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'complex_products', inner: 'complex_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation complex_products with CTID 1
WARNING:  ParadeDB: complex_products column 'id' = '1'
WARNING:  ParadeDB: complex_products column 'name' = 'Laptop Pro X1'
WARNING:  ParadeDB: complex_products column 'description' = 'High-performance laptop with advanced features'
WARNING:  ParadeDB: complex_products column 'category' = 'electronics'
WARNING:  ParadeDB: complex_products column 'price' = 'ERROR_TEXT_5'
WARNING:  ParadeDB: complex_products column 'manufacturer' = 'TechCorp'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation complex_reviews with CTID 1
WARNING:  ParadeDB: complex_reviews column 'id' = '1'
WARNING:  ParadeDB: complex_reviews column 'product_id' = '1'
WARNING:  ParadeDB: complex_reviews column 'title' = 'Amazing Performance'
WARNING:  ParadeDB: complex_reviews column 'content' = 'This laptop delivers exceptional performance for professional work'
WARNING:  ParadeDB: complex_reviews column 'rating' = '5'
WARNING:  ParadeDB: complex_reviews column 'verified_purchase' = 'ERROR_TEXT_6'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_reviews relation
WARNING:  ParadeDB: Fetched 6 columns from outer relation, 6 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [1]
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 1/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[1] (ctid 2) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[1] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[1]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations complex_products and complex_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'complex_products', inner: 'complex_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation complex_products with CTID 1
WARNING:  ParadeDB: complex_products column 'id' = '1'
WARNING:  ParadeDB: complex_products column 'name' = 'Laptop Pro X1'
WARNING:  ParadeDB: complex_products column 'description' = 'High-performance laptop with advanced features'
WARNING:  ParadeDB: complex_products column 'category' = 'electronics'
WARNING:  ParadeDB: complex_products column 'price' = 'ERROR_TEXT_5'
WARNING:  ParadeDB: complex_products column 'manufacturer' = 'TechCorp'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation complex_reviews with CTID 2
WARNING:  ParadeDB: complex_reviews column 'id' = '2'
WARNING:  ParadeDB: complex_reviews column 'product_id' = '1'
WARNING:  ParadeDB: complex_reviews column 'title' = 'Great Build Quality'
WARNING:  ParadeDB: complex_reviews column 'content' = 'Solid construction and premium materials'
WARNING:  ParadeDB: complex_reviews column 'rating' = '4'
WARNING:  ParadeDB: complex_reviews column 'verified_purchase' = 'ERROR_TEXT_6'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_reviews relation
WARNING:  ParadeDB: Fetched 6 columns from outer relation, 6 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next outer tuple [2/2], reset inner to 0
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 1/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[1] (ctid 2) × inner[0] (ctid 1) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [2]
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 2: outer[1] (ctid 2) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: All join combinations exhausted
WARNING:  ParadeDB: Join execution finished after advancing position
WARNING:  ParadeDB: Cleaning up join execution state
WARNING:  ParadeDB: Join execution cleanup complete
 concurrent_test_2 
-------------------
                 2
(1 row)

SELECT COUNT(*) as concurrent_test_3
FROM complex_products p
JOIN complex_reviews r ON p.id = r.product_id
WHERE p.description @@@ 'smartwatch' AND r.content @@@ 'fitness';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_products"], inner relids: ["complex_reviews"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_reviews"], inner relids: ["complex_products"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = true
WARNING:  ParadeDB: Found join search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: ========== JOIN NODE PLANNING ==========
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Using PostgreSQL's provided target list with 0 entries, processed_tlist has 1 entries
WARNING:  ParadeDB: Found 2 relevant RTIs for score functions: {2, 1}
WARNING:  ParadeDB: No score functions detected - using PostgreSQL's standard target list handling for joins
WARNING:  ParadeDB: ========== JOIN PLANNING COMPLETE ==========
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: ==========================================
WARNING:  ParadeDB: Creating custom scan state for join node (scanrelid = 0)
WARNING:  ParadeDB: Extracted search predicates from private data - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Set join state - limit: None
WARNING:  ParadeDB: Created join execution state with limit None, outer_relid: 180965, inner_relid: 180974
WARNING:  ParadeDB: Beginning custom scan for join node
WARNING:  ParadeDB: Initializing join execution
WARNING:  ParadeDB: Join execution initialization complete
WARNING:  ParadeDB: Executing join step in phase: NotStarted
WARNING:  ParadeDB: Starting join execution
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1
WARNING:  ParadeDB: Outer predicate 0: relation=complex_products, uses_search=true
WARNING:  ParadeDB: Inner predicate 0: relation=complex_reviews, uses_search=true
WARNING:  ParadeDB: Initialized mock results - outer: 2, inner: 2
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[0] (ctid 1) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[0] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[0]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations complex_products and complex_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'complex_products', inner: 'complex_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation complex_products with CTID 1
WARNING:  ParadeDB: complex_products column 'id' = '1'
WARNING:  ParadeDB: complex_products column 'name' = 'Laptop Pro X1'
WARNING:  ParadeDB: complex_products column 'description' = 'High-performance laptop with advanced features'
WARNING:  ParadeDB: complex_products column 'category' = 'electronics'
WARNING:  ParadeDB: complex_products column 'price' = 'ERROR_TEXT_5'
WARNING:  ParadeDB: complex_products column 'manufacturer' = 'TechCorp'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation complex_reviews with CTID 1
WARNING:  ParadeDB: complex_reviews column 'id' = '1'
WARNING:  ParadeDB: complex_reviews column 'product_id' = '1'
WARNING:  ParadeDB: complex_reviews column 'title' = 'Amazing Performance'
WARNING:  ParadeDB: complex_reviews column 'content' = 'This laptop delivers exceptional performance for professional work'
WARNING:  ParadeDB: complex_reviews column 'rating' = '5'
WARNING:  ParadeDB: complex_reviews column 'verified_purchase' = 'ERROR_TEXT_6'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_reviews relation
WARNING:  ParadeDB: Fetched 6 columns from outer relation, 6 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [1]
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 1/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[1] (ctid 2) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[1] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[1]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations complex_products and complex_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'complex_products', inner: 'complex_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation complex_products with CTID 1
WARNING:  ParadeDB: complex_products column 'id' = '1'
WARNING:  ParadeDB: complex_products column 'name' = 'Laptop Pro X1'
WARNING:  ParadeDB: complex_products column 'description' = 'High-performance laptop with advanced features'
WARNING:  ParadeDB: complex_products column 'category' = 'electronics'
WARNING:  ParadeDB: complex_products column 'price' = 'ERROR_TEXT_5'
WARNING:  ParadeDB: complex_products column 'manufacturer' = 'TechCorp'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation complex_reviews with CTID 2
WARNING:  ParadeDB: complex_reviews column 'id' = '2'
WARNING:  ParadeDB: complex_reviews column 'product_id' = '1'
WARNING:  ParadeDB: complex_reviews column 'title' = 'Great Build Quality'
WARNING:  ParadeDB: complex_reviews column 'content' = 'Solid construction and premium materials'
WARNING:  ParadeDB: complex_reviews column 'rating' = '4'
WARNING:  ParadeDB: complex_reviews column 'verified_purchase' = 'ERROR_TEXT_6'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_reviews relation
WARNING:  ParadeDB: Fetched 6 columns from outer relation, 6 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next outer tuple [2/2], reset inner to 0
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 1/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[1] (ctid 2) × inner[0] (ctid 1) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [2]
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 2: outer[1] (ctid 2) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: All join combinations exhausted
WARNING:  ParadeDB: Join execution finished after advancing position
WARNING:  ParadeDB: Cleaning up join execution state
WARNING:  ParadeDB: Join execution cleanup complete
 concurrent_test_3 
-------------------
                 2
(1 row)

-- Test 4: Memory pressure simulation with large result sets
CREATE TABLE memory_test_docs (
    id SERIAL PRIMARY KEY,
    title TEXT,
    content TEXT,
    category TEXT
);
CREATE TABLE memory_test_comments (
    id SERIAL PRIMARY KEY,
    doc_id INTEGER,
    comment_text TEXT,
    author TEXT
);
-- Insert larger dataset to test memory handling
INSERT INTO memory_test_docs (title, content, category)
SELECT 
    'Document ' || i,
    'Content with keywords: ' || 
    string_agg(
        CASE (j % 10)
            WHEN 0 THEN 'technology'
            WHEN 1 THEN 'innovation'
            WHEN 2 THEN 'research'
            WHEN 3 THEN 'analysis'
            WHEN 4 THEN 'development'
            WHEN 5 THEN 'solution'
            WHEN 6 THEN 'implementation'
            WHEN 7 THEN 'optimization'
            WHEN 8 THEN 'performance'
            ELSE 'efficiency'
        END, ' '
    ),
    CASE (i % 5)
        WHEN 0 THEN 'tech'
        WHEN 1 THEN 'business'
        WHEN 2 THEN 'science'
        WHEN 3 THEN 'education'
        ELSE 'general'
    END
FROM generate_series(1, 1000) i
CROSS JOIN generate_series(1, 5) j
GROUP BY i;
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["rti_1_non_rel"], inner relids: ["rti_2_non_rel"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Skipping join - no BM25 indexes found where needed
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["rti_2_non_rel"], inner relids: ["rti_1_non_rel"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Skipping join - no BM25 indexes found where needed
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["rti_2_non_rel"], inner relids: ["rti_1_non_rel"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Skipping join - no BM25 indexes found where needed
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["rti_1_non_rel"], inner relids: ["rti_2_non_rel"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Skipping join - no BM25 indexes found where needed
INSERT INTO memory_test_comments (doc_id, comment_text, author)
SELECT 
    (i % 1000) + 1,
    'Comment about ' ||
    CASE (i % 8)
        WHEN 0 THEN 'excellent technology'
        WHEN 1 THEN 'innovative solution'
        WHEN 2 THEN 'thorough research'
        WHEN 3 THEN 'detailed analysis'
        WHEN 4 THEN 'effective development'
        WHEN 5 THEN 'optimal performance'
        WHEN 6 THEN 'efficient implementation'
        ELSE 'comprehensive optimization'
    END,
    'User' || ((i % 100) + 1)
FROM generate_series(1, 3000) i;
-- Create BM25 indexes
CREATE INDEX memory_test_docs_idx ON memory_test_docs USING bm25 (
    id, title, content, category
) WITH (
    key_field = 'id',
    text_fields = '{"title": {"tokenizer": {"type": "default"}}, "content": {"tokenizer": {"type": "default"}}, "category": {"tokenizer": {"type": "default"}}}'
);
CREATE INDEX memory_test_comments_idx ON memory_test_comments USING bm25 (
    id, doc_id, comment_text, author
) WITH (
    key_field = 'id',
    numeric_fields = '{"doc_id": {"fast": true}}',
    text_fields = '{"comment_text": {"tokenizer": {"type": "default"}}, "author": {"tokenizer": {"type": "default"}}}'
);
-- Test memory handling with large result sets
SELECT COUNT(*) as memory_pressure_test
FROM memory_test_docs d
JOIN memory_test_comments c ON d.id = c.doc_id
WHERE d.content @@@ 'technology OR innovation' AND c.comment_text @@@ 'excellent OR innovative';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["memory_test_docs"], inner relids: ["memory_test_comments"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation memory_test_docs (rti 1)
WARNING:  ParadeDB: Checked relations ["memory_test_docs"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation memory_test_comments (rti 2)
WARNING:  ParadeDB: Checked relations ["memory_test_comments"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.doc_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation memory_test_docs (rti 1)
WARNING:  ParadeDB: Extracted search query for memory_test_docs: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation memory_test_comments (rti 2)
WARNING:  ParadeDB: Extracted search query for memory_test_comments: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for memory_test_docs - uses_search: true
WARNING:  ParadeDB: Inner predicate for memory_test_comments - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["memory_test_docs"], inner: ["memory_test_comments"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["memory_test_docs"], inner: ["memory_test_comments"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 37500, startup_cost: 50.00, total_cost: 237.50
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["memory_test_comments"], inner relids: ["memory_test_docs"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation memory_test_comments (rti 2)
WARNING:  ParadeDB: Checked relations ["memory_test_comments"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation memory_test_docs (rti 1)
WARNING:  ParadeDB: Checked relations ["memory_test_docs"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.doc_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation memory_test_comments (rti 2)
WARNING:  ParadeDB: Extracted search query for memory_test_comments: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation memory_test_docs (rti 1)
WARNING:  ParadeDB: Extracted search query for memory_test_docs: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for memory_test_comments - uses_search: true
WARNING:  ParadeDB: Inner predicate for memory_test_docs - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["memory_test_comments"], inner: ["memory_test_docs"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["memory_test_comments"], inner: ["memory_test_docs"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 37500, startup_cost: 50.00, total_cost: 237.50
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = true
WARNING:  ParadeDB: Found join search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: ========== JOIN NODE PLANNING ==========
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Using PostgreSQL's provided target list with 0 entries, processed_tlist has 1 entries
WARNING:  ParadeDB: Found 2 relevant RTIs for score functions: {2, 1}
WARNING:  ParadeDB: No score functions detected - using PostgreSQL's standard target list handling for joins
WARNING:  ParadeDB: ========== JOIN PLANNING COMPLETE ==========
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: ==========================================
WARNING:  ParadeDB: Creating custom scan state for join node (scanrelid = 0)
WARNING:  ParadeDB: Extracted search predicates from private data - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Set join state - limit: None
WARNING:  ParadeDB: Created join execution state with limit None, outer_relid: 180985, inner_relid: 180994
WARNING:  ParadeDB: Beginning custom scan for join node
WARNING:  ParadeDB: Initializing join execution
WARNING:  ParadeDB: Join execution initialization complete
WARNING:  ParadeDB: Executing join step in phase: NotStarted
WARNING:  ParadeDB: Starting join execution
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1
WARNING:  ParadeDB: Outer predicate 0: relation=memory_test_docs, uses_search=true
WARNING:  ParadeDB: Inner predicate 0: relation=memory_test_comments, uses_search=true
WARNING:  ParadeDB: Initialized mock results - outer: 2, inner: 2
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: memory_test_docs, inner: memory_test_comments
WARNING:  ParadeDB: Determining join keys for relations memory_test_docs and memory_test_comments using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (doc_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("memory_test_docs"), RTI 2 to relid Some("memory_test_comments")
WARNING:  ParadeDB: Found matching join condition: memory_test_docs.id = memory_test_comments.doc_id
WARNING:  ParadeDB: Fetching column 'id' from relation memory_test_docs with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'doc_id' from relation memory_test_comments with CTID 1
WARNING:  ParadeDB: Fetched column 'doc_id' (attno 2) = Some("2")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[0] (ctid 1) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [1]
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: memory_test_docs, inner: memory_test_comments
WARNING:  ParadeDB: Determining join keys for relations memory_test_docs and memory_test_comments using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (doc_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("memory_test_docs"), RTI 2 to relid Some("memory_test_comments")
WARNING:  ParadeDB: Found matching join condition: memory_test_docs.id = memory_test_comments.doc_id
WARNING:  ParadeDB: Fetching column 'id' from relation memory_test_docs with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'doc_id' from relation memory_test_comments with CTID 2
WARNING:  ParadeDB: Fetched column 'doc_id' (attno 2) = Some("3")
WARNING:  ParadeDB: Iteration 2: outer[0] (ctid 1) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next outer tuple [2/2], reset inner to 0
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: memory_test_docs, inner: memory_test_comments
WARNING:  ParadeDB: Determining join keys for relations memory_test_docs and memory_test_comments using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (doc_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("memory_test_docs"), RTI 2 to relid Some("memory_test_comments")
WARNING:  ParadeDB: Found matching join condition: memory_test_docs.id = memory_test_comments.doc_id
WARNING:  ParadeDB: Fetching column 'id' from relation memory_test_docs with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'doc_id' from relation memory_test_comments with CTID 1
WARNING:  ParadeDB: Fetched column 'doc_id' (attno 2) = Some("2")
WARNING:  ParadeDB: Iteration 3: outer[1] (ctid 2) × inner[0] (ctid 1) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[1] × inner[0] after 3 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[1], inner[0]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: memory_test_docs, inner: memory_test_comments
WARNING:  ParadeDB: Fetching real heap tuple values from relations memory_test_docs and memory_test_comments
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: memory_test_docs, inner: memory_test_comments
WARNING:  ParadeDB: Detected relations from predicates - outer: 'memory_test_docs', inner: 'memory_test_comments'
WARNING:  ParadeDB: Fetching all columns with names from relation memory_test_docs with CTID 2
WARNING:  ParadeDB: memory_test_docs column 'id' = '2'
WARNING:  ParadeDB: memory_test_docs column 'title' = 'Document 273'
WARNING:  ParadeDB: memory_test_docs column 'content' = 'Content with keywords: innovation research analysis development solution'
WARNING:  ParadeDB: memory_test_docs column 'category' = 'education'
WARNING:  ParadeDB: Successfully fetched 4 columns from memory_test_docs relation
WARNING:  ParadeDB: Fetching all columns with names from relation memory_test_comments with CTID 1
WARNING:  ParadeDB: memory_test_comments column 'id' = '1'
WARNING:  ParadeDB: memory_test_comments column 'doc_id' = '2'
WARNING:  ParadeDB: memory_test_comments column 'comment_text' = 'Comment about innovative solution'
WARNING:  ParadeDB: memory_test_comments column 'author' = 'User2'
WARNING:  ParadeDB: Successfully fetched 4 columns from memory_test_comments relation
WARNING:  ParadeDB: Fetched 4 columns from outer relation, 4 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [2]
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 1/2, inner: 1/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: memory_test_docs, inner: memory_test_comments
WARNING:  ParadeDB: Determining join keys for relations memory_test_docs and memory_test_comments using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (doc_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("memory_test_docs"), RTI 2 to relid Some("memory_test_comments")
WARNING:  ParadeDB: Found matching join condition: memory_test_docs.id = memory_test_comments.doc_id
WARNING:  ParadeDB: Fetching column 'id' from relation memory_test_docs with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'doc_id' from relation memory_test_comments with CTID 2
WARNING:  ParadeDB: Fetched column 'doc_id' (attno 2) = Some("3")
WARNING:  ParadeDB: Iteration 1: outer[1] (ctid 2) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: All join combinations exhausted
WARNING:  ParadeDB: Join execution finished after advancing position
WARNING:  ParadeDB: Cleaning up join execution state
WARNING:  ParadeDB: Join execution cleanup complete
 memory_pressure_test 
----------------------
                    1
(1 row)

-- Test 5: Error recovery scenarios
-- Test with invalid join conditions (should handle gracefully)
SELECT COUNT(*) as invalid_join_test
FROM complex_products p
JOIN complex_reviews r ON p.id = r.product_id
WHERE p.description @@@ 'nonexistent_term_12345' AND r.content @@@ 'impossible_phrase_67890';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_products"], inner relids: ["complex_reviews"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_reviews"], inner relids: ["complex_products"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = true
WARNING:  ParadeDB: Found join search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: ========== JOIN NODE PLANNING ==========
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Using PostgreSQL's provided target list with 0 entries, processed_tlist has 1 entries
WARNING:  ParadeDB: Found 2 relevant RTIs for score functions: {2, 1}
WARNING:  ParadeDB: No score functions detected - using PostgreSQL's standard target list handling for joins
WARNING:  ParadeDB: ========== JOIN PLANNING COMPLETE ==========
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: ==========================================
WARNING:  ParadeDB: Creating custom scan state for join node (scanrelid = 0)
WARNING:  ParadeDB: Extracted search predicates from private data - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Set join state - limit: None
WARNING:  ParadeDB: Created join execution state with limit None, outer_relid: 180965, inner_relid: 180974
WARNING:  ParadeDB: Beginning custom scan for join node
WARNING:  ParadeDB: Initializing join execution
WARNING:  ParadeDB: Join execution initialization complete
WARNING:  ParadeDB: Executing join step in phase: NotStarted
WARNING:  ParadeDB: Starting join execution
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1
WARNING:  ParadeDB: Outer predicate 0: relation=complex_products, uses_search=true
WARNING:  ParadeDB: Inner predicate 0: relation=complex_reviews, uses_search=true
WARNING:  ParadeDB: Initialized mock results - outer: 2, inner: 2
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[0] (ctid 1) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[0] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[0]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations complex_products and complex_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'complex_products', inner: 'complex_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation complex_products with CTID 1
WARNING:  ParadeDB: complex_products column 'id' = '1'
WARNING:  ParadeDB: complex_products column 'name' = 'Laptop Pro X1'
WARNING:  ParadeDB: complex_products column 'description' = 'High-performance laptop with advanced features'
WARNING:  ParadeDB: complex_products column 'category' = 'electronics'
WARNING:  ParadeDB: complex_products column 'price' = 'ERROR_TEXT_5'
WARNING:  ParadeDB: complex_products column 'manufacturer' = 'TechCorp'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation complex_reviews with CTID 1
WARNING:  ParadeDB: complex_reviews column 'id' = '1'
WARNING:  ParadeDB: complex_reviews column 'product_id' = '1'
WARNING:  ParadeDB: complex_reviews column 'title' = 'Amazing Performance'
WARNING:  ParadeDB: complex_reviews column 'content' = 'This laptop delivers exceptional performance for professional work'
WARNING:  ParadeDB: complex_reviews column 'rating' = '5'
WARNING:  ParadeDB: complex_reviews column 'verified_purchase' = 'ERROR_TEXT_6'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_reviews relation
WARNING:  ParadeDB: Fetched 6 columns from outer relation, 6 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [1]
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 1/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[1] (ctid 2) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[1] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[1]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations complex_products and complex_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'complex_products', inner: 'complex_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation complex_products with CTID 1
WARNING:  ParadeDB: complex_products column 'id' = '1'
WARNING:  ParadeDB: complex_products column 'name' = 'Laptop Pro X1'
WARNING:  ParadeDB: complex_products column 'description' = 'High-performance laptop with advanced features'
WARNING:  ParadeDB: complex_products column 'category' = 'electronics'
WARNING:  ParadeDB: complex_products column 'price' = 'ERROR_TEXT_5'
WARNING:  ParadeDB: complex_products column 'manufacturer' = 'TechCorp'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation complex_reviews with CTID 2
WARNING:  ParadeDB: complex_reviews column 'id' = '2'
WARNING:  ParadeDB: complex_reviews column 'product_id' = '1'
WARNING:  ParadeDB: complex_reviews column 'title' = 'Great Build Quality'
WARNING:  ParadeDB: complex_reviews column 'content' = 'Solid construction and premium materials'
WARNING:  ParadeDB: complex_reviews column 'rating' = '4'
WARNING:  ParadeDB: complex_reviews column 'verified_purchase' = 'ERROR_TEXT_6'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_reviews relation
WARNING:  ParadeDB: Fetched 6 columns from outer relation, 6 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next outer tuple [2/2], reset inner to 0
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 1/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[1] (ctid 2) × inner[0] (ctid 1) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [2]
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 2: outer[1] (ctid 2) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: All join combinations exhausted
WARNING:  ParadeDB: Join execution finished after advancing position
WARNING:  ParadeDB: Cleaning up join execution state
WARNING:  ParadeDB: Join execution cleanup complete
 invalid_join_test 
-------------------
                 2
(1 row)

-- Test with very long search terms
SELECT COUNT(*) as long_search_test
FROM complex_products p
JOIN complex_reviews r ON p.id = r.product_id
WHERE p.description @@@ 'this_is_a_very_long_search_term_that_should_not_match_anything_in_the_database_but_should_be_handled_gracefully' 
AND r.content @@@ 'another_extremely_long_search_phrase_that_tests_the_robustness_of_the_search_implementation';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_products"], inner relids: ["complex_reviews"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_reviews"], inner relids: ["complex_products"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = true
WARNING:  ParadeDB: Found join search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: ========== JOIN NODE PLANNING ==========
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Using PostgreSQL's provided target list with 0 entries, processed_tlist has 1 entries
WARNING:  ParadeDB: Found 2 relevant RTIs for score functions: {2, 1}
WARNING:  ParadeDB: No score functions detected - using PostgreSQL's standard target list handling for joins
WARNING:  ParadeDB: ========== JOIN PLANNING COMPLETE ==========
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: ==========================================
WARNING:  ParadeDB: Creating custom scan state for join node (scanrelid = 0)
WARNING:  ParadeDB: Extracted search predicates from private data - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Set join state - limit: None
WARNING:  ParadeDB: Created join execution state with limit None, outer_relid: 180965, inner_relid: 180974
WARNING:  ParadeDB: Beginning custom scan for join node
WARNING:  ParadeDB: Initializing join execution
WARNING:  ParadeDB: Join execution initialization complete
WARNING:  ParadeDB: Executing join step in phase: NotStarted
WARNING:  ParadeDB: Starting join execution
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1
WARNING:  ParadeDB: Outer predicate 0: relation=complex_products, uses_search=true
WARNING:  ParadeDB: Inner predicate 0: relation=complex_reviews, uses_search=true
WARNING:  ParadeDB: Initialized mock results - outer: 2, inner: 2
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[0] (ctid 1) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[0] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[0]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations complex_products and complex_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'complex_products', inner: 'complex_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation complex_products with CTID 1
WARNING:  ParadeDB: complex_products column 'id' = '1'
WARNING:  ParadeDB: complex_products column 'name' = 'Laptop Pro X1'
WARNING:  ParadeDB: complex_products column 'description' = 'High-performance laptop with advanced features'
WARNING:  ParadeDB: complex_products column 'category' = 'electronics'
WARNING:  ParadeDB: complex_products column 'price' = 'ERROR_TEXT_5'
WARNING:  ParadeDB: complex_products column 'manufacturer' = 'TechCorp'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation complex_reviews with CTID 1
WARNING:  ParadeDB: complex_reviews column 'id' = '1'
WARNING:  ParadeDB: complex_reviews column 'product_id' = '1'
WARNING:  ParadeDB: complex_reviews column 'title' = 'Amazing Performance'
WARNING:  ParadeDB: complex_reviews column 'content' = 'This laptop delivers exceptional performance for professional work'
WARNING:  ParadeDB: complex_reviews column 'rating' = '5'
WARNING:  ParadeDB: complex_reviews column 'verified_purchase' = 'ERROR_TEXT_6'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_reviews relation
WARNING:  ParadeDB: Fetched 6 columns from outer relation, 6 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [1]
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 1/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[1] (ctid 2) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[1] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[1]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations complex_products and complex_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'complex_products', inner: 'complex_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation complex_products with CTID 1
WARNING:  ParadeDB: complex_products column 'id' = '1'
WARNING:  ParadeDB: complex_products column 'name' = 'Laptop Pro X1'
WARNING:  ParadeDB: complex_products column 'description' = 'High-performance laptop with advanced features'
WARNING:  ParadeDB: complex_products column 'category' = 'electronics'
WARNING:  ParadeDB: complex_products column 'price' = 'ERROR_TEXT_5'
WARNING:  ParadeDB: complex_products column 'manufacturer' = 'TechCorp'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation complex_reviews with CTID 2
WARNING:  ParadeDB: complex_reviews column 'id' = '2'
WARNING:  ParadeDB: complex_reviews column 'product_id' = '1'
WARNING:  ParadeDB: complex_reviews column 'title' = 'Great Build Quality'
WARNING:  ParadeDB: complex_reviews column 'content' = 'Solid construction and premium materials'
WARNING:  ParadeDB: complex_reviews column 'rating' = '4'
WARNING:  ParadeDB: complex_reviews column 'verified_purchase' = 'ERROR_TEXT_6'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_reviews relation
WARNING:  ParadeDB: Fetched 6 columns from outer relation, 6 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next outer tuple [2/2], reset inner to 0
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 1/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[1] (ctid 2) × inner[0] (ctid 1) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [2]
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 2: outer[1] (ctid 2) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: All join combinations exhausted
WARNING:  ParadeDB: Join execution finished after advancing position
WARNING:  ParadeDB: Cleaning up join execution state
WARNING:  ParadeDB: Join execution cleanup complete
 long_search_test 
------------------
                2
(1 row)

-- Test 6: Special characters and encoding
CREATE TABLE encoding_test_docs (
    id SERIAL PRIMARY KEY,
    title TEXT,
    content TEXT
);
CREATE TABLE encoding_test_reviews (
    id SERIAL PRIMARY KEY,
    doc_id INTEGER,
    review_text TEXT
);
-- Insert data with special characters
INSERT INTO encoding_test_docs (title, content) VALUES 
    ('Café & Restaurant', 'Délicious food with naïve service'),
    ('Résumé Builder', 'Professional résumé creation tool'),
    ('Math: π ≈ 3.14159', 'Mathematical constants and formulas: α, β, γ'),
    ('Emoji Test 😀', 'Content with emojis: 🚀 🎯 💡'),
    ('Quotes "Test"', 'Content with ''single'' and "double" quotes');
INSERT INTO encoding_test_reviews (doc_id, review_text) VALUES 
    (1, 'Excellent café with great ambiance'),
    (2, 'Perfect for creating professional résumés'),
    (3, 'Great mathematical reference with π calculations'),
    (4, 'Fun app with emoji support 😊'),
    (5, 'Handles quotes properly "very well"');
-- Create BM25 indexes
CREATE INDEX encoding_test_docs_idx ON encoding_test_docs USING bm25 (
    id, title, content
) WITH (
    key_field = 'id',
    text_fields = '{"title": {"tokenizer": {"type": "default"}}, "content": {"tokenizer": {"type": "default"}}}'
);
CREATE INDEX encoding_test_reviews_idx ON encoding_test_reviews USING bm25 (
    id, doc_id, review_text
) WITH (
    key_field = 'id',
    numeric_fields = '{"doc_id": {"fast": true}}',
    text_fields = '{"review_text": {"tokenizer": {"type": "default"}}}'
);
-- Test special character handling
SELECT d.title, r.review_text
FROM encoding_test_docs d
JOIN encoding_test_reviews r ON d.id = r.doc_id
WHERE d.content @@@ 'café OR résumé' AND r.review_text @@@ 'excellent OR professional';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["encoding_test_docs"], inner relids: ["encoding_test_reviews"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation encoding_test_docs (rti 1)
WARNING:  ParadeDB: Checked relations ["encoding_test_docs"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation encoding_test_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["encoding_test_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.doc_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation encoding_test_docs (rti 1)
WARNING:  ParadeDB: Extracted search query for encoding_test_docs: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation encoding_test_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for encoding_test_reviews: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for encoding_test_docs - uses_search: true
WARNING:  ParadeDB: Inner predicate for encoding_test_reviews - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["encoding_test_docs"], inner: ["encoding_test_reviews"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["encoding_test_docs"], inner: ["encoding_test_reviews"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["encoding_test_reviews"], inner relids: ["encoding_test_docs"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation encoding_test_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["encoding_test_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation encoding_test_docs (rti 1)
WARNING:  ParadeDB: Checked relations ["encoding_test_docs"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.doc_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation encoding_test_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for encoding_test_reviews: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation encoding_test_docs (rti 1)
WARNING:  ParadeDB: Extracted search query for encoding_test_docs: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for encoding_test_reviews - uses_search: true
WARNING:  ParadeDB: Inner predicate for encoding_test_docs - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["encoding_test_reviews"], inner: ["encoding_test_docs"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["encoding_test_reviews"], inner: ["encoding_test_docs"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = true
WARNING:  ParadeDB: Found join search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: ========== JOIN NODE PLANNING ==========
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Using PostgreSQL's provided target list with 2 entries, processed_tlist has 2 entries
WARNING:  ParadeDB: Found 2 relevant RTIs for score functions: {2, 1}
WARNING:  ParadeDB: No score functions detected - using PostgreSQL's standard target list handling for joins
WARNING:  ParadeDB: ========== JOIN PLANNING COMPLETE ==========
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: Input Target List: ({TARGETENTRY :expr {VAR :varno 1 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 3 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 3 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: Custom Target List We're Setting: ({TARGETENTRY :expr {VAR :varno 1 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 3 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 3 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: ==========================================
ERROR:  variable not found in subplan target list
-- Test 7: Performance under different load patterns
-- Burst of small queries (simulating high-frequency, low-complexity workload)
SELECT COUNT(*) FROM complex_products p JOIN complex_reviews r ON p.id = r.product_id WHERE p.name @@@ 'Laptop' AND r.title @@@ 'Amazing';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_products"], inner relids: ["complex_reviews"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_reviews"], inner relids: ["complex_products"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = true
WARNING:  ParadeDB: Found join search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: ========== JOIN NODE PLANNING ==========
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Using PostgreSQL's provided target list with 0 entries, processed_tlist has 1 entries
WARNING:  ParadeDB: Found 2 relevant RTIs for score functions: {2, 1}
WARNING:  ParadeDB: No score functions detected - using PostgreSQL's standard target list handling for joins
WARNING:  ParadeDB: ========== JOIN PLANNING COMPLETE ==========
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: ==========================================
WARNING:  ParadeDB: Creating custom scan state for join node (scanrelid = 0)
WARNING:  ParadeDB: Extracted search predicates from private data - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Set join state - limit: None
WARNING:  ParadeDB: Created join execution state with limit None, outer_relid: 180965, inner_relid: 180974
WARNING:  ParadeDB: Beginning custom scan for join node
WARNING:  ParadeDB: Initializing join execution
WARNING:  ParadeDB: Join execution initialization complete
WARNING:  ParadeDB: Executing join step in phase: NotStarted
WARNING:  ParadeDB: Starting join execution
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1
WARNING:  ParadeDB: Outer predicate 0: relation=complex_products, uses_search=true
WARNING:  ParadeDB: Inner predicate 0: relation=complex_reviews, uses_search=true
WARNING:  ParadeDB: Initialized mock results - outer: 2, inner: 2
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[0] (ctid 1) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[0] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[0]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations complex_products and complex_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'complex_products', inner: 'complex_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation complex_products with CTID 1
WARNING:  ParadeDB: complex_products column 'id' = '1'
WARNING:  ParadeDB: complex_products column 'name' = 'Laptop Pro X1'
WARNING:  ParadeDB: complex_products column 'description' = 'High-performance laptop with advanced features'
WARNING:  ParadeDB: complex_products column 'category' = 'electronics'
WARNING:  ParadeDB: complex_products column 'price' = 'ERROR_TEXT_5'
WARNING:  ParadeDB: complex_products column 'manufacturer' = 'TechCorp'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation complex_reviews with CTID 1
WARNING:  ParadeDB: complex_reviews column 'id' = '1'
WARNING:  ParadeDB: complex_reviews column 'product_id' = '1'
WARNING:  ParadeDB: complex_reviews column 'title' = 'Amazing Performance'
WARNING:  ParadeDB: complex_reviews column 'content' = 'This laptop delivers exceptional performance for professional work'
WARNING:  ParadeDB: complex_reviews column 'rating' = '5'
WARNING:  ParadeDB: complex_reviews column 'verified_purchase' = 'ERROR_TEXT_6'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_reviews relation
WARNING:  ParadeDB: Fetched 6 columns from outer relation, 6 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [1]
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 1/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[1] (ctid 2) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[1] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[1]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations complex_products and complex_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'complex_products', inner: 'complex_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation complex_products with CTID 1
WARNING:  ParadeDB: complex_products column 'id' = '1'
WARNING:  ParadeDB: complex_products column 'name' = 'Laptop Pro X1'
WARNING:  ParadeDB: complex_products column 'description' = 'High-performance laptop with advanced features'
WARNING:  ParadeDB: complex_products column 'category' = 'electronics'
WARNING:  ParadeDB: complex_products column 'price' = 'ERROR_TEXT_5'
WARNING:  ParadeDB: complex_products column 'manufacturer' = 'TechCorp'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation complex_reviews with CTID 2
WARNING:  ParadeDB: complex_reviews column 'id' = '2'
WARNING:  ParadeDB: complex_reviews column 'product_id' = '1'
WARNING:  ParadeDB: complex_reviews column 'title' = 'Great Build Quality'
WARNING:  ParadeDB: complex_reviews column 'content' = 'Solid construction and premium materials'
WARNING:  ParadeDB: complex_reviews column 'rating' = '4'
WARNING:  ParadeDB: complex_reviews column 'verified_purchase' = 'ERROR_TEXT_6'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_reviews relation
WARNING:  ParadeDB: Fetched 6 columns from outer relation, 6 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next outer tuple [2/2], reset inner to 0
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 1/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[1] (ctid 2) × inner[0] (ctid 1) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [2]
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 2: outer[1] (ctid 2) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: All join combinations exhausted
WARNING:  ParadeDB: Join execution finished after advancing position
WARNING:  ParadeDB: Cleaning up join execution state
WARNING:  ParadeDB: Join execution cleanup complete
 count 
-------
     2
(1 row)

SELECT COUNT(*) FROM complex_products p JOIN complex_reviews r ON p.id = r.product_id WHERE p.name @@@ 'Headphones' AND r.title @@@ 'Excellent';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_products"], inner relids: ["complex_reviews"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_reviews"], inner relids: ["complex_products"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = true
WARNING:  ParadeDB: Found join search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: ========== JOIN NODE PLANNING ==========
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Using PostgreSQL's provided target list with 0 entries, processed_tlist has 1 entries
WARNING:  ParadeDB: Found 2 relevant RTIs for score functions: {2, 1}
WARNING:  ParadeDB: No score functions detected - using PostgreSQL's standard target list handling for joins
WARNING:  ParadeDB: ========== JOIN PLANNING COMPLETE ==========
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: ==========================================
WARNING:  ParadeDB: Creating custom scan state for join node (scanrelid = 0)
WARNING:  ParadeDB: Extracted search predicates from private data - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Set join state - limit: None
WARNING:  ParadeDB: Created join execution state with limit None, outer_relid: 180965, inner_relid: 180974
WARNING:  ParadeDB: Beginning custom scan for join node
WARNING:  ParadeDB: Initializing join execution
WARNING:  ParadeDB: Join execution initialization complete
WARNING:  ParadeDB: Executing join step in phase: NotStarted
WARNING:  ParadeDB: Starting join execution
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1
WARNING:  ParadeDB: Outer predicate 0: relation=complex_products, uses_search=true
WARNING:  ParadeDB: Inner predicate 0: relation=complex_reviews, uses_search=true
WARNING:  ParadeDB: Initialized mock results - outer: 2, inner: 2
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[0] (ctid 1) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[0] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[0]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations complex_products and complex_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'complex_products', inner: 'complex_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation complex_products with CTID 1
WARNING:  ParadeDB: complex_products column 'id' = '1'
WARNING:  ParadeDB: complex_products column 'name' = 'Laptop Pro X1'
WARNING:  ParadeDB: complex_products column 'description' = 'High-performance laptop with advanced features'
WARNING:  ParadeDB: complex_products column 'category' = 'electronics'
WARNING:  ParadeDB: complex_products column 'price' = 'ERROR_TEXT_5'
WARNING:  ParadeDB: complex_products column 'manufacturer' = 'TechCorp'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation complex_reviews with CTID 1
WARNING:  ParadeDB: complex_reviews column 'id' = '1'
WARNING:  ParadeDB: complex_reviews column 'product_id' = '1'
WARNING:  ParadeDB: complex_reviews column 'title' = 'Amazing Performance'
WARNING:  ParadeDB: complex_reviews column 'content' = 'This laptop delivers exceptional performance for professional work'
WARNING:  ParadeDB: complex_reviews column 'rating' = '5'
WARNING:  ParadeDB: complex_reviews column 'verified_purchase' = 'ERROR_TEXT_6'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_reviews relation
WARNING:  ParadeDB: Fetched 6 columns from outer relation, 6 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [1]
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 1/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[1] (ctid 2) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[1] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[1]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations complex_products and complex_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'complex_products', inner: 'complex_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation complex_products with CTID 1
WARNING:  ParadeDB: complex_products column 'id' = '1'
WARNING:  ParadeDB: complex_products column 'name' = 'Laptop Pro X1'
WARNING:  ParadeDB: complex_products column 'description' = 'High-performance laptop with advanced features'
WARNING:  ParadeDB: complex_products column 'category' = 'electronics'
WARNING:  ParadeDB: complex_products column 'price' = 'ERROR_TEXT_5'
WARNING:  ParadeDB: complex_products column 'manufacturer' = 'TechCorp'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation complex_reviews with CTID 2
WARNING:  ParadeDB: complex_reviews column 'id' = '2'
WARNING:  ParadeDB: complex_reviews column 'product_id' = '1'
WARNING:  ParadeDB: complex_reviews column 'title' = 'Great Build Quality'
WARNING:  ParadeDB: complex_reviews column 'content' = 'Solid construction and premium materials'
WARNING:  ParadeDB: complex_reviews column 'rating' = '4'
WARNING:  ParadeDB: complex_reviews column 'verified_purchase' = 'ERROR_TEXT_6'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_reviews relation
WARNING:  ParadeDB: Fetched 6 columns from outer relation, 6 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next outer tuple [2/2], reset inner to 0
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 1/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[1] (ctid 2) × inner[0] (ctid 1) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [2]
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 2: outer[1] (ctid 2) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: All join combinations exhausted
WARNING:  ParadeDB: Join execution finished after advancing position
WARNING:  ParadeDB: Cleaning up join execution state
WARNING:  ParadeDB: Join execution cleanup complete
 count 
-------
     2
(1 row)

SELECT COUNT(*) FROM complex_products p JOIN complex_reviews r ON p.id = r.product_id WHERE p.name @@@ 'Watch' AND r.title @@@ 'Perfect';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_products"], inner relids: ["complex_reviews"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_reviews"], inner relids: ["complex_products"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = true
WARNING:  ParadeDB: Found join search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: ========== JOIN NODE PLANNING ==========
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Using PostgreSQL's provided target list with 0 entries, processed_tlist has 1 entries
WARNING:  ParadeDB: Found 2 relevant RTIs for score functions: {2, 1}
WARNING:  ParadeDB: No score functions detected - using PostgreSQL's standard target list handling for joins
WARNING:  ParadeDB: ========== JOIN PLANNING COMPLETE ==========
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: ==========================================
WARNING:  ParadeDB: Creating custom scan state for join node (scanrelid = 0)
WARNING:  ParadeDB: Extracted search predicates from private data - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Set join state - limit: None
WARNING:  ParadeDB: Created join execution state with limit None, outer_relid: 180965, inner_relid: 180974
WARNING:  ParadeDB: Beginning custom scan for join node
WARNING:  ParadeDB: Initializing join execution
WARNING:  ParadeDB: Join execution initialization complete
WARNING:  ParadeDB: Executing join step in phase: NotStarted
WARNING:  ParadeDB: Starting join execution
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1
WARNING:  ParadeDB: Outer predicate 0: relation=complex_products, uses_search=true
WARNING:  ParadeDB: Inner predicate 0: relation=complex_reviews, uses_search=true
WARNING:  ParadeDB: Initialized mock results - outer: 2, inner: 2
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[0] (ctid 1) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[0] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[0]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations complex_products and complex_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'complex_products', inner: 'complex_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation complex_products with CTID 1
WARNING:  ParadeDB: complex_products column 'id' = '1'
WARNING:  ParadeDB: complex_products column 'name' = 'Laptop Pro X1'
WARNING:  ParadeDB: complex_products column 'description' = 'High-performance laptop with advanced features'
WARNING:  ParadeDB: complex_products column 'category' = 'electronics'
WARNING:  ParadeDB: complex_products column 'price' = 'ERROR_TEXT_5'
WARNING:  ParadeDB: complex_products column 'manufacturer' = 'TechCorp'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation complex_reviews with CTID 1
WARNING:  ParadeDB: complex_reviews column 'id' = '1'
WARNING:  ParadeDB: complex_reviews column 'product_id' = '1'
WARNING:  ParadeDB: complex_reviews column 'title' = 'Amazing Performance'
WARNING:  ParadeDB: complex_reviews column 'content' = 'This laptop delivers exceptional performance for professional work'
WARNING:  ParadeDB: complex_reviews column 'rating' = '5'
WARNING:  ParadeDB: complex_reviews column 'verified_purchase' = 'ERROR_TEXT_6'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_reviews relation
WARNING:  ParadeDB: Fetched 6 columns from outer relation, 6 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [1]
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 1/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[1] (ctid 2) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[1] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[1]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations complex_products and complex_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'complex_products', inner: 'complex_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation complex_products with CTID 1
WARNING:  ParadeDB: complex_products column 'id' = '1'
WARNING:  ParadeDB: complex_products column 'name' = 'Laptop Pro X1'
WARNING:  ParadeDB: complex_products column 'description' = 'High-performance laptop with advanced features'
WARNING:  ParadeDB: complex_products column 'category' = 'electronics'
WARNING:  ParadeDB: complex_products column 'price' = 'ERROR_TEXT_5'
WARNING:  ParadeDB: complex_products column 'manufacturer' = 'TechCorp'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation complex_reviews with CTID 2
WARNING:  ParadeDB: complex_reviews column 'id' = '2'
WARNING:  ParadeDB: complex_reviews column 'product_id' = '1'
WARNING:  ParadeDB: complex_reviews column 'title' = 'Great Build Quality'
WARNING:  ParadeDB: complex_reviews column 'content' = 'Solid construction and premium materials'
WARNING:  ParadeDB: complex_reviews column 'rating' = '4'
WARNING:  ParadeDB: complex_reviews column 'verified_purchase' = 'ERROR_TEXT_6'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_reviews relation
WARNING:  ParadeDB: Fetched 6 columns from outer relation, 6 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next outer tuple [2/2], reset inner to 0
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 1/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[1] (ctid 2) × inner[0] (ctid 1) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [2]
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 2: outer[1] (ctid 2) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: All join combinations exhausted
WARNING:  ParadeDB: Join execution finished after advancing position
WARNING:  ParadeDB: Cleaning up join execution state
WARNING:  ParadeDB: Join execution cleanup complete
 count 
-------
     2
(1 row)

SELECT COUNT(*) FROM complex_products p JOIN complex_reviews r ON p.id = r.product_id WHERE p.name @@@ 'Mouse' AND r.title @@@ 'Responsive';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_products"], inner relids: ["complex_reviews"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_reviews"], inner relids: ["complex_products"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = true
WARNING:  ParadeDB: Found join search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: ========== JOIN NODE PLANNING ==========
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Using PostgreSQL's provided target list with 0 entries, processed_tlist has 1 entries
WARNING:  ParadeDB: Found 2 relevant RTIs for score functions: {2, 1}
WARNING:  ParadeDB: No score functions detected - using PostgreSQL's standard target list handling for joins
WARNING:  ParadeDB: ========== JOIN PLANNING COMPLETE ==========
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: ==========================================
WARNING:  ParadeDB: Creating custom scan state for join node (scanrelid = 0)
WARNING:  ParadeDB: Extracted search predicates from private data - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Set join state - limit: None
WARNING:  ParadeDB: Created join execution state with limit None, outer_relid: 180965, inner_relid: 180974
WARNING:  ParadeDB: Beginning custom scan for join node
WARNING:  ParadeDB: Initializing join execution
WARNING:  ParadeDB: Join execution initialization complete
WARNING:  ParadeDB: Executing join step in phase: NotStarted
WARNING:  ParadeDB: Starting join execution
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1
WARNING:  ParadeDB: Outer predicate 0: relation=complex_products, uses_search=true
WARNING:  ParadeDB: Inner predicate 0: relation=complex_reviews, uses_search=true
WARNING:  ParadeDB: Initialized mock results - outer: 2, inner: 2
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[0] (ctid 1) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[0] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[0]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations complex_products and complex_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'complex_products', inner: 'complex_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation complex_products with CTID 1
WARNING:  ParadeDB: complex_products column 'id' = '1'
WARNING:  ParadeDB: complex_products column 'name' = 'Laptop Pro X1'
WARNING:  ParadeDB: complex_products column 'description' = 'High-performance laptop with advanced features'
WARNING:  ParadeDB: complex_products column 'category' = 'electronics'
WARNING:  ParadeDB: complex_products column 'price' = 'ERROR_TEXT_5'
WARNING:  ParadeDB: complex_products column 'manufacturer' = 'TechCorp'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation complex_reviews with CTID 1
WARNING:  ParadeDB: complex_reviews column 'id' = '1'
WARNING:  ParadeDB: complex_reviews column 'product_id' = '1'
WARNING:  ParadeDB: complex_reviews column 'title' = 'Amazing Performance'
WARNING:  ParadeDB: complex_reviews column 'content' = 'This laptop delivers exceptional performance for professional work'
WARNING:  ParadeDB: complex_reviews column 'rating' = '5'
WARNING:  ParadeDB: complex_reviews column 'verified_purchase' = 'ERROR_TEXT_6'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_reviews relation
WARNING:  ParadeDB: Fetched 6 columns from outer relation, 6 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [1]
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 1/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[1] (ctid 2) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[1] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[1]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations complex_products and complex_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'complex_products', inner: 'complex_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation complex_products with CTID 1
WARNING:  ParadeDB: complex_products column 'id' = '1'
WARNING:  ParadeDB: complex_products column 'name' = 'Laptop Pro X1'
WARNING:  ParadeDB: complex_products column 'description' = 'High-performance laptop with advanced features'
WARNING:  ParadeDB: complex_products column 'category' = 'electronics'
WARNING:  ParadeDB: complex_products column 'price' = 'ERROR_TEXT_5'
WARNING:  ParadeDB: complex_products column 'manufacturer' = 'TechCorp'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation complex_reviews with CTID 2
WARNING:  ParadeDB: complex_reviews column 'id' = '2'
WARNING:  ParadeDB: complex_reviews column 'product_id' = '1'
WARNING:  ParadeDB: complex_reviews column 'title' = 'Great Build Quality'
WARNING:  ParadeDB: complex_reviews column 'content' = 'Solid construction and premium materials'
WARNING:  ParadeDB: complex_reviews column 'rating' = '4'
WARNING:  ParadeDB: complex_reviews column 'verified_purchase' = 'ERROR_TEXT_6'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_reviews relation
WARNING:  ParadeDB: Fetched 6 columns from outer relation, 6 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next outer tuple [2/2], reset inner to 0
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 1/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[1] (ctid 2) × inner[0] (ctid 1) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [2]
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 2: outer[1] (ctid 2) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: All join combinations exhausted
WARNING:  ParadeDB: Join execution finished after advancing position
WARNING:  ParadeDB: Cleaning up join execution state
WARNING:  ParadeDB: Join execution cleanup complete
 count 
-------
     2
(1 row)

SELECT COUNT(*) FROM complex_products p JOIN complex_reviews r ON p.id = r.product_id WHERE p.name @@@ 'Coffee' AND r.title @@@ 'Perfect';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_products"], inner relids: ["complex_reviews"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_reviews"], inner relids: ["complex_products"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = true
WARNING:  ParadeDB: Found join search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: ========== JOIN NODE PLANNING ==========
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Using PostgreSQL's provided target list with 0 entries, processed_tlist has 1 entries
WARNING:  ParadeDB: Found 2 relevant RTIs for score functions: {2, 1}
WARNING:  ParadeDB: No score functions detected - using PostgreSQL's standard target list handling for joins
WARNING:  ParadeDB: ========== JOIN PLANNING COMPLETE ==========
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: ==========================================
WARNING:  ParadeDB: Creating custom scan state for join node (scanrelid = 0)
WARNING:  ParadeDB: Extracted search predicates from private data - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Set join state - limit: None
WARNING:  ParadeDB: Created join execution state with limit None, outer_relid: 180965, inner_relid: 180974
WARNING:  ParadeDB: Beginning custom scan for join node
WARNING:  ParadeDB: Initializing join execution
WARNING:  ParadeDB: Join execution initialization complete
WARNING:  ParadeDB: Executing join step in phase: NotStarted
WARNING:  ParadeDB: Starting join execution
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1
WARNING:  ParadeDB: Outer predicate 0: relation=complex_products, uses_search=true
WARNING:  ParadeDB: Inner predicate 0: relation=complex_reviews, uses_search=true
WARNING:  ParadeDB: Initialized mock results - outer: 2, inner: 2
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[0] (ctid 1) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[0] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[0]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations complex_products and complex_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'complex_products', inner: 'complex_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation complex_products with CTID 1
WARNING:  ParadeDB: complex_products column 'id' = '1'
WARNING:  ParadeDB: complex_products column 'name' = 'Laptop Pro X1'
WARNING:  ParadeDB: complex_products column 'description' = 'High-performance laptop with advanced features'
WARNING:  ParadeDB: complex_products column 'category' = 'electronics'
WARNING:  ParadeDB: complex_products column 'price' = 'ERROR_TEXT_5'
WARNING:  ParadeDB: complex_products column 'manufacturer' = 'TechCorp'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation complex_reviews with CTID 1
WARNING:  ParadeDB: complex_reviews column 'id' = '1'
WARNING:  ParadeDB: complex_reviews column 'product_id' = '1'
WARNING:  ParadeDB: complex_reviews column 'title' = 'Amazing Performance'
WARNING:  ParadeDB: complex_reviews column 'content' = 'This laptop delivers exceptional performance for professional work'
WARNING:  ParadeDB: complex_reviews column 'rating' = '5'
WARNING:  ParadeDB: complex_reviews column 'verified_purchase' = 'ERROR_TEXT_6'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_reviews relation
WARNING:  ParadeDB: Fetched 6 columns from outer relation, 6 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [1]
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 1/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[1] (ctid 2) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[1] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[1]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations complex_products and complex_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'complex_products', inner: 'complex_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation complex_products with CTID 1
WARNING:  ParadeDB: complex_products column 'id' = '1'
WARNING:  ParadeDB: complex_products column 'name' = 'Laptop Pro X1'
WARNING:  ParadeDB: complex_products column 'description' = 'High-performance laptop with advanced features'
WARNING:  ParadeDB: complex_products column 'category' = 'electronics'
WARNING:  ParadeDB: complex_products column 'price' = 'ERROR_TEXT_5'
WARNING:  ParadeDB: complex_products column 'manufacturer' = 'TechCorp'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation complex_reviews with CTID 2
WARNING:  ParadeDB: complex_reviews column 'id' = '2'
WARNING:  ParadeDB: complex_reviews column 'product_id' = '1'
WARNING:  ParadeDB: complex_reviews column 'title' = 'Great Build Quality'
WARNING:  ParadeDB: complex_reviews column 'content' = 'Solid construction and premium materials'
WARNING:  ParadeDB: complex_reviews column 'rating' = '4'
WARNING:  ParadeDB: complex_reviews column 'verified_purchase' = 'ERROR_TEXT_6'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_reviews relation
WARNING:  ParadeDB: Fetched 6 columns from outer relation, 6 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next outer tuple [2/2], reset inner to 0
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 1/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[1] (ctid 2) × inner[0] (ctid 1) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [2]
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 2: outer[1] (ctid 2) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: All join combinations exhausted
WARNING:  ParadeDB: Join execution finished after advancing position
WARNING:  ParadeDB: Cleaning up join execution state
WARNING:  ParadeDB: Join execution cleanup complete
 count 
-------
     2
(1 row)

-- Large complex query (simulating analytical workload)
SELECT 
    p.category,
    COUNT(*) as product_count,
    AVG(r.rating) as avg_rating,
    COUNT(DISTINCT r.id) as review_count
FROM complex_products p
JOIN complex_reviews r ON p.id = r.product_id
WHERE p.description @@@ 'performance OR quality OR premium' 
AND r.content @@@ 'excellent OR outstanding OR amazing'
GROUP BY p.category
ORDER BY avg_rating DESC;
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_products"], inner relids: ["complex_reviews"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_reviews"], inner relids: ["complex_products"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = true
WARNING:  ParadeDB: Found join search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: ========== JOIN NODE PLANNING ==========
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Using PostgreSQL's provided target list with 3 entries, processed_tlist has 4 entries
WARNING:  ParadeDB: Found 2 relevant RTIs for score functions: {2, 1}
WARNING:  ParadeDB: No score functions detected - using PostgreSQL's standard target list handling for joins
WARNING:  ParadeDB: ========== JOIN PLANNING COMPLETE ==========
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: Input Target List: ({TARGETENTRY :expr {VAR :varno 1 :varattno 4 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 4 :location -1} :resno 1 :resname <> :ressortgroupref 2 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 5 :vartype 23 :vartypmod -1 :varcollid 0 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 5 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 1 :vartype 23 :vartypmod -1 :varcollid 0 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 1 :location -1} :resno 3 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: Custom Target List We're Setting: ({TARGETENTRY :expr {VAR :varno 1 :varattno 4 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 4 :location -1} :resno 1 :resname <> :ressortgroupref 2 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 5 :vartype 23 :vartypmod -1 :varcollid 0 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 5 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 1 :vartype 23 :vartypmod -1 :varcollid 0 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 1 :location -1} :resno 3 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: ==========================================
ERROR:  variable not found in subplan target list
-- Test 8: Edge cases for semi-join optimization
-- Test with empty result sets
SELECT COUNT(*) as empty_result_test
FROM complex_products p
JOIN complex_reviews r ON p.id = r.product_id
WHERE p.description @@@ 'zzz_nonexistent' AND r.content @@@ 'yyy_impossible';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_products"], inner relids: ["complex_reviews"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_reviews"], inner relids: ["complex_products"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = true
WARNING:  ParadeDB: Found join search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: ========== JOIN NODE PLANNING ==========
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Using PostgreSQL's provided target list with 0 entries, processed_tlist has 1 entries
WARNING:  ParadeDB: Found 2 relevant RTIs for score functions: {2, 1}
WARNING:  ParadeDB: No score functions detected - using PostgreSQL's standard target list handling for joins
WARNING:  ParadeDB: ========== JOIN PLANNING COMPLETE ==========
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: ==========================================
WARNING:  ParadeDB: Creating custom scan state for join node (scanrelid = 0)
WARNING:  ParadeDB: Extracted search predicates from private data - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Set join state - limit: None
WARNING:  ParadeDB: Created join execution state with limit None, outer_relid: 180965, inner_relid: 180974
WARNING:  ParadeDB: Beginning custom scan for join node
WARNING:  ParadeDB: Initializing join execution
WARNING:  ParadeDB: Join execution initialization complete
WARNING:  ParadeDB: Executing join step in phase: NotStarted
WARNING:  ParadeDB: Starting join execution
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1
WARNING:  ParadeDB: Outer predicate 0: relation=complex_products, uses_search=true
WARNING:  ParadeDB: Inner predicate 0: relation=complex_reviews, uses_search=true
WARNING:  ParadeDB: Initialized mock results - outer: 2, inner: 2
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[0] (ctid 1) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[0] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[0]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations complex_products and complex_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'complex_products', inner: 'complex_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation complex_products with CTID 1
WARNING:  ParadeDB: complex_products column 'id' = '1'
WARNING:  ParadeDB: complex_products column 'name' = 'Laptop Pro X1'
WARNING:  ParadeDB: complex_products column 'description' = 'High-performance laptop with advanced features'
WARNING:  ParadeDB: complex_products column 'category' = 'electronics'
WARNING:  ParadeDB: complex_products column 'price' = 'ERROR_TEXT_5'
WARNING:  ParadeDB: complex_products column 'manufacturer' = 'TechCorp'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation complex_reviews with CTID 1
WARNING:  ParadeDB: complex_reviews column 'id' = '1'
WARNING:  ParadeDB: complex_reviews column 'product_id' = '1'
WARNING:  ParadeDB: complex_reviews column 'title' = 'Amazing Performance'
WARNING:  ParadeDB: complex_reviews column 'content' = 'This laptop delivers exceptional performance for professional work'
WARNING:  ParadeDB: complex_reviews column 'rating' = '5'
WARNING:  ParadeDB: complex_reviews column 'verified_purchase' = 'ERROR_TEXT_6'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_reviews relation
WARNING:  ParadeDB: Fetched 6 columns from outer relation, 6 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [1]
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 1/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[1] (ctid 2) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[1] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[1]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations complex_products and complex_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'complex_products', inner: 'complex_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation complex_products with CTID 1
WARNING:  ParadeDB: complex_products column 'id' = '1'
WARNING:  ParadeDB: complex_products column 'name' = 'Laptop Pro X1'
WARNING:  ParadeDB: complex_products column 'description' = 'High-performance laptop with advanced features'
WARNING:  ParadeDB: complex_products column 'category' = 'electronics'
WARNING:  ParadeDB: complex_products column 'price' = 'ERROR_TEXT_5'
WARNING:  ParadeDB: complex_products column 'manufacturer' = 'TechCorp'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation complex_reviews with CTID 2
WARNING:  ParadeDB: complex_reviews column 'id' = '2'
WARNING:  ParadeDB: complex_reviews column 'product_id' = '1'
WARNING:  ParadeDB: complex_reviews column 'title' = 'Great Build Quality'
WARNING:  ParadeDB: complex_reviews column 'content' = 'Solid construction and premium materials'
WARNING:  ParadeDB: complex_reviews column 'rating' = '4'
WARNING:  ParadeDB: complex_reviews column 'verified_purchase' = 'ERROR_TEXT_6'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_reviews relation
WARNING:  ParadeDB: Fetched 6 columns from outer relation, 6 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next outer tuple [2/2], reset inner to 0
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 1/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[1] (ctid 2) × inner[0] (ctid 1) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [2]
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 2: outer[1] (ctid 2) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: All join combinations exhausted
WARNING:  ParadeDB: Join execution finished after advancing position
WARNING:  ParadeDB: Cleaning up join execution state
WARNING:  ParadeDB: Join execution cleanup complete
 empty_result_test 
-------------------
                 2
(1 row)

-- Test with single result
SELECT p.name, r.title
FROM complex_products p
JOIN complex_reviews r ON p.id = r.product_id
WHERE p.name @@@ 'Laptop Pro X1' AND r.title @@@ 'Amazing Performance'
LIMIT 1;
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_products"], inner relids: ["complex_reviews"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_reviews"], inner relids: ["complex_products"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = true
WARNING:  ParadeDB: Found join search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: ========== JOIN NODE PLANNING ==========
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Using PostgreSQL's provided target list with 2 entries, processed_tlist has 2 entries
WARNING:  ParadeDB: Found 2 relevant RTIs for score functions: {2, 1}
WARNING:  ParadeDB: No score functions detected - using PostgreSQL's standard target list handling for joins
WARNING:  ParadeDB: ========== JOIN PLANNING COMPLETE ==========
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: Input Target List: ({TARGETENTRY :expr {VAR :varno 1 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 3 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 3 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: Custom Target List We're Setting: ({TARGETENTRY :expr {VAR :varno 1 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 3 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 3 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: ==========================================
ERROR:  variable not found in subplan target list
-- Test with all results (broad search)
SELECT COUNT(*) as broad_result_test
FROM complex_products p
JOIN complex_reviews r ON p.id = r.product_id
WHERE p.description @@@ 'with' AND r.content @@@ 'and';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_products"], inner relids: ["complex_reviews"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_reviews"], inner relids: ["complex_products"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = true
WARNING:  ParadeDB: Found join search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: ========== JOIN NODE PLANNING ==========
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Using PostgreSQL's provided target list with 0 entries, processed_tlist has 1 entries
WARNING:  ParadeDB: Found 2 relevant RTIs for score functions: {2, 1}
WARNING:  ParadeDB: No score functions detected - using PostgreSQL's standard target list handling for joins
WARNING:  ParadeDB: ========== JOIN PLANNING COMPLETE ==========
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: ==========================================
WARNING:  ParadeDB: Creating custom scan state for join node (scanrelid = 0)
WARNING:  ParadeDB: Extracted search predicates from private data - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Set join state - limit: None
WARNING:  ParadeDB: Created join execution state with limit None, outer_relid: 180965, inner_relid: 180974
WARNING:  ParadeDB: Beginning custom scan for join node
WARNING:  ParadeDB: Initializing join execution
WARNING:  ParadeDB: Join execution initialization complete
WARNING:  ParadeDB: Executing join step in phase: NotStarted
WARNING:  ParadeDB: Starting join execution
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1
WARNING:  ParadeDB: Outer predicate 0: relation=complex_products, uses_search=true
WARNING:  ParadeDB: Inner predicate 0: relation=complex_reviews, uses_search=true
WARNING:  ParadeDB: Initialized mock results - outer: 2, inner: 2
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[0] (ctid 1) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[0] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[0]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations complex_products and complex_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'complex_products', inner: 'complex_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation complex_products with CTID 1
WARNING:  ParadeDB: complex_products column 'id' = '1'
WARNING:  ParadeDB: complex_products column 'name' = 'Laptop Pro X1'
WARNING:  ParadeDB: complex_products column 'description' = 'High-performance laptop with advanced features'
WARNING:  ParadeDB: complex_products column 'category' = 'electronics'
WARNING:  ParadeDB: complex_products column 'price' = 'ERROR_TEXT_5'
WARNING:  ParadeDB: complex_products column 'manufacturer' = 'TechCorp'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation complex_reviews with CTID 1
WARNING:  ParadeDB: complex_reviews column 'id' = '1'
WARNING:  ParadeDB: complex_reviews column 'product_id' = '1'
WARNING:  ParadeDB: complex_reviews column 'title' = 'Amazing Performance'
WARNING:  ParadeDB: complex_reviews column 'content' = 'This laptop delivers exceptional performance for professional work'
WARNING:  ParadeDB: complex_reviews column 'rating' = '5'
WARNING:  ParadeDB: complex_reviews column 'verified_purchase' = 'ERROR_TEXT_6'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_reviews relation
WARNING:  ParadeDB: Fetched 6 columns from outer relation, 6 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [1]
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 1/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[1] (ctid 2) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[1] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[1]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations complex_products and complex_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'complex_products', inner: 'complex_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation complex_products with CTID 1
WARNING:  ParadeDB: complex_products column 'id' = '1'
WARNING:  ParadeDB: complex_products column 'name' = 'Laptop Pro X1'
WARNING:  ParadeDB: complex_products column 'description' = 'High-performance laptop with advanced features'
WARNING:  ParadeDB: complex_products column 'category' = 'electronics'
WARNING:  ParadeDB: complex_products column 'price' = 'ERROR_TEXT_5'
WARNING:  ParadeDB: complex_products column 'manufacturer' = 'TechCorp'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation complex_reviews with CTID 2
WARNING:  ParadeDB: complex_reviews column 'id' = '2'
WARNING:  ParadeDB: complex_reviews column 'product_id' = '1'
WARNING:  ParadeDB: complex_reviews column 'title' = 'Great Build Quality'
WARNING:  ParadeDB: complex_reviews column 'content' = 'Solid construction and premium materials'
WARNING:  ParadeDB: complex_reviews column 'rating' = '4'
WARNING:  ParadeDB: complex_reviews column 'verified_purchase' = 'ERROR_TEXT_6'
WARNING:  ParadeDB: Successfully fetched 6 columns from complex_reviews relation
WARNING:  ParadeDB: Fetched 6 columns from outer relation, 6 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next outer tuple [2/2], reset inner to 0
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Not a TopN join query
WARNING:  ParadeDB: Current positions - outer: 1/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[1] (ctid 2) × inner[0] (ctid 1) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [2]
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: complex_products, inner: complex_reviews
WARNING:  ParadeDB: Determining join keys for relations complex_products and complex_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("complex_products"), RTI 2 to relid Some("complex_reviews")
WARNING:  ParadeDB: Found matching join condition: complex_products.id = complex_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation complex_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation complex_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 2: outer[1] (ctid 2) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: All join combinations exhausted
WARNING:  ParadeDB: Join execution finished after advancing position
WARNING:  ParadeDB: Cleaning up join execution state
WARNING:  ParadeDB: Join execution cleanup complete
 broad_result_test 
-------------------
                 2
(1 row)

-- Test 9: Explain plans for different scenarios
EXPLAIN (COSTS OFF, BUFFERS OFF, ANALYZE OFF)
SELECT p.name, r.title
FROM complex_products p
JOIN complex_reviews r ON p.id = r.product_id
WHERE p.description @@@ 'laptop performance' AND r.content @@@ 'exceptional professional';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_products"], inner relids: ["complex_reviews"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_products"], inner: ["complex_reviews"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["complex_reviews"], inner relids: ["complex_products"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["complex_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation complex_products (rti 1)
WARNING:  ParadeDB: Checked relations ["complex_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for complex_reviews: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation complex_products (rti 1)
WARNING:  ParadeDB: Extracted search query for complex_products: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for complex_reviews - uses_search: true
WARNING:  ParadeDB: Inner predicate for complex_products - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["complex_reviews"], inner: ["complex_products"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = true
WARNING:  ParadeDB: Found join search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: ========== JOIN NODE PLANNING ==========
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Using PostgreSQL's provided target list with 2 entries, processed_tlist has 2 entries
WARNING:  ParadeDB: Found 2 relevant RTIs for score functions: {2, 1}
WARNING:  ParadeDB: No score functions detected - using PostgreSQL's standard target list handling for joins
WARNING:  ParadeDB: ========== JOIN PLANNING COMPLETE ==========
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: Input Target List: ({TARGETENTRY :expr {VAR :varno 1 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 3 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 3 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: Custom Target List We're Setting: ({TARGETENTRY :expr {VAR :varno 1 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 2 :varattno 3 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 3 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false})
WARNING:  ParadeDB: ==========================================
ERROR:  variable not found in subplan target list
EXPLAIN (COSTS OFF, BUFFERS OFF, ANALYZE OFF)
SELECT COUNT(*)
FROM memory_test_docs d
JOIN memory_test_comments c ON d.id = c.doc_id
WHERE d.content @@@ 'technology innovation' AND c.comment_text @@@ 'excellent innovative';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["memory_test_docs"], inner relids: ["memory_test_comments"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation memory_test_docs (rti 1)
WARNING:  ParadeDB: Checked relations ["memory_test_docs"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation memory_test_comments (rti 2)
WARNING:  ParadeDB: Checked relations ["memory_test_comments"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.doc_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation memory_test_docs (rti 1)
WARNING:  ParadeDB: Extracted search query for memory_test_docs: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation memory_test_comments (rti 2)
WARNING:  ParadeDB: Extracted search query for memory_test_comments: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for memory_test_docs - uses_search: true
WARNING:  ParadeDB: Inner predicate for memory_test_comments - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["memory_test_docs"], inner: ["memory_test_comments"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["memory_test_docs"], inner: ["memory_test_comments"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 37500, startup_cost: 50.00, total_cost: 237.50
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["memory_test_comments"], inner relids: ["memory_test_docs"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation memory_test_comments (rti 2)
WARNING:  ParadeDB: Checked relations ["memory_test_comments"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation memory_test_docs (rti 1)
WARNING:  ParadeDB: Checked relations ["memory_test_docs"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.doc_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation memory_test_comments (rti 2)
WARNING:  ParadeDB: Extracted search query for memory_test_comments: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation memory_test_docs (rti 1)
WARNING:  ParadeDB: Extracted search query for memory_test_docs: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for memory_test_comments - uses_search: true
WARNING:  ParadeDB: Inner predicate for memory_test_docs - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["memory_test_comments"], inner: ["memory_test_docs"]
WARNING:  ParadeDB: ========== STAGE 1: PATH CREATION STAGE ==========
WARNING:  ParadeDB: Creating custom join path for jointype: INNER, outer: ["memory_test_comments"], inner: ["memory_test_docs"]
WARNING:  ParadeDB: ========== STAGE 2: PATH COST ESTIMATION ==========
WARNING:  ParadeDB: Join path estimates - rows: 37500, startup_cost: 50.00, total_cost: 237.50
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: ========== PLANNING STAGE START ==========
WARNING:  ParadeDB: plan_custom_path called - is_join = true
WARNING:  ParadeDB: Found join search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: ========== JOIN NODE PLANNING ==========
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Using PostgreSQL's provided target list with 0 entries, processed_tlist has 1 entries
WARNING:  ParadeDB: Found 2 relevant RTIs for score functions: {2, 1}
WARNING:  ParadeDB: No score functions detected - using PostgreSQL's standard target list handling for joins
WARNING:  ParadeDB: ========== JOIN PLANNING COMPLETE ==========
WARNING:  ParadeDB: ========== PLANNING STAGE COMPLETE ==========
WARNING:  ParadeDB: ==========================================
WARNING:  ParadeDB: Creating custom scan state for join node (scanrelid = 0)
WARNING:  ParadeDB: Extracted search predicates from private data - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Set join state - limit: None
WARNING:  ParadeDB: Created join execution state with limit None, outer_relid: 180985, inner_relid: 180994
WARNING:  ParadeDB: Beginning custom scan for join node
WARNING:  ParadeDB: Initializing join execution
WARNING:  ParadeDB: Join execution initialization complete
ERROR:  called `Option::unwrap()` on a `None` value
-- Test 10: Cleanup and resource management
-- These tests ensure proper cleanup after various scenarios
-- Force cleanup by dropping and recreating tables
DROP TABLE IF EXISTS temp_test_docs CASCADE;
CREATE TABLE temp_test_docs (id SERIAL PRIMARY KEY, content TEXT);
INSERT INTO temp_test_docs (content) VALUES ('test content');
DROP TABLE temp_test_docs CASCADE;
-- Test with transaction rollback
BEGIN;
CREATE TABLE rollback_test (id SERIAL PRIMARY KEY, data TEXT);
INSERT INTO rollback_test (data) VALUES ('test data');
ROLLBACK;
-- Cleanup all test tables
DROP TABLE mixed_types_docs CASCADE;
DROP TABLE mixed_types_reviews CASCADE;
DROP TABLE complex_products CASCADE;
DROP TABLE complex_reviews CASCADE;
DROP TABLE memory_test_docs CASCADE;
DROP TABLE memory_test_comments CASCADE;
DROP TABLE encoding_test_docs CASCADE;
DROP TABLE encoding_test_reviews CASCADE;
RESET paradedb.enable_custom_join; 
