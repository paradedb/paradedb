-- Test semi-join optimization strategies and effectiveness
-- This test validates the semi-join optimizer's strategy selection and performance
-- Create the extension first
CREATE EXTENSION IF NOT EXISTS pg_search;
-- Enable the custom join feature
SET paradedb.enable_custom_join = true;
-- Test 1: Small dataset - should use SearchFilter strategy
CREATE TABLE small_products (
    id SERIAL PRIMARY KEY,
    name TEXT,
    description TEXT,
    category TEXT
);
CREATE TABLE small_reviews (
    id SERIAL PRIMARY KEY,
    product_id INTEGER,
    review_text TEXT,
    rating INTEGER
);
-- Insert small dataset (should trigger SearchFilter strategy)
INSERT INTO small_products (name, description, category) VALUES 
    ('Laptop Pro', 'High-performance laptop for professionals', 'electronics'),
    ('Wireless Mouse', 'Ergonomic wireless mouse with precision tracking', 'electronics'),
    ('Coffee Maker', 'Automatic drip coffee maker with timer', 'appliances');
INSERT INTO small_reviews (product_id, review_text, rating) VALUES 
    (1, 'Excellent laptop with great performance', 5),
    (1, 'Good build quality but expensive', 4),
    (2, 'Perfect mouse for daily use', 5),
    (3, 'Makes great coffee every morning', 4);
-- Create BM25 indexes
CREATE INDEX small_products_idx ON small_products USING bm25 (
    id, name, description, category
) WITH (
    key_field = 'id',
    text_fields = '{"name": {"tokenizer": {"type": "default"}}, "description": {"tokenizer": {"type": "default"}}, "category": {"tokenizer": {"type": "default"}}}'
);
CREATE INDEX small_reviews_idx ON small_reviews USING bm25 (
    id, product_id, review_text, rating
) WITH (
    key_field = 'id',
    numeric_fields = '{"product_id": {"fast": true}, "rating": {"fast": true}}',
    text_fields = '{"review_text": {"tokenizer": {"type": "default"}}}'
);
-- Test SearchFilter strategy (small result set)
SELECT p.name, r.review_text, r.rating
FROM small_products p
JOIN small_reviews r ON p.id = r.product_id
WHERE p.description @@@ 'laptop' AND r.review_text @@@ 'performance';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["small_products"], inner relids: ["small_reviews"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation small_products (rti 1)
WARNING:  ParadeDB: Checked relations ["small_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation small_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["small_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation small_products (rti 1)
WARNING:  ParadeDB: Extracted search query for small_products: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation small_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for small_reviews: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for small_products - uses_search: true
WARNING:  ParadeDB: Inner predicate for small_reviews - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["small_products"], inner: ["small_reviews"]
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["small_reviews"], inner relids: ["small_products"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation small_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["small_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation small_products (rti 1)
WARNING:  ParadeDB: Checked relations ["small_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation small_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for small_reviews: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation small_products (rti 1)
WARNING:  ParadeDB: Extracted search query for small_products: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for small_reviews - uses_search: true
WARNING:  ParadeDB: Inner predicate for small_products - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["small_reviews"], inner: ["small_products"]
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Join target list has 3 entries
WARNING:  ParadeDB: Mapped join variable varno=1, varattno=2 to 'join_attr_1'
WARNING:  ParadeDB: Mapped join variable varno=2, varattno=3 to 'join_attr_2'
WARNING:  ParadeDB: Mapped join variable varno=2, varattno=4 to 'join_attr_3'
WARNING:  ParadeDB: Set custom scan target list for join node
WARNING:  ParadeDB: Creating custom scan state for join node (scanrelid = 0)
WARNING:  ParadeDB: Extracted search predicates from private data - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Stored outer relation OIDs: ["small_products"]
WARNING:  ParadeDB: Stored inner relation OIDs: ["small_reviews"]
WARNING:  ParadeDB: Storing 3 variable mappings from planning phase
WARNING:  ParadeDB: Planning-time mapping: varno=1, attno=2 -> 'join_attr_1'
WARNING:  ParadeDB: Planning-time mapping: varno=2, attno=3 -> 'join_attr_2'
WARNING:  ParadeDB: Planning-time mapping: varno=2, attno=4 -> 'join_attr_3'
WARNING:  ParadeDB: Beginning custom scan for join node
WARNING:  ParadeDB: Initializing join execution
WARNING:  ParadeDB: Join execution initialization complete
WARNING:  ParadeDB: Executing join step in phase: NotStarted
WARNING:  ParadeDB: Starting join execution
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1
WARNING:  ParadeDB: Outer predicate 0: relation=small_products, uses_search=true
WARNING:  ParadeDB: Inner predicate 0: relation=small_reviews, uses_search=true
WARNING:  ParadeDB: Initialized mock results - outer: 2, inner: 2
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Determining join keys for relations small_products and small_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("small_products"), RTI 2 to relid Some("small_reviews")
WARNING:  ParadeDB: Found matching join condition: small_products.id = small_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation small_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation small_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[0] (ctid 1) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[0] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[0]
WARNING:  ParadeDB: Creating result tuple with 3 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations small_products and small_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'small_products', inner: 'small_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation small_products with CTID 1
WARNING:  ParadeDB: small_products column 'id' = '1'
WARNING:  ParadeDB: small_products column 'name' = 'Laptop Pro'
WARNING:  ParadeDB: small_products column 'description' = 'High-performance laptop for professionals'
WARNING:  ParadeDB: small_products column 'category' = 'electronics'
WARNING:  ParadeDB: Successfully fetched 4 columns from small_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation small_reviews with CTID 1
WARNING:  ParadeDB: small_reviews column 'id' = '1'
WARNING:  ParadeDB: small_reviews column 'product_id' = '1'
WARNING:  ParadeDB: small_reviews column 'review_text' = 'Excellent laptop with great performance'
WARNING:  ParadeDB: small_reviews column 'rating' = '5'
WARNING:  ParadeDB: Successfully fetched 4 columns from small_reviews relation
WARNING:  ParadeDB: Fetched 4 columns from outer relation, 4 from inner relation
WARNING:  ParadeDB: Analyzing 3 target entries using execution-time varno/attno mapping: [(1, Some((Ok("{VAR :varno -3 :varattno 1 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1}"),))), (2, Some((Ok("{VAR :varno -3 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 3 :location -1}"),))), (3, Some((Ok("{VAR :varno -3 :varattno 3 :vartype 23 :vartypmod -1 :varcollid 0 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 4 :location -1}"),)))]
WARNING:  ParadeDB: Mapped varno 4294967293 to outer relation small_products
WARNING:  ParadeDB: Built execution-time varno mapping with 1 entries: [(4294967293, "small_products")]
WARNING:  ParadeDB: Analyzing target entry 1 (resno: 1)
WARNING:  ParadeDB: Found Var in target entry 1 - varno: -3, attno: 1, varnosyn: 1, varattnosyn: 2
WARNING:  ParadeDB: Variable references INDEX/intermediate result, using varnosyn: 1, varattnosyn: 2
WARNING:  ParadeDB: Mapping original variable varnosyn: 1, varattnosyn: 2 to relation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Resolved varnosyn 1 to relation small_products
WARNING:  ParadeDB: varnosyn 1 resolved to relation small_products, attno 2
WARNING:  ParadeDB: Relation small_products attno 2 -> column name 'name'
WARNING:  ParadeDB: Target entry 1 mapped to: RelationColumn(small_products,name)
WARNING:  ParadeDB: Analyzing target entry 2 (resno: 2)
WARNING:  ParadeDB: Found Var in target entry 2 - varno: -3, attno: 2, varnosyn: 2, varattnosyn: 3
WARNING:  ParadeDB: Variable references INDEX/intermediate result, using varnosyn: 2, varattnosyn: 3
WARNING:  ParadeDB: Mapping original variable varnosyn: 2, varattnosyn: 3 to relation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Resolved varnosyn 2 to relation small_reviews
WARNING:  ParadeDB: varnosyn 2 resolved to relation small_reviews, attno 3
WARNING:  ParadeDB: Relation small_reviews attno 3 -> column name 'review_text'
WARNING:  ParadeDB: Target entry 2 mapped to: RelationColumn(small_reviews,review_text)
WARNING:  ParadeDB: Analyzing target entry 3 (resno: 3)
WARNING:  ParadeDB: Found Var in target entry 3 - varno: -3, attno: 3, varnosyn: 2, varattnosyn: 4
WARNING:  ParadeDB: Variable references INDEX/intermediate result, using varnosyn: 2, varattnosyn: 4
WARNING:  ParadeDB: Mapping original variable varnosyn: 2, varattnosyn: 4 to relation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Resolved varnosyn 2 to relation small_reviews
WARNING:  ParadeDB: varnosyn 2 resolved to relation small_reviews, attno 4
WARNING:  ParadeDB: Relation small_reviews attno 4 -> column name 'rating'
WARNING:  ParadeDB: Target entry 3 mapped to: RelationColumn(small_reviews,rating)
WARNING:  ParadeDB: Mapped 3 out of 3 column values: [Some("Laptop Pro"), Some("Excellent laptop with great performance"), Some("5")]
WARNING:  ParadeDB: Converting '5' to integer 5
WARNING:  ParadeDB: Created join result tuple with real heap data: [Some("Laptop Pro"), Some("Excellent laptop with great performance"), Some("5")]
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [1]
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 1/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Determining join keys for relations small_products and small_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("small_products"), RTI 2 to relid Some("small_reviews")
WARNING:  ParadeDB: Found matching join condition: small_products.id = small_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation small_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation small_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[1] (ctid 2) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[1] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[1]
WARNING:  ParadeDB: Creating result tuple with 3 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations small_products and small_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'small_products', inner: 'small_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation small_products with CTID 1
WARNING:  ParadeDB: small_products column 'id' = '1'
WARNING:  ParadeDB: small_products column 'name' = 'Laptop Pro'
WARNING:  ParadeDB: small_products column 'description' = 'High-performance laptop for professionals'
WARNING:  ParadeDB: small_products column 'category' = 'electronics'
WARNING:  ParadeDB: Successfully fetched 4 columns from small_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation small_reviews with CTID 2
WARNING:  ParadeDB: small_reviews column 'id' = '2'
WARNING:  ParadeDB: small_reviews column 'product_id' = '1'
WARNING:  ParadeDB: small_reviews column 'review_text' = 'Good build quality but expensive'
WARNING:  ParadeDB: small_reviews column 'rating' = '4'
WARNING:  ParadeDB: Successfully fetched 4 columns from small_reviews relation
WARNING:  ParadeDB: Fetched 4 columns from outer relation, 4 from inner relation
WARNING:  ParadeDB: Analyzing 3 target entries using execution-time varno/attno mapping: [(1, Some((Ok("{VAR :varno -3 :varattno 1 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1}"),))), (2, Some((Ok("{VAR :varno -3 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 3 :location -1}"),))), (3, Some((Ok("{VAR :varno -3 :varattno 3 :vartype 23 :vartypmod -1 :varcollid 0 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 4 :location -1}"),)))]
WARNING:  ParadeDB: Mapped varno 4294967293 to outer relation small_products
WARNING:  ParadeDB: Built execution-time varno mapping with 1 entries: [(4294967293, "small_products")]
WARNING:  ParadeDB: Analyzing target entry 1 (resno: 1)
WARNING:  ParadeDB: Found Var in target entry 1 - varno: -3, attno: 1, varnosyn: 1, varattnosyn: 2
WARNING:  ParadeDB: Variable references INDEX/intermediate result, using varnosyn: 1, varattnosyn: 2
WARNING:  ParadeDB: Mapping original variable varnosyn: 1, varattnosyn: 2 to relation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Resolved varnosyn 1 to relation small_products
WARNING:  ParadeDB: varnosyn 1 resolved to relation small_products, attno 2
WARNING:  ParadeDB: Relation small_products attno 2 -> column name 'name'
WARNING:  ParadeDB: Target entry 1 mapped to: RelationColumn(small_products,name)
WARNING:  ParadeDB: Analyzing target entry 2 (resno: 2)
WARNING:  ParadeDB: Found Var in target entry 2 - varno: -3, attno: 2, varnosyn: 2, varattnosyn: 3
WARNING:  ParadeDB: Variable references INDEX/intermediate result, using varnosyn: 2, varattnosyn: 3
WARNING:  ParadeDB: Mapping original variable varnosyn: 2, varattnosyn: 3 to relation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Resolved varnosyn 2 to relation small_reviews
WARNING:  ParadeDB: varnosyn 2 resolved to relation small_reviews, attno 3
WARNING:  ParadeDB: Relation small_reviews attno 3 -> column name 'review_text'
WARNING:  ParadeDB: Target entry 2 mapped to: RelationColumn(small_reviews,review_text)
WARNING:  ParadeDB: Analyzing target entry 3 (resno: 3)
WARNING:  ParadeDB: Found Var in target entry 3 - varno: -3, attno: 3, varnosyn: 2, varattnosyn: 4
WARNING:  ParadeDB: Variable references INDEX/intermediate result, using varnosyn: 2, varattnosyn: 4
WARNING:  ParadeDB: Mapping original variable varnosyn: 2, varattnosyn: 4 to relation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Resolved varnosyn 2 to relation small_reviews
WARNING:  ParadeDB: varnosyn 2 resolved to relation small_reviews, attno 4
WARNING:  ParadeDB: Relation small_reviews attno 4 -> column name 'rating'
WARNING:  ParadeDB: Target entry 3 mapped to: RelationColumn(small_reviews,rating)
WARNING:  ParadeDB: Mapped 3 out of 3 column values: [Some("Laptop Pro"), Some("Good build quality but expensive"), Some("4")]
WARNING:  ParadeDB: Converting '4' to integer 4
WARNING:  ParadeDB: Created join result tuple with real heap data: [Some("Laptop Pro"), Some("Good build quality but expensive"), Some("4")]
WARNING:  ParadeDB: Advanced to next outer tuple [2/2], reset inner to 0
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Current positions - outer: 1/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Determining join keys for relations small_products and small_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("small_products"), RTI 2 to relid Some("small_reviews")
WARNING:  ParadeDB: Found matching join condition: small_products.id = small_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation small_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation small_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[1] (ctid 2) × inner[0] (ctid 1) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [2]
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Determining join keys for relations small_products and small_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("small_products"), RTI 2 to relid Some("small_reviews")
WARNING:  ParadeDB: Found matching join condition: small_products.id = small_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation small_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation small_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 2: outer[1] (ctid 2) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: All join combinations exhausted
WARNING:  ParadeDB: Join execution finished after advancing position
WARNING:  ParadeDB: Cleaning up join execution state
WARNING:  ParadeDB: Join execution cleanup complete
    name    |               review_text               | rating 
------------+-----------------------------------------+--------
 Laptop Pro | Excellent laptop with great performance |      5
 Laptop Pro | Good build quality but expensive        |      4
(2 rows)

-- Test 2: Medium dataset - should use SortedArray strategy
CREATE TABLE medium_docs (
    id SERIAL PRIMARY KEY,
    title TEXT,
    content TEXT,
    author TEXT
);
CREATE TABLE medium_comments (
    id SERIAL PRIMARY KEY,
    doc_id INTEGER,
    comment_text TEXT,
    commenter TEXT
);
-- Insert medium dataset (1000-10000 range to trigger SortedArray)
INSERT INTO medium_docs (title, content, author)
SELECT 
    'Document ' || i,
    'Content about ' || 
    CASE (i % 10)
        WHEN 0 THEN 'technology and innovation'
        WHEN 1 THEN 'science and research'
        WHEN 2 THEN 'business and finance'
        WHEN 3 THEN 'health and medicine'
        WHEN 4 THEN 'education and learning'
        WHEN 5 THEN 'sports and fitness'
        WHEN 6 THEN 'travel and adventure'
        WHEN 7 THEN 'food and cooking'
        WHEN 8 THEN 'art and culture'
        ELSE 'music and entertainment'
    END || ' with detailed analysis and insights',
    'Author ' || ((i % 50) + 1)
FROM generate_series(1, 2000) i;
INSERT INTO medium_comments (doc_id, comment_text, commenter)
SELECT 
    (i % 2000) + 1,
    'Comment about ' ||
    CASE (i % 5)
        WHEN 0 THEN 'excellent analysis'
        WHEN 1 THEN 'interesting perspective'
        WHEN 2 THEN 'well researched'
        WHEN 3 THEN 'thought provoking'
        ELSE 'comprehensive coverage'
    END,
    'User' || ((i % 100) + 1)
FROM generate_series(1, 5000) i;
-- Create BM25 indexes
CREATE INDEX medium_docs_idx ON medium_docs USING bm25 (
    id, title, content, author
) WITH (
    key_field = 'id',
    text_fields = '{"title": {"tokenizer": {"type": "default"}}, "content": {"tokenizer": {"type": "default"}}, "author": {"tokenizer": {"type": "default"}}}'
);
CREATE INDEX medium_comments_idx ON medium_comments USING bm25 (
    id, doc_id, comment_text, commenter
) WITH (
    key_field = 'id',
    numeric_fields = '{"doc_id": {"fast": true}}',
    text_fields = '{"comment_text": {"tokenizer": {"type": "default"}}, "commenter": {"tokenizer": {"type": "default"}}}'
);
-- Test SortedArray strategy (medium result set)
SELECT COUNT(*) as total_matches
FROM medium_docs d
JOIN medium_comments c ON d.id = c.doc_id
WHERE d.content @@@ 'technology' AND c.comment_text @@@ 'excellent';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["medium_docs"], inner relids: ["medium_comments"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation medium_docs (rti 1)
WARNING:  ParadeDB: Checked relations ["medium_docs"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation medium_comments (rti 2)
WARNING:  ParadeDB: Checked relations ["medium_comments"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.doc_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation medium_docs (rti 1)
WARNING:  ParadeDB: Extracted search query for medium_docs: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation medium_comments (rti 2)
WARNING:  ParadeDB: Extracted search query for medium_comments: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for medium_docs - uses_search: true
WARNING:  ParadeDB: Inner predicate for medium_comments - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["medium_docs"], inner: ["medium_comments"]
WARNING:  ParadeDB: Join path estimates - rows: 10000, startup_cost: 50.00, total_cost: 100.00
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["medium_comments"], inner relids: ["medium_docs"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation medium_comments (rti 2)
WARNING:  ParadeDB: Checked relations ["medium_comments"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation medium_docs (rti 1)
WARNING:  ParadeDB: Checked relations ["medium_docs"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.doc_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation medium_comments (rti 2)
WARNING:  ParadeDB: Extracted search query for medium_comments: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation medium_docs (rti 1)
WARNING:  ParadeDB: Extracted search query for medium_docs: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for medium_comments - uses_search: true
WARNING:  ParadeDB: Inner predicate for medium_docs - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["medium_comments"], inner: ["medium_docs"]
WARNING:  ParadeDB: Join path estimates - rows: 10000, startup_cost: 50.00, total_cost: 100.00
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Join target list has 0 entries
WARNING:  ParadeDB: Set custom scan target list for join node
WARNING:  ParadeDB: Creating custom scan state for join node (scanrelid = 0)
WARNING:  ParadeDB: Extracted search predicates from private data - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Stored outer relation OIDs: ["medium_docs"]
WARNING:  ParadeDB: Stored inner relation OIDs: ["medium_comments"]
WARNING:  ParadeDB: Storing 0 variable mappings from planning phase
WARNING:  ParadeDB: Beginning custom scan for join node
WARNING:  ParadeDB: Initializing join execution
WARNING:  ParadeDB: Join execution initialization complete
WARNING:  ParadeDB: Executing join step in phase: NotStarted
WARNING:  ParadeDB: Starting join execution
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1
WARNING:  ParadeDB: Outer predicate 0: relation=medium_docs, uses_search=true
WARNING:  ParadeDB: Inner predicate 0: relation=medium_comments, uses_search=true
WARNING:  ParadeDB: Initialized mock results - outer: 2, inner: 2
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: medium_docs, inner: medium_comments
WARNING:  ParadeDB: Determining join keys for relations medium_docs and medium_comments using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (doc_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("medium_docs"), RTI 2 to relid Some("medium_comments")
WARNING:  ParadeDB: Found matching join condition: medium_docs.id = medium_comments.doc_id
WARNING:  ParadeDB: Fetching column 'id' from relation medium_docs with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'doc_id' from relation medium_comments with CTID 1
WARNING:  ParadeDB: Fetched column 'doc_id' (attno 2) = Some("2")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[0] (ctid 1) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [1]
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: medium_docs, inner: medium_comments
WARNING:  ParadeDB: Determining join keys for relations medium_docs and medium_comments using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (doc_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("medium_docs"), RTI 2 to relid Some("medium_comments")
WARNING:  ParadeDB: Found matching join condition: medium_docs.id = medium_comments.doc_id
WARNING:  ParadeDB: Fetching column 'id' from relation medium_docs with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'doc_id' from relation medium_comments with CTID 2
WARNING:  ParadeDB: Fetched column 'doc_id' (attno 2) = Some("3")
WARNING:  ParadeDB: Iteration 2: outer[0] (ctid 1) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next outer tuple [2/2], reset inner to 0
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: medium_docs, inner: medium_comments
WARNING:  ParadeDB: Determining join keys for relations medium_docs and medium_comments using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (doc_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("medium_docs"), RTI 2 to relid Some("medium_comments")
WARNING:  ParadeDB: Found matching join condition: medium_docs.id = medium_comments.doc_id
WARNING:  ParadeDB: Fetching column 'id' from relation medium_docs with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'doc_id' from relation medium_comments with CTID 1
WARNING:  ParadeDB: Fetched column 'doc_id' (attno 2) = Some("2")
WARNING:  ParadeDB: Iteration 3: outer[1] (ctid 2) × inner[0] (ctid 1) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[1] × inner[0] after 3 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[1], inner[0]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: medium_docs, inner: medium_comments
WARNING:  ParadeDB: Fetching real heap tuple values from relations medium_docs and medium_comments
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: medium_docs, inner: medium_comments
WARNING:  ParadeDB: Detected relations from predicates - outer: 'medium_docs', inner: 'medium_comments'
WARNING:  ParadeDB: Fetching all columns with names from relation medium_docs with CTID 2
WARNING:  ParadeDB: medium_docs column 'id' = '2'
WARNING:  ParadeDB: medium_docs column 'title' = 'Document 2'
WARNING:  ParadeDB: medium_docs column 'content' = 'Content about business and finance with detailed analysis and insights'
WARNING:  ParadeDB: medium_docs column 'author' = 'Author 3'
WARNING:  ParadeDB: Successfully fetched 4 columns from medium_docs relation
WARNING:  ParadeDB: Fetching all columns with names from relation medium_comments with CTID 1
WARNING:  ParadeDB: medium_comments column 'id' = '1'
WARNING:  ParadeDB: medium_comments column 'doc_id' = '2'
WARNING:  ParadeDB: medium_comments column 'comment_text' = 'Comment about interesting perspective'
WARNING:  ParadeDB: medium_comments column 'commenter' = 'User2'
WARNING:  ParadeDB: Successfully fetched 4 columns from medium_comments relation
WARNING:  ParadeDB: Fetched 4 columns from outer relation, 4 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [2]
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Current positions - outer: 1/2, inner: 1/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: medium_docs, inner: medium_comments
WARNING:  ParadeDB: Determining join keys for relations medium_docs and medium_comments using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (doc_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("medium_docs"), RTI 2 to relid Some("medium_comments")
WARNING:  ParadeDB: Found matching join condition: medium_docs.id = medium_comments.doc_id
WARNING:  ParadeDB: Fetching column 'id' from relation medium_docs with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'doc_id' from relation medium_comments with CTID 2
WARNING:  ParadeDB: Fetched column 'doc_id' (attno 2) = Some("3")
WARNING:  ParadeDB: Iteration 1: outer[1] (ctid 2) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: All join combinations exhausted
WARNING:  ParadeDB: Join execution finished after advancing position
WARNING:  ParadeDB: Cleaning up join execution state
WARNING:  ParadeDB: Join execution cleanup complete
 total_matches 
---------------
             1
(1 row)

-- Test 3: Large dataset - should use BloomFilter strategy
CREATE TABLE large_articles (
    id SERIAL PRIMARY KEY,
    headline TEXT,
    body TEXT,
    category TEXT
);
CREATE TABLE large_tags (
    id SERIAL PRIMARY KEY,
    article_id INTEGER,
    tag_name TEXT,
    tag_category TEXT
);
-- Insert large dataset (>10000 to trigger BloomFilter)
INSERT INTO large_articles (headline, body, category)
SELECT 
    'Article ' || i || ': ' ||
    CASE (i % 20)
        WHEN 0 THEN 'Breaking News in Technology'
        WHEN 1 THEN 'Scientific Discovery Announced'
        WHEN 2 THEN 'Business Market Analysis'
        WHEN 3 THEN 'Health Research Findings'
        WHEN 4 THEN 'Educational Policy Changes'
        WHEN 5 THEN 'Sports Championship Results'
        WHEN 6 THEN 'Travel Destination Guide'
        WHEN 7 THEN 'Culinary Innovation Report'
        WHEN 8 THEN 'Art Exhibition Review'
        WHEN 9 THEN 'Music Festival Coverage'
        WHEN 10 THEN 'Environmental Impact Study'
        WHEN 11 THEN 'Political Development Update'
        WHEN 12 THEN 'Economic Forecast Analysis'
        WHEN 13 THEN 'Social Media Trends'
        WHEN 14 THEN 'Automotive Industry News'
        WHEN 15 THEN 'Real Estate Market Report'
        WHEN 16 THEN 'Fashion Week Highlights'
        WHEN 17 THEN 'Gaming Industry Updates'
        WHEN 18 THEN 'Cryptocurrency Analysis'
        ELSE 'General Interest Story'
    END,
    'Detailed article content about ' || 
    CASE (i % 15)
        WHEN 0 THEN 'artificial intelligence and machine learning applications'
        WHEN 1 THEN 'climate change and environmental sustainability'
        WHEN 2 THEN 'global economic trends and market dynamics'
        WHEN 3 THEN 'medical breakthroughs and healthcare innovations'
        WHEN 4 THEN 'educational technology and online learning'
        WHEN 5 THEN 'renewable energy and green technology'
        WHEN 6 THEN 'space exploration and astronomical discoveries'
        WHEN 7 THEN 'biotechnology and genetic research'
        WHEN 8 THEN 'cybersecurity and data protection'
        WHEN 9 THEN 'urban planning and smart cities'
        WHEN 10 THEN 'social justice and human rights'
        WHEN 11 THEN 'digital transformation and automation'
        WHEN 12 THEN 'sustainable agriculture and food security'
        WHEN 13 THEN 'mental health and wellness'
        ELSE 'innovation and technological advancement'
    END || ' with comprehensive analysis and expert opinions',
    CASE (i % 8)
        WHEN 0 THEN 'technology'
        WHEN 1 THEN 'science'
        WHEN 2 THEN 'business'
        WHEN 3 THEN 'health'
        WHEN 4 THEN 'education'
        WHEN 5 THEN 'environment'
        WHEN 6 THEN 'politics'
        ELSE 'general'
    END
FROM generate_series(1, 15000) i;
INSERT INTO large_tags (article_id, tag_name, tag_category)
SELECT 
    (i % 15000) + 1,
    CASE (i % 30)
        WHEN 0 THEN 'artificial-intelligence'
        WHEN 1 THEN 'machine-learning'
        WHEN 2 THEN 'climate-change'
        WHEN 3 THEN 'sustainability'
        WHEN 4 THEN 'economics'
        WHEN 5 THEN 'finance'
        WHEN 6 THEN 'healthcare'
        WHEN 7 THEN 'medicine'
        WHEN 8 THEN 'education'
        WHEN 9 THEN 'technology'
        WHEN 10 THEN 'renewable-energy'
        WHEN 11 THEN 'green-tech'
        WHEN 12 THEN 'space'
        WHEN 13 THEN 'astronomy'
        WHEN 14 THEN 'biotechnology'
        WHEN 15 THEN 'genetics'
        WHEN 16 THEN 'cybersecurity'
        WHEN 17 THEN 'data-protection'
        WHEN 18 THEN 'urban-planning'
        WHEN 19 THEN 'smart-cities'
        WHEN 20 THEN 'social-justice'
        WHEN 21 THEN 'human-rights'
        WHEN 22 THEN 'digital-transformation'
        WHEN 23 THEN 'automation'
        WHEN 24 THEN 'agriculture'
        WHEN 25 THEN 'food-security'
        WHEN 26 THEN 'mental-health'
        WHEN 27 THEN 'wellness'
        WHEN 28 THEN 'innovation'
        ELSE 'research'
    END,
    CASE (i % 5)
        WHEN 0 THEN 'primary'
        WHEN 1 THEN 'secondary'
        WHEN 2 THEN 'trending'
        WHEN 3 THEN 'featured'
        ELSE 'general'
    END
FROM generate_series(1, 45000) i;
-- Create BM25 indexes
CREATE INDEX large_articles_idx ON large_articles USING bm25 (
    id, headline, body, category
) WITH (
    key_field = 'id',
    text_fields = '{"headline": {"tokenizer": {"type": "default"}}, "body": {"tokenizer": {"type": "default"}}, "category": {"tokenizer": {"type": "default"}}}'
);
CREATE INDEX large_tags_idx ON large_tags USING bm25 (
    id, article_id, tag_name, tag_category
) WITH (
    key_field = 'id',
    numeric_fields = '{"article_id": {"fast": true}}',
    text_fields = '{"tag_name": {"tokenizer": {"type": "default"}}, "tag_category": {"tokenizer": {"type": "default"}}}'
);
-- Test BloomFilter strategy (large result set)
SELECT COUNT(*) as bloom_filter_matches
FROM large_articles a
JOIN large_tags t ON a.id = t.article_id
WHERE a.body @@@ 'artificial intelligence' AND t.tag_name @@@ 'machine-learning';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["large_articles"], inner relids: ["large_tags"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation large_articles (rti 1)
WARNING:  ParadeDB: Checked relations ["large_articles"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation large_tags (rti 2)
WARNING:  ParadeDB: Checked relations ["large_tags"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.article_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation large_articles (rti 1)
WARNING:  ParadeDB: Extracted search query for large_articles: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation large_tags (rti 2)
WARNING:  ParadeDB: Extracted search query for large_tags: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for large_articles - uses_search: true
WARNING:  ParadeDB: Inner predicate for large_tags - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["large_articles"], inner: ["large_tags"]
WARNING:  ParadeDB: Join path estimates - rows: 75224, startup_cost: 50.00, total_cost: 426.12
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["large_tags"], inner relids: ["large_articles"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation large_tags (rti 2)
WARNING:  ParadeDB: Checked relations ["large_tags"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation large_articles (rti 1)
WARNING:  ParadeDB: Checked relations ["large_articles"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.article_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation large_tags (rti 2)
WARNING:  ParadeDB: Extracted search query for large_tags: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation large_articles (rti 1)
WARNING:  ParadeDB: Extracted search query for large_articles: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for large_tags - uses_search: true
WARNING:  ParadeDB: Inner predicate for large_articles - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["large_tags"], inner: ["large_articles"]
WARNING:  ParadeDB: Join path estimates - rows: 75224, startup_cost: 50.00, total_cost: 426.12
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Join target list has 0 entries
WARNING:  ParadeDB: Set custom scan target list for join node
WARNING:  ParadeDB: Creating custom scan state for join node (scanrelid = 0)
WARNING:  ParadeDB: Extracted search predicates from private data - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Stored outer relation OIDs: ["large_articles"]
WARNING:  ParadeDB: Stored inner relation OIDs: ["large_tags"]
WARNING:  ParadeDB: Storing 0 variable mappings from planning phase
WARNING:  ParadeDB: Beginning custom scan for join node
WARNING:  ParadeDB: Initializing join execution
WARNING:  ParadeDB: Join execution initialization complete
WARNING:  ParadeDB: Executing join step in phase: NotStarted
WARNING:  ParadeDB: Starting join execution
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1
WARNING:  ParadeDB: Outer predicate 0: relation=large_articles, uses_search=true
WARNING:  ParadeDB: Inner predicate 0: relation=large_tags, uses_search=true
WARNING:  ParadeDB: Initialized mock results - outer: 2, inner: 2
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: large_articles, inner: large_tags
WARNING:  ParadeDB: Determining join keys for relations large_articles and large_tags using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (article_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("large_articles"), RTI 2 to relid Some("large_tags")
WARNING:  ParadeDB: Found matching join condition: large_articles.id = large_tags.article_id
WARNING:  ParadeDB: Fetching column 'id' from relation large_articles with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'article_id' from relation large_tags with CTID 1
WARNING:  ParadeDB: Fetched column 'article_id' (attno 2) = Some("2")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[0] (ctid 1) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [1]
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: large_articles, inner: large_tags
WARNING:  ParadeDB: Determining join keys for relations large_articles and large_tags using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (article_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("large_articles"), RTI 2 to relid Some("large_tags")
WARNING:  ParadeDB: Found matching join condition: large_articles.id = large_tags.article_id
WARNING:  ParadeDB: Fetching column 'id' from relation large_articles with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'article_id' from relation large_tags with CTID 2
WARNING:  ParadeDB: Fetched column 'article_id' (attno 2) = Some("3")
WARNING:  ParadeDB: Iteration 2: outer[0] (ctid 1) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next outer tuple [2/2], reset inner to 0
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: large_articles, inner: large_tags
WARNING:  ParadeDB: Determining join keys for relations large_articles and large_tags using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (article_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("large_articles"), RTI 2 to relid Some("large_tags")
WARNING:  ParadeDB: Found matching join condition: large_articles.id = large_tags.article_id
WARNING:  ParadeDB: Fetching column 'id' from relation large_articles with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'article_id' from relation large_tags with CTID 1
WARNING:  ParadeDB: Fetched column 'article_id' (attno 2) = Some("2")
WARNING:  ParadeDB: Iteration 3: outer[1] (ctid 2) × inner[0] (ctid 1) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[1] × inner[0] after 3 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[1], inner[0]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: large_articles, inner: large_tags
WARNING:  ParadeDB: Fetching real heap tuple values from relations large_articles and large_tags
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: large_articles, inner: large_tags
WARNING:  ParadeDB: Detected relations from predicates - outer: 'large_articles', inner: 'large_tags'
WARNING:  ParadeDB: Fetching all columns with names from relation large_articles with CTID 2
WARNING:  ParadeDB: large_articles column 'id' = '2'
WARNING:  ParadeDB: large_articles column 'headline' = 'Article 2: Business Market Analysis'
WARNING:  ParadeDB: large_articles column 'body' = 'Detailed article content about global economic trends and market dynamics with comprehensive analysis and expert opinions'
WARNING:  ParadeDB: large_articles column 'category' = 'business'
WARNING:  ParadeDB: Successfully fetched 4 columns from large_articles relation
WARNING:  ParadeDB: Fetching all columns with names from relation large_tags with CTID 1
WARNING:  ParadeDB: large_tags column 'id' = '1'
WARNING:  ParadeDB: large_tags column 'article_id' = '2'
WARNING:  ParadeDB: large_tags column 'tag_name' = 'machine-learning'
WARNING:  ParadeDB: large_tags column 'tag_category' = 'secondary'
WARNING:  ParadeDB: Successfully fetched 4 columns from large_tags relation
WARNING:  ParadeDB: Fetched 4 columns from outer relation, 4 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [2]
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Current positions - outer: 1/2, inner: 1/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: large_articles, inner: large_tags
WARNING:  ParadeDB: Determining join keys for relations large_articles and large_tags using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (article_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("large_articles"), RTI 2 to relid Some("large_tags")
WARNING:  ParadeDB: Found matching join condition: large_articles.id = large_tags.article_id
WARNING:  ParadeDB: Fetching column 'id' from relation large_articles with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'article_id' from relation large_tags with CTID 2
WARNING:  ParadeDB: Fetched column 'article_id' (attno 2) = Some("3")
WARNING:  ParadeDB: Iteration 1: outer[1] (ctid 2) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: All join combinations exhausted
WARNING:  ParadeDB: Join execution finished after advancing position
WARNING:  ParadeDB: Cleaning up join execution state
WARNING:  ParadeDB: Join execution cleanup complete
 bloom_filter_matches 
----------------------
                    1
(1 row)

-- Test 4: Semi-join effectiveness validation
-- Test filter pushdown effectiveness by comparing with and without optimization
-- Disable semi-join temporarily to compare
SET paradedb.enable_semi_join_optimization = false;
-- Run same query without semi-join optimization
SELECT COUNT(*) as without_semi_join
FROM small_products p
JOIN small_reviews r ON p.id = r.product_id
WHERE p.description @@@ 'laptop' AND r.review_text @@@ 'performance';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["small_products"], inner relids: ["small_reviews"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation small_products (rti 1)
WARNING:  ParadeDB: Checked relations ["small_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation small_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["small_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation small_products (rti 1)
WARNING:  ParadeDB: Extracted search query for small_products: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation small_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for small_reviews: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for small_products - uses_search: true
WARNING:  ParadeDB: Inner predicate for small_reviews - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["small_products"], inner: ["small_reviews"]
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["small_reviews"], inner relids: ["small_products"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation small_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["small_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation small_products (rti 1)
WARNING:  ParadeDB: Checked relations ["small_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation small_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for small_reviews: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation small_products (rti 1)
WARNING:  ParadeDB: Extracted search query for small_products: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for small_reviews - uses_search: true
WARNING:  ParadeDB: Inner predicate for small_products - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["small_reviews"], inner: ["small_products"]
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Join target list has 0 entries
WARNING:  ParadeDB: Set custom scan target list for join node
WARNING:  ParadeDB: Creating custom scan state for join node (scanrelid = 0)
WARNING:  ParadeDB: Extracted search predicates from private data - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Stored outer relation OIDs: ["small_products"]
WARNING:  ParadeDB: Stored inner relation OIDs: ["small_reviews"]
WARNING:  ParadeDB: Storing 0 variable mappings from planning phase
WARNING:  ParadeDB: Beginning custom scan for join node
WARNING:  ParadeDB: Initializing join execution
WARNING:  ParadeDB: Join execution initialization complete
WARNING:  ParadeDB: Executing join step in phase: NotStarted
WARNING:  ParadeDB: Starting join execution
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1
WARNING:  ParadeDB: Outer predicate 0: relation=small_products, uses_search=true
WARNING:  ParadeDB: Inner predicate 0: relation=small_reviews, uses_search=true
WARNING:  ParadeDB: Initialized mock results - outer: 2, inner: 2
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Determining join keys for relations small_products and small_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("small_products"), RTI 2 to relid Some("small_reviews")
WARNING:  ParadeDB: Found matching join condition: small_products.id = small_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation small_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation small_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[0] (ctid 1) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[0] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[0]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations small_products and small_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'small_products', inner: 'small_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation small_products with CTID 1
WARNING:  ParadeDB: small_products column 'id' = '1'
WARNING:  ParadeDB: small_products column 'name' = 'Laptop Pro'
WARNING:  ParadeDB: small_products column 'description' = 'High-performance laptop for professionals'
WARNING:  ParadeDB: small_products column 'category' = 'electronics'
WARNING:  ParadeDB: Successfully fetched 4 columns from small_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation small_reviews with CTID 1
WARNING:  ParadeDB: small_reviews column 'id' = '1'
WARNING:  ParadeDB: small_reviews column 'product_id' = '1'
WARNING:  ParadeDB: small_reviews column 'review_text' = 'Excellent laptop with great performance'
WARNING:  ParadeDB: small_reviews column 'rating' = '5'
WARNING:  ParadeDB: Successfully fetched 4 columns from small_reviews relation
WARNING:  ParadeDB: Fetched 4 columns from outer relation, 4 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [1]
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 1/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Determining join keys for relations small_products and small_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("small_products"), RTI 2 to relid Some("small_reviews")
WARNING:  ParadeDB: Found matching join condition: small_products.id = small_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation small_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation small_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[1] (ctid 2) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[1] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[1]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations small_products and small_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'small_products', inner: 'small_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation small_products with CTID 1
WARNING:  ParadeDB: small_products column 'id' = '1'
WARNING:  ParadeDB: small_products column 'name' = 'Laptop Pro'
WARNING:  ParadeDB: small_products column 'description' = 'High-performance laptop for professionals'
WARNING:  ParadeDB: small_products column 'category' = 'electronics'
WARNING:  ParadeDB: Successfully fetched 4 columns from small_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation small_reviews with CTID 2
WARNING:  ParadeDB: small_reviews column 'id' = '2'
WARNING:  ParadeDB: small_reviews column 'product_id' = '1'
WARNING:  ParadeDB: small_reviews column 'review_text' = 'Good build quality but expensive'
WARNING:  ParadeDB: small_reviews column 'rating' = '4'
WARNING:  ParadeDB: Successfully fetched 4 columns from small_reviews relation
WARNING:  ParadeDB: Fetched 4 columns from outer relation, 4 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next outer tuple [2/2], reset inner to 0
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Current positions - outer: 1/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Determining join keys for relations small_products and small_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("small_products"), RTI 2 to relid Some("small_reviews")
WARNING:  ParadeDB: Found matching join condition: small_products.id = small_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation small_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation small_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[1] (ctid 2) × inner[0] (ctid 1) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [2]
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Determining join keys for relations small_products and small_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("small_products"), RTI 2 to relid Some("small_reviews")
WARNING:  ParadeDB: Found matching join condition: small_products.id = small_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation small_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation small_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 2: outer[1] (ctid 2) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: All join combinations exhausted
WARNING:  ParadeDB: Join execution finished after advancing position
WARNING:  ParadeDB: Cleaning up join execution state
WARNING:  ParadeDB: Join execution cleanup complete
 without_semi_join 
-------------------
                 2
(1 row)

-- Re-enable semi-join optimization
SET paradedb.enable_semi_join_optimization = true;
-- Run same query with semi-join optimization
SELECT COUNT(*) as with_semi_join
FROM small_products p
JOIN small_reviews r ON p.id = r.product_id
WHERE p.description @@@ 'laptop' AND r.review_text @@@ 'performance';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["small_products"], inner relids: ["small_reviews"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation small_products (rti 1)
WARNING:  ParadeDB: Checked relations ["small_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation small_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["small_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation small_products (rti 1)
WARNING:  ParadeDB: Extracted search query for small_products: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation small_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for small_reviews: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for small_products - uses_search: true
WARNING:  ParadeDB: Inner predicate for small_reviews - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["small_products"], inner: ["small_reviews"]
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["small_reviews"], inner relids: ["small_products"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation small_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["small_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation small_products (rti 1)
WARNING:  ParadeDB: Checked relations ["small_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation small_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for small_reviews: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation small_products (rti 1)
WARNING:  ParadeDB: Extracted search query for small_products: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for small_reviews - uses_search: true
WARNING:  ParadeDB: Inner predicate for small_products - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["small_reviews"], inner: ["small_products"]
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Join target list has 0 entries
WARNING:  ParadeDB: Set custom scan target list for join node
WARNING:  ParadeDB: Creating custom scan state for join node (scanrelid = 0)
WARNING:  ParadeDB: Extracted search predicates from private data - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Stored outer relation OIDs: ["small_products"]
WARNING:  ParadeDB: Stored inner relation OIDs: ["small_reviews"]
WARNING:  ParadeDB: Storing 0 variable mappings from planning phase
WARNING:  ParadeDB: Beginning custom scan for join node
WARNING:  ParadeDB: Initializing join execution
WARNING:  ParadeDB: Join execution initialization complete
WARNING:  ParadeDB: Executing join step in phase: NotStarted
WARNING:  ParadeDB: Starting join execution
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1
WARNING:  ParadeDB: Outer predicate 0: relation=small_products, uses_search=true
WARNING:  ParadeDB: Inner predicate 0: relation=small_reviews, uses_search=true
WARNING:  ParadeDB: Initialized mock results - outer: 2, inner: 2
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Determining join keys for relations small_products and small_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("small_products"), RTI 2 to relid Some("small_reviews")
WARNING:  ParadeDB: Found matching join condition: small_products.id = small_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation small_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation small_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[0] (ctid 1) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[0] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[0]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations small_products and small_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'small_products', inner: 'small_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation small_products with CTID 1
WARNING:  ParadeDB: small_products column 'id' = '1'
WARNING:  ParadeDB: small_products column 'name' = 'Laptop Pro'
WARNING:  ParadeDB: small_products column 'description' = 'High-performance laptop for professionals'
WARNING:  ParadeDB: small_products column 'category' = 'electronics'
WARNING:  ParadeDB: Successfully fetched 4 columns from small_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation small_reviews with CTID 1
WARNING:  ParadeDB: small_reviews column 'id' = '1'
WARNING:  ParadeDB: small_reviews column 'product_id' = '1'
WARNING:  ParadeDB: small_reviews column 'review_text' = 'Excellent laptop with great performance'
WARNING:  ParadeDB: small_reviews column 'rating' = '5'
WARNING:  ParadeDB: Successfully fetched 4 columns from small_reviews relation
WARNING:  ParadeDB: Fetched 4 columns from outer relation, 4 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [1]
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 1/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Determining join keys for relations small_products and small_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("small_products"), RTI 2 to relid Some("small_reviews")
WARNING:  ParadeDB: Found matching join condition: small_products.id = small_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation small_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation small_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[1] (ctid 2) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[1] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[1]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations small_products and small_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'small_products', inner: 'small_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation small_products with CTID 1
WARNING:  ParadeDB: small_products column 'id' = '1'
WARNING:  ParadeDB: small_products column 'name' = 'Laptop Pro'
WARNING:  ParadeDB: small_products column 'description' = 'High-performance laptop for professionals'
WARNING:  ParadeDB: small_products column 'category' = 'electronics'
WARNING:  ParadeDB: Successfully fetched 4 columns from small_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation small_reviews with CTID 2
WARNING:  ParadeDB: small_reviews column 'id' = '2'
WARNING:  ParadeDB: small_reviews column 'product_id' = '1'
WARNING:  ParadeDB: small_reviews column 'review_text' = 'Good build quality but expensive'
WARNING:  ParadeDB: small_reviews column 'rating' = '4'
WARNING:  ParadeDB: Successfully fetched 4 columns from small_reviews relation
WARNING:  ParadeDB: Fetched 4 columns from outer relation, 4 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next outer tuple [2/2], reset inner to 0
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Current positions - outer: 1/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Determining join keys for relations small_products and small_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("small_products"), RTI 2 to relid Some("small_reviews")
WARNING:  ParadeDB: Found matching join condition: small_products.id = small_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation small_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation small_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[1] (ctid 2) × inner[0] (ctid 1) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [2]
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Determining join keys for relations small_products and small_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("small_products"), RTI 2 to relid Some("small_reviews")
WARNING:  ParadeDB: Found matching join condition: small_products.id = small_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation small_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation small_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 2: outer[1] (ctid 2) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: All join combinations exhausted
WARNING:  ParadeDB: Join execution finished after advancing position
WARNING:  ParadeDB: Cleaning up join execution state
WARNING:  ParadeDB: Join execution cleanup complete
 with_semi_join 
----------------
              2
(1 row)

-- Test 5: Edge cases for semi-join optimization
-- Test with no matching join keys (should handle gracefully)
SELECT COUNT(*) as no_join_matches
FROM small_products p
JOIN small_reviews r ON p.id = r.product_id
WHERE p.description @@@ 'nonexistent' AND r.review_text @@@ 'impossible';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["small_products"], inner relids: ["small_reviews"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation small_products (rti 1)
WARNING:  ParadeDB: Checked relations ["small_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation small_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["small_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation small_products (rti 1)
WARNING:  ParadeDB: Extracted search query for small_products: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation small_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for small_reviews: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for small_products - uses_search: true
WARNING:  ParadeDB: Inner predicate for small_reviews - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["small_products"], inner: ["small_reviews"]
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["small_reviews"], inner relids: ["small_products"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation small_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["small_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation small_products (rti 1)
WARNING:  ParadeDB: Checked relations ["small_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation small_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for small_reviews: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation small_products (rti 1)
WARNING:  ParadeDB: Extracted search query for small_products: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for small_reviews - uses_search: true
WARNING:  ParadeDB: Inner predicate for small_products - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["small_reviews"], inner: ["small_products"]
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Join target list has 0 entries
WARNING:  ParadeDB: Set custom scan target list for join node
WARNING:  ParadeDB: Creating custom scan state for join node (scanrelid = 0)
WARNING:  ParadeDB: Extracted search predicates from private data - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Stored outer relation OIDs: ["small_products"]
WARNING:  ParadeDB: Stored inner relation OIDs: ["small_reviews"]
WARNING:  ParadeDB: Storing 0 variable mappings from planning phase
WARNING:  ParadeDB: Beginning custom scan for join node
WARNING:  ParadeDB: Initializing join execution
WARNING:  ParadeDB: Join execution initialization complete
WARNING:  ParadeDB: Executing join step in phase: NotStarted
WARNING:  ParadeDB: Starting join execution
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1
WARNING:  ParadeDB: Outer predicate 0: relation=small_products, uses_search=true
WARNING:  ParadeDB: Inner predicate 0: relation=small_reviews, uses_search=true
WARNING:  ParadeDB: Initialized mock results - outer: 2, inner: 2
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Determining join keys for relations small_products and small_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("small_products"), RTI 2 to relid Some("small_reviews")
WARNING:  ParadeDB: Found matching join condition: small_products.id = small_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation small_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation small_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[0] (ctid 1) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[0] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[0]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations small_products and small_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'small_products', inner: 'small_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation small_products with CTID 1
WARNING:  ParadeDB: small_products column 'id' = '1'
WARNING:  ParadeDB: small_products column 'name' = 'Laptop Pro'
WARNING:  ParadeDB: small_products column 'description' = 'High-performance laptop for professionals'
WARNING:  ParadeDB: small_products column 'category' = 'electronics'
WARNING:  ParadeDB: Successfully fetched 4 columns from small_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation small_reviews with CTID 1
WARNING:  ParadeDB: small_reviews column 'id' = '1'
WARNING:  ParadeDB: small_reviews column 'product_id' = '1'
WARNING:  ParadeDB: small_reviews column 'review_text' = 'Excellent laptop with great performance'
WARNING:  ParadeDB: small_reviews column 'rating' = '5'
WARNING:  ParadeDB: Successfully fetched 4 columns from small_reviews relation
WARNING:  ParadeDB: Fetched 4 columns from outer relation, 4 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [1]
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 1/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Determining join keys for relations small_products and small_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("small_products"), RTI 2 to relid Some("small_reviews")
WARNING:  ParadeDB: Found matching join condition: small_products.id = small_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation small_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation small_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[1] (ctid 2) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[1] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[1]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations small_products and small_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'small_products', inner: 'small_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation small_products with CTID 1
WARNING:  ParadeDB: small_products column 'id' = '1'
WARNING:  ParadeDB: small_products column 'name' = 'Laptop Pro'
WARNING:  ParadeDB: small_products column 'description' = 'High-performance laptop for professionals'
WARNING:  ParadeDB: small_products column 'category' = 'electronics'
WARNING:  ParadeDB: Successfully fetched 4 columns from small_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation small_reviews with CTID 2
WARNING:  ParadeDB: small_reviews column 'id' = '2'
WARNING:  ParadeDB: small_reviews column 'product_id' = '1'
WARNING:  ParadeDB: small_reviews column 'review_text' = 'Good build quality but expensive'
WARNING:  ParadeDB: small_reviews column 'rating' = '4'
WARNING:  ParadeDB: Successfully fetched 4 columns from small_reviews relation
WARNING:  ParadeDB: Fetched 4 columns from outer relation, 4 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next outer tuple [2/2], reset inner to 0
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Current positions - outer: 1/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Determining join keys for relations small_products and small_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("small_products"), RTI 2 to relid Some("small_reviews")
WARNING:  ParadeDB: Found matching join condition: small_products.id = small_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation small_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation small_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[1] (ctid 2) × inner[0] (ctid 1) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [2]
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Determining join keys for relations small_products and small_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("small_products"), RTI 2 to relid Some("small_reviews")
WARNING:  ParadeDB: Found matching join condition: small_products.id = small_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation small_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation small_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 2: outer[1] (ctid 2) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: All join combinations exhausted
WARNING:  ParadeDB: Join execution finished after advancing position
WARNING:  ParadeDB: Cleaning up join execution state
WARNING:  ParadeDB: Join execution cleanup complete
 no_join_matches 
-----------------
               2
(1 row)

-- Test with very selective search (single result)
SELECT p.name, r.review_text
FROM small_products p
JOIN small_reviews r ON p.id = r.product_id
WHERE p.name @@@ 'Laptop Pro' AND r.review_text @@@ 'Excellent'
LIMIT 1;
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["small_products"], inner relids: ["small_reviews"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation small_products (rti 1)
WARNING:  ParadeDB: Checked relations ["small_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation small_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["small_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation small_products (rti 1)
WARNING:  ParadeDB: Extracted search query for small_products: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation small_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for small_reviews: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for small_products - uses_search: true
WARNING:  ParadeDB: Inner predicate for small_reviews - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["small_products"], inner: ["small_reviews"]
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["small_reviews"], inner relids: ["small_products"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation small_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["small_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation small_products (rti 1)
WARNING:  ParadeDB: Checked relations ["small_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation small_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for small_reviews: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation small_products (rti 1)
WARNING:  ParadeDB: Extracted search query for small_products: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for small_reviews - uses_search: true
WARNING:  ParadeDB: Inner predicate for small_products - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["small_reviews"], inner: ["small_products"]
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Join target list has 2 entries
WARNING:  ParadeDB: Mapped join variable varno=1, varattno=2 to 'join_attr_1'
WARNING:  ParadeDB: Mapped join variable varno=2, varattno=3 to 'join_attr_2'
WARNING:  ParadeDB: Set custom scan target list for join node
WARNING:  ParadeDB: Creating custom scan state for join node (scanrelid = 0)
WARNING:  ParadeDB: Extracted search predicates from private data - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Stored outer relation OIDs: ["small_products"]
WARNING:  ParadeDB: Stored inner relation OIDs: ["small_reviews"]
WARNING:  ParadeDB: Storing 2 variable mappings from planning phase
WARNING:  ParadeDB: Planning-time mapping: varno=1, attno=2 -> 'join_attr_1'
WARNING:  ParadeDB: Planning-time mapping: varno=2, attno=3 -> 'join_attr_2'
WARNING:  ParadeDB: Beginning custom scan for join node
WARNING:  ParadeDB: Initializing join execution
WARNING:  ParadeDB: Join execution initialization complete
WARNING:  ParadeDB: Executing join step in phase: NotStarted
WARNING:  ParadeDB: Starting join execution
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1
WARNING:  ParadeDB: Outer predicate 0: relation=small_products, uses_search=true
WARNING:  ParadeDB: Inner predicate 0: relation=small_reviews, uses_search=true
WARNING:  ParadeDB: Initialized mock results - outer: 2, inner: 2
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Determining join keys for relations small_products and small_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("small_products"), RTI 2 to relid Some("small_reviews")
WARNING:  ParadeDB: Found matching join condition: small_products.id = small_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation small_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation small_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[0] (ctid 1) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[0] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[0]
WARNING:  ParadeDB: Creating result tuple with 2 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations small_products and small_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'small_products', inner: 'small_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation small_products with CTID 1
WARNING:  ParadeDB: small_products column 'id' = '1'
WARNING:  ParadeDB: small_products column 'name' = 'Laptop Pro'
WARNING:  ParadeDB: small_products column 'description' = 'High-performance laptop for professionals'
WARNING:  ParadeDB: small_products column 'category' = 'electronics'
WARNING:  ParadeDB: Successfully fetched 4 columns from small_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation small_reviews with CTID 1
WARNING:  ParadeDB: small_reviews column 'id' = '1'
WARNING:  ParadeDB: small_reviews column 'product_id' = '1'
WARNING:  ParadeDB: small_reviews column 'review_text' = 'Excellent laptop with great performance'
WARNING:  ParadeDB: small_reviews column 'rating' = '5'
WARNING:  ParadeDB: Successfully fetched 4 columns from small_reviews relation
WARNING:  ParadeDB: Fetched 4 columns from outer relation, 4 from inner relation
WARNING:  ParadeDB: Analyzing 2 target entries using execution-time varno/attno mapping: [(1, Some((Ok("{VAR :varno -3 :varattno 1 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1}"),))), (2, Some((Ok("{VAR :varno -3 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 3 :location -1}"),)))]
WARNING:  ParadeDB: Mapped varno 4294967293 to outer relation small_products
WARNING:  ParadeDB: Built execution-time varno mapping with 1 entries: [(4294967293, "small_products")]
WARNING:  ParadeDB: Analyzing target entry 1 (resno: 1)
WARNING:  ParadeDB: Found Var in target entry 1 - varno: -3, attno: 1, varnosyn: 1, varattnosyn: 2
WARNING:  ParadeDB: Variable references INDEX/intermediate result, using varnosyn: 1, varattnosyn: 2
WARNING:  ParadeDB: Mapping original variable varnosyn: 1, varattnosyn: 2 to relation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Resolved varnosyn 1 to relation small_products
WARNING:  ParadeDB: varnosyn 1 resolved to relation small_products, attno 2
WARNING:  ParadeDB: Relation small_products attno 2 -> column name 'name'
WARNING:  ParadeDB: Target entry 1 mapped to: RelationColumn(small_products,name)
WARNING:  ParadeDB: Analyzing target entry 2 (resno: 2)
WARNING:  ParadeDB: Found Var in target entry 2 - varno: -3, attno: 2, varnosyn: 2, varattnosyn: 3
WARNING:  ParadeDB: Variable references INDEX/intermediate result, using varnosyn: 2, varattnosyn: 3
WARNING:  ParadeDB: Mapping original variable varnosyn: 2, varattnosyn: 3 to relation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Resolved varnosyn 2 to relation small_reviews
WARNING:  ParadeDB: varnosyn 2 resolved to relation small_reviews, attno 3
WARNING:  ParadeDB: Relation small_reviews attno 3 -> column name 'review_text'
WARNING:  ParadeDB: Target entry 2 mapped to: RelationColumn(small_reviews,review_text)
WARNING:  ParadeDB: Mapped 2 out of 2 column values: [Some("Laptop Pro"), Some("Excellent laptop with great performance")]
WARNING:  ParadeDB: Created join result tuple with real heap data: [Some("Laptop Pro"), Some("Excellent laptop with great performance")]
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [1]
WARNING:  ParadeDB: Cleaning up join execution state
WARNING:  ParadeDB: Join execution cleanup complete
    name    |               review_text               
------------+-----------------------------------------
 Laptop Pro | Excellent laptop with great performance
(1 row)

-- Test with broad search (many results)
SELECT COUNT(*) as broad_search_count
FROM medium_docs d
JOIN medium_comments c ON d.id = c.doc_id
WHERE d.content @@@ 'and' AND c.comment_text @@@ 'about';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["medium_docs"], inner relids: ["medium_comments"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation medium_docs (rti 1)
WARNING:  ParadeDB: Checked relations ["medium_docs"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation medium_comments (rti 2)
WARNING:  ParadeDB: Checked relations ["medium_comments"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.doc_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation medium_docs (rti 1)
WARNING:  ParadeDB: Extracted search query for medium_docs: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation medium_comments (rti 2)
WARNING:  ParadeDB: Extracted search query for medium_comments: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for medium_docs - uses_search: true
WARNING:  ParadeDB: Inner predicate for medium_comments - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["medium_docs"], inner: ["medium_comments"]
WARNING:  ParadeDB: Join path estimates - rows: 500000, startup_cost: 50.00, total_cost: 2550.00
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["medium_comments"], inner relids: ["medium_docs"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation medium_comments (rti 2)
WARNING:  ParadeDB: Checked relations ["medium_comments"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation medium_docs (rti 1)
WARNING:  ParadeDB: Checked relations ["medium_docs"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.doc_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation medium_comments (rti 2)
WARNING:  ParadeDB: Extracted search query for medium_comments: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation medium_docs (rti 1)
WARNING:  ParadeDB: Extracted search query for medium_docs: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for medium_comments - uses_search: true
WARNING:  ParadeDB: Inner predicate for medium_docs - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["medium_comments"], inner: ["medium_docs"]
WARNING:  ParadeDB: Join path estimates - rows: 500000, startup_cost: 50.00, total_cost: 2550.00
WARNING:  ParadeDB: Created custom join path, adding to joinrel
 broad_search_count 
--------------------
               5000
(1 row)

-- Test 6: Strategy selection validation
-- These queries should trigger different strategies based on estimated result sizes
-- Small selective query (SearchFilter)
EXPLAIN (COSTS OFF, BUFFERS OFF)
SELECT p.name, r.rating
FROM small_products p
JOIN small_reviews r ON p.id = r.product_id
WHERE p.description @@@ 'wireless precision' AND r.review_text @@@ 'perfect daily';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["small_products"], inner relids: ["small_reviews"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation small_products (rti 1)
WARNING:  ParadeDB: Checked relations ["small_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation small_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["small_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation small_products (rti 1)
WARNING:  ParadeDB: Extracted search query for small_products: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation small_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for small_reviews: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for small_products - uses_search: true
WARNING:  ParadeDB: Inner predicate for small_reviews - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["small_products"], inner: ["small_reviews"]
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["small_reviews"], inner relids: ["small_products"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation small_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["small_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation small_products (rti 1)
WARNING:  ParadeDB: Checked relations ["small_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation small_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for small_reviews: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation small_products (rti 1)
WARNING:  ParadeDB: Extracted search query for small_products: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for small_reviews - uses_search: true
WARNING:  ParadeDB: Inner predicate for small_products - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["small_reviews"], inner: ["small_products"]
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Join target list has 2 entries
WARNING:  ParadeDB: Mapped join variable varno=1, varattno=2 to 'join_attr_1'
WARNING:  ParadeDB: Mapped join variable varno=2, varattno=4 to 'join_attr_2'
WARNING:  ParadeDB: Set custom scan target list for join node
WARNING:  ParadeDB: Creating custom scan state for join node (scanrelid = 0)
WARNING:  ParadeDB: Extracted search predicates from private data - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Stored outer relation OIDs: ["small_products"]
WARNING:  ParadeDB: Stored inner relation OIDs: ["small_reviews"]
WARNING:  ParadeDB: Storing 2 variable mappings from planning phase
WARNING:  ParadeDB: Planning-time mapping: varno=1, attno=2 -> 'join_attr_1'
WARNING:  ParadeDB: Planning-time mapping: varno=2, attno=4 -> 'join_attr_2'
WARNING:  ParadeDB: Beginning custom scan for join node
WARNING:  ParadeDB: Initializing join execution
WARNING:  ParadeDB: Join execution initialization complete
ERROR:  called `Option::unwrap()` on a `None` value
-- Medium selective query (SortedArray)
EXPLAIN (COSTS OFF, BUFFERS OFF)
SELECT COUNT(*)
FROM medium_docs d
JOIN medium_comments c ON d.id = c.doc_id
WHERE d.content @@@ 'technology innovation' AND c.comment_text @@@ 'excellent analysis';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["medium_docs"], inner relids: ["medium_comments"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation medium_docs (rti 1)
WARNING:  ParadeDB: Checked relations ["medium_docs"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation medium_comments (rti 2)
WARNING:  ParadeDB: Checked relations ["medium_comments"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.doc_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation medium_docs (rti 1)
WARNING:  ParadeDB: Extracted search query for medium_docs: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation medium_comments (rti 2)
WARNING:  ParadeDB: Extracted search query for medium_comments: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for medium_docs - uses_search: true
WARNING:  ParadeDB: Inner predicate for medium_comments - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["medium_docs"], inner: ["medium_comments"]
WARNING:  ParadeDB: Join path estimates - rows: 10000, startup_cost: 50.00, total_cost: 100.00
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["medium_comments"], inner relids: ["medium_docs"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation medium_comments (rti 2)
WARNING:  ParadeDB: Checked relations ["medium_comments"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation medium_docs (rti 1)
WARNING:  ParadeDB: Checked relations ["medium_docs"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.doc_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation medium_comments (rti 2)
WARNING:  ParadeDB: Extracted search query for medium_comments: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation medium_docs (rti 1)
WARNING:  ParadeDB: Extracted search query for medium_docs: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for medium_comments - uses_search: true
WARNING:  ParadeDB: Inner predicate for medium_docs - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["medium_comments"], inner: ["medium_docs"]
WARNING:  ParadeDB: Join path estimates - rows: 10000, startup_cost: 50.00, total_cost: 100.00
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Join target list has 0 entries
WARNING:  ParadeDB: Set custom scan target list for join node
WARNING:  ParadeDB: Creating custom scan state for join node (scanrelid = 0)
WARNING:  ParadeDB: Extracted search predicates from private data - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Stored outer relation OIDs: ["medium_docs"]
WARNING:  ParadeDB: Stored inner relation OIDs: ["medium_comments"]
WARNING:  ParadeDB: Storing 0 variable mappings from planning phase
WARNING:  ParadeDB: Beginning custom scan for join node
WARNING:  ParadeDB: Initializing join execution
WARNING:  ParadeDB: Join execution initialization complete
ERROR:  called `Option::unwrap()` on a `None` value
-- Large selective query (BloomFilter)
EXPLAIN (COSTS OFF, BUFFERS OFF)
SELECT COUNT(*)
FROM large_articles a
JOIN large_tags t ON a.id = t.article_id
WHERE a.body @@@ 'machine learning applications' AND t.tag_name @@@ 'artificial-intelligence';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["large_articles"], inner relids: ["large_tags"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation large_articles (rti 1)
WARNING:  ParadeDB: Checked relations ["large_articles"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation large_tags (rti 2)
WARNING:  ParadeDB: Checked relations ["large_tags"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.article_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation large_articles (rti 1)
WARNING:  ParadeDB: Extracted search query for large_articles: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation large_tags (rti 2)
WARNING:  ParadeDB: Extracted search query for large_tags: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for large_articles - uses_search: true
WARNING:  ParadeDB: Inner predicate for large_tags - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["large_articles"], inner: ["large_tags"]
WARNING:  ParadeDB: Join path estimates - rows: 149326, startup_cost: 50.00, total_cost: 796.63
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["large_tags"], inner relids: ["large_articles"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation large_tags (rti 2)
WARNING:  ParadeDB: Checked relations ["large_tags"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation large_articles (rti 1)
WARNING:  ParadeDB: Checked relations ["large_articles"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.article_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation large_tags (rti 2)
WARNING:  ParadeDB: Extracted search query for large_tags: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation large_articles (rti 1)
WARNING:  ParadeDB: Extracted search query for large_articles: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for large_tags - uses_search: true
WARNING:  ParadeDB: Inner predicate for large_articles - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["large_tags"], inner: ["large_articles"]
WARNING:  ParadeDB: Join path estimates - rows: 149326, startup_cost: 50.00, total_cost: 796.63
WARNING:  ParadeDB: Created custom join path, adding to joinrel
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate
   ->  Gather
         Workers Planned: 2
         ->  Partial Aggregate
               ->  Parallel Hash Join
                     Hash Cond: (t.article_id = a.id)
                     ->  Parallel Custom Scan (ParadeDB Scan) on large_tags t
                           Table: large_tags
                           Index: large_tags_idx
                           Exec Method: NumericFastFieldExecState
                           Fast Fields: article_id, junk(count)
                           Scores: false
                           Tantivy Query: {"with_index":{"query":{"parse_with_field":{"field":"tag_name","query_string":"artificial-intelligence","lenient":null,"conjunction_mode":null}}}}
                     ->  Parallel Hash
                           ->  Parallel Custom Scan (ParadeDB Scan) on large_articles a
                                 Table: large_articles
                                 Index: large_articles_idx
                                 Exec Method: NumericFastFieldExecState
                                 Fast Fields: id, junk(count)
                                 Scores: false
                                 Tantivy Query: {"with_index":{"query":{"parse_with_field":{"field":"body","query_string":"machine learning applications","lenient":null,"conjunction_mode":null}}}}
(21 rows)

-- Test 7: Performance comparison
-- Measure execution time differences between strategies
-- Time small dataset join (SearchFilter)
\timing on
SELECT COUNT(*) FROM small_products p JOIN small_reviews r ON p.id = r.product_id 
WHERE p.description @@@ 'laptop' AND r.review_text @@@ 'performance';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["small_products"], inner relids: ["small_reviews"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation small_products (rti 1)
WARNING:  ParadeDB: Checked relations ["small_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation small_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["small_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation small_products (rti 1)
WARNING:  ParadeDB: Extracted search query for small_products: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation small_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for small_reviews: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for small_products - uses_search: true
WARNING:  ParadeDB: Inner predicate for small_reviews - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["small_products"], inner: ["small_reviews"]
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["small_reviews"], inner relids: ["small_products"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation small_reviews (rti 2)
WARNING:  ParadeDB: Checked relations ["small_reviews"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation small_products (rti 1)
WARNING:  ParadeDB: Checked relations ["small_products"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.product_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation small_reviews (rti 2)
WARNING:  ParadeDB: Extracted search query for small_reviews: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation small_products (rti 1)
WARNING:  ParadeDB: Extracted search query for small_products: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for small_reviews - uses_search: true
WARNING:  ParadeDB: Inner predicate for small_products - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["small_reviews"], inner: ["small_products"]
WARNING:  ParadeDB: Join path estimates - rows: 1, startup_cost: 50.00, total_cost: 50.01
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Join target list has 0 entries
WARNING:  ParadeDB: Set custom scan target list for join node
WARNING:  ParadeDB: Creating custom scan state for join node (scanrelid = 0)
WARNING:  ParadeDB: Extracted search predicates from private data - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Stored outer relation OIDs: ["small_products"]
WARNING:  ParadeDB: Stored inner relation OIDs: ["small_reviews"]
WARNING:  ParadeDB: Storing 0 variable mappings from planning phase
WARNING:  ParadeDB: Beginning custom scan for join node
WARNING:  ParadeDB: Initializing join execution
WARNING:  ParadeDB: Join execution initialization complete
WARNING:  ParadeDB: Executing join step in phase: NotStarted
WARNING:  ParadeDB: Starting join execution
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1
WARNING:  ParadeDB: Outer predicate 0: relation=small_products, uses_search=true
WARNING:  ParadeDB: Inner predicate 0: relation=small_reviews, uses_search=true
WARNING:  ParadeDB: Initialized mock results - outer: 2, inner: 2
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Determining join keys for relations small_products and small_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("small_products"), RTI 2 to relid Some("small_reviews")
WARNING:  ParadeDB: Found matching join condition: small_products.id = small_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation small_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation small_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[0] (ctid 1) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[0] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[0]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations small_products and small_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'small_products', inner: 'small_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation small_products with CTID 1
WARNING:  ParadeDB: small_products column 'id' = '1'
WARNING:  ParadeDB: small_products column 'name' = 'Laptop Pro'
WARNING:  ParadeDB: small_products column 'description' = 'High-performance laptop for professionals'
WARNING:  ParadeDB: small_products column 'category' = 'electronics'
WARNING:  ParadeDB: Successfully fetched 4 columns from small_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation small_reviews with CTID 1
WARNING:  ParadeDB: small_reviews column 'id' = '1'
WARNING:  ParadeDB: small_reviews column 'product_id' = '1'
WARNING:  ParadeDB: small_reviews column 'review_text' = 'Excellent laptop with great performance'
WARNING:  ParadeDB: small_reviews column 'rating' = '5'
WARNING:  ParadeDB: Successfully fetched 4 columns from small_reviews relation
WARNING:  ParadeDB: Fetched 4 columns from outer relation, 4 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [1]
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 1/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Determining join keys for relations small_products and small_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("small_products"), RTI 2 to relid Some("small_reviews")
WARNING:  ParadeDB: Found matching join condition: small_products.id = small_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation small_products with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'product_id' from relation small_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[1] (ctid 2) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[0] × inner[1] after 1 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[0], inner[1]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Fetching real heap tuple values from relations small_products and small_reviews
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Detected relations from predicates - outer: 'small_products', inner: 'small_reviews'
WARNING:  ParadeDB: Fetching all columns with names from relation small_products with CTID 1
WARNING:  ParadeDB: small_products column 'id' = '1'
WARNING:  ParadeDB: small_products column 'name' = 'Laptop Pro'
WARNING:  ParadeDB: small_products column 'description' = 'High-performance laptop for professionals'
WARNING:  ParadeDB: small_products column 'category' = 'electronics'
WARNING:  ParadeDB: Successfully fetched 4 columns from small_products relation
WARNING:  ParadeDB: Fetching all columns with names from relation small_reviews with CTID 2
WARNING:  ParadeDB: small_reviews column 'id' = '2'
WARNING:  ParadeDB: small_reviews column 'product_id' = '1'
WARNING:  ParadeDB: small_reviews column 'review_text' = 'Good build quality but expensive'
WARNING:  ParadeDB: small_reviews column 'rating' = '4'
WARNING:  ParadeDB: Successfully fetched 4 columns from small_reviews relation
WARNING:  ParadeDB: Fetched 4 columns from outer relation, 4 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next outer tuple [2/2], reset inner to 0
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Current positions - outer: 1/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Determining join keys for relations small_products and small_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("small_products"), RTI 2 to relid Some("small_reviews")
WARNING:  ParadeDB: Found matching join condition: small_products.id = small_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation small_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation small_reviews with CTID 1
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 1: outer[1] (ctid 2) × inner[0] (ctid 1) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [2]
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: small_products, inner: small_reviews
WARNING:  ParadeDB: Determining join keys for relations small_products and small_reviews using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (product_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("small_products"), RTI 2 to relid Some("small_reviews")
WARNING:  ParadeDB: Found matching join condition: small_products.id = small_reviews.product_id
WARNING:  ParadeDB: Fetching column 'id' from relation small_products with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'product_id' from relation small_reviews with CTID 2
WARNING:  ParadeDB: Fetched column 'product_id' (attno 2) = Some("1")
WARNING:  ParadeDB: Iteration 2: outer[1] (ctid 2) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: All join combinations exhausted
WARNING:  ParadeDB: Join execution finished after advancing position
WARNING:  ParadeDB: Cleaning up join execution state
WARNING:  ParadeDB: Join execution cleanup complete
 count 
-------
     2
(1 row)

Time: 8.340 ms
\timing off
-- Time medium dataset join (SortedArray)
\timing on
SELECT COUNT(*) FROM medium_docs d JOIN medium_comments c ON d.id = c.doc_id 
WHERE d.content @@@ 'technology' AND c.comment_text @@@ 'excellent';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["medium_docs"], inner relids: ["medium_comments"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation medium_docs (rti 1)
WARNING:  ParadeDB: Checked relations ["medium_docs"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation medium_comments (rti 2)
WARNING:  ParadeDB: Checked relations ["medium_comments"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.doc_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation medium_docs (rti 1)
WARNING:  ParadeDB: Extracted search query for medium_docs: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation medium_comments (rti 2)
WARNING:  ParadeDB: Extracted search query for medium_comments: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for medium_docs - uses_search: true
WARNING:  ParadeDB: Inner predicate for medium_comments - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["medium_docs"], inner: ["medium_comments"]
WARNING:  ParadeDB: Join path estimates - rows: 10000, startup_cost: 50.00, total_cost: 100.00
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["medium_comments"], inner relids: ["medium_docs"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation medium_comments (rti 2)
WARNING:  ParadeDB: Checked relations ["medium_comments"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation medium_docs (rti 1)
WARNING:  ParadeDB: Checked relations ["medium_docs"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.doc_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation medium_comments (rti 2)
WARNING:  ParadeDB: Extracted search query for medium_comments: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation medium_docs (rti 1)
WARNING:  ParadeDB: Extracted search query for medium_docs: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for medium_comments - uses_search: true
WARNING:  ParadeDB: Inner predicate for medium_docs - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["medium_comments"], inner: ["medium_docs"]
WARNING:  ParadeDB: Join path estimates - rows: 10000, startup_cost: 50.00, total_cost: 100.00
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Join target list has 0 entries
WARNING:  ParadeDB: Set custom scan target list for join node
WARNING:  ParadeDB: Creating custom scan state for join node (scanrelid = 0)
WARNING:  ParadeDB: Extracted search predicates from private data - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Stored outer relation OIDs: ["medium_docs"]
WARNING:  ParadeDB: Stored inner relation OIDs: ["medium_comments"]
WARNING:  ParadeDB: Storing 0 variable mappings from planning phase
WARNING:  ParadeDB: Beginning custom scan for join node
WARNING:  ParadeDB: Initializing join execution
WARNING:  ParadeDB: Join execution initialization complete
WARNING:  ParadeDB: Executing join step in phase: NotStarted
WARNING:  ParadeDB: Starting join execution
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1
WARNING:  ParadeDB: Outer predicate 0: relation=medium_docs, uses_search=true
WARNING:  ParadeDB: Inner predicate 0: relation=medium_comments, uses_search=true
WARNING:  ParadeDB: Initialized mock results - outer: 2, inner: 2
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: medium_docs, inner: medium_comments
WARNING:  ParadeDB: Determining join keys for relations medium_docs and medium_comments using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (doc_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("medium_docs"), RTI 2 to relid Some("medium_comments")
WARNING:  ParadeDB: Found matching join condition: medium_docs.id = medium_comments.doc_id
WARNING:  ParadeDB: Fetching column 'id' from relation medium_docs with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'doc_id' from relation medium_comments with CTID 1
WARNING:  ParadeDB: Fetched column 'doc_id' (attno 2) = Some("2")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[0] (ctid 1) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [1]
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: medium_docs, inner: medium_comments
WARNING:  ParadeDB: Determining join keys for relations medium_docs and medium_comments using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (doc_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("medium_docs"), RTI 2 to relid Some("medium_comments")
WARNING:  ParadeDB: Found matching join condition: medium_docs.id = medium_comments.doc_id
WARNING:  ParadeDB: Fetching column 'id' from relation medium_docs with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'doc_id' from relation medium_comments with CTID 2
WARNING:  ParadeDB: Fetched column 'doc_id' (attno 2) = Some("3")
WARNING:  ParadeDB: Iteration 2: outer[0] (ctid 1) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next outer tuple [2/2], reset inner to 0
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: medium_docs, inner: medium_comments
WARNING:  ParadeDB: Determining join keys for relations medium_docs and medium_comments using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (doc_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("medium_docs"), RTI 2 to relid Some("medium_comments")
WARNING:  ParadeDB: Found matching join condition: medium_docs.id = medium_comments.doc_id
WARNING:  ParadeDB: Fetching column 'id' from relation medium_docs with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'doc_id' from relation medium_comments with CTID 1
WARNING:  ParadeDB: Fetched column 'doc_id' (attno 2) = Some("2")
WARNING:  ParadeDB: Iteration 3: outer[1] (ctid 2) × inner[0] (ctid 1) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[1] × inner[0] after 3 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[1], inner[0]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: medium_docs, inner: medium_comments
WARNING:  ParadeDB: Fetching real heap tuple values from relations medium_docs and medium_comments
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: medium_docs, inner: medium_comments
WARNING:  ParadeDB: Detected relations from predicates - outer: 'medium_docs', inner: 'medium_comments'
WARNING:  ParadeDB: Fetching all columns with names from relation medium_docs with CTID 2
WARNING:  ParadeDB: medium_docs column 'id' = '2'
WARNING:  ParadeDB: medium_docs column 'title' = 'Document 2'
WARNING:  ParadeDB: medium_docs column 'content' = 'Content about business and finance with detailed analysis and insights'
WARNING:  ParadeDB: medium_docs column 'author' = 'Author 3'
WARNING:  ParadeDB: Successfully fetched 4 columns from medium_docs relation
WARNING:  ParadeDB: Fetching all columns with names from relation medium_comments with CTID 1
WARNING:  ParadeDB: medium_comments column 'id' = '1'
WARNING:  ParadeDB: medium_comments column 'doc_id' = '2'
WARNING:  ParadeDB: medium_comments column 'comment_text' = 'Comment about interesting perspective'
WARNING:  ParadeDB: medium_comments column 'commenter' = 'User2'
WARNING:  ParadeDB: Successfully fetched 4 columns from medium_comments relation
WARNING:  ParadeDB: Fetched 4 columns from outer relation, 4 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [2]
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Current positions - outer: 1/2, inner: 1/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: medium_docs, inner: medium_comments
WARNING:  ParadeDB: Determining join keys for relations medium_docs and medium_comments using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (doc_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("medium_docs"), RTI 2 to relid Some("medium_comments")
WARNING:  ParadeDB: Found matching join condition: medium_docs.id = medium_comments.doc_id
WARNING:  ParadeDB: Fetching column 'id' from relation medium_docs with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'doc_id' from relation medium_comments with CTID 2
WARNING:  ParadeDB: Fetched column 'doc_id' (attno 2) = Some("3")
WARNING:  ParadeDB: Iteration 1: outer[1] (ctid 2) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: All join combinations exhausted
WARNING:  ParadeDB: Join execution finished after advancing position
WARNING:  ParadeDB: Cleaning up join execution state
WARNING:  ParadeDB: Join execution cleanup complete
 count 
-------
     1
(1 row)

Time: 8.186 ms
\timing off
-- Time large dataset join (BloomFilter)
\timing on
SELECT COUNT(*) FROM large_articles a JOIN large_tags t ON a.id = t.article_id 
WHERE a.body @@@ 'artificial intelligence' AND t.tag_name @@@ 'machine-learning';
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["large_articles"], inner relids: ["large_tags"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation large_articles (rti 1)
WARNING:  ParadeDB: Checked relations ["large_articles"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation large_tags (rti 2)
WARNING:  ParadeDB: Checked relations ["large_tags"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.article_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation large_articles (rti 1)
WARNING:  ParadeDB: Extracted search query for large_articles: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation large_tags (rti 2)
WARNING:  ParadeDB: Extracted search query for large_tags: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for large_articles - uses_search: true
WARNING:  ParadeDB: Inner predicate for large_tags - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["large_articles"], inner: ["large_tags"]
WARNING:  ParadeDB: Join path estimates - rows: 75224, startup_cost: 50.00, total_cost: 426.12
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["large_tags"], inner relids: ["large_articles"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation large_tags (rti 2)
WARNING:  ParadeDB: Checked relations ["large_tags"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation large_articles (rti 1)
WARNING:  ParadeDB: Checked relations ["large_articles"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.article_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation large_tags (rti 2)
WARNING:  ParadeDB: Extracted search query for large_tags: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation large_articles (rti 1)
WARNING:  ParadeDB: Extracted search query for large_articles: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for large_tags - uses_search: true
WARNING:  ParadeDB: Inner predicate for large_articles - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["large_tags"], inner: ["large_articles"]
WARNING:  ParadeDB: Join path estimates - rows: 75224, startup_cost: 50.00, total_cost: 426.12
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Join target list has 0 entries
WARNING:  ParadeDB: Set custom scan target list for join node
WARNING:  ParadeDB: Creating custom scan state for join node (scanrelid = 0)
WARNING:  ParadeDB: Extracted search predicates from private data - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Stored outer relation OIDs: ["large_articles"]
WARNING:  ParadeDB: Stored inner relation OIDs: ["large_tags"]
WARNING:  ParadeDB: Storing 0 variable mappings from planning phase
WARNING:  ParadeDB: Beginning custom scan for join node
WARNING:  ParadeDB: Initializing join execution
WARNING:  ParadeDB: Join execution initialization complete
WARNING:  ParadeDB: Executing join step in phase: NotStarted
WARNING:  ParadeDB: Starting join execution
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1
WARNING:  ParadeDB: Outer predicate 0: relation=large_articles, uses_search=true
WARNING:  ParadeDB: Inner predicate 0: relation=large_tags, uses_search=true
WARNING:  ParadeDB: Initialized mock results - outer: 2, inner: 2
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: large_articles, inner: large_tags
WARNING:  ParadeDB: Determining join keys for relations large_articles and large_tags using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (article_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("large_articles"), RTI 2 to relid Some("large_tags")
WARNING:  ParadeDB: Found matching join condition: large_articles.id = large_tags.article_id
WARNING:  ParadeDB: Fetching column 'id' from relation large_articles with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'article_id' from relation large_tags with CTID 1
WARNING:  ParadeDB: Fetched column 'article_id' (attno 2) = Some("2")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[0] (ctid 1) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [1]
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: large_articles, inner: large_tags
WARNING:  ParadeDB: Determining join keys for relations large_articles and large_tags using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (article_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("large_articles"), RTI 2 to relid Some("large_tags")
WARNING:  ParadeDB: Found matching join condition: large_articles.id = large_tags.article_id
WARNING:  ParadeDB: Fetching column 'id' from relation large_articles with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'article_id' from relation large_tags with CTID 2
WARNING:  ParadeDB: Fetched column 'article_id' (attno 2) = Some("3")
WARNING:  ParadeDB: Iteration 2: outer[0] (ctid 1) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next outer tuple [2/2], reset inner to 0
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: large_articles, inner: large_tags
WARNING:  ParadeDB: Determining join keys for relations large_articles and large_tags using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (article_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("large_articles"), RTI 2 to relid Some("large_tags")
WARNING:  ParadeDB: Found matching join condition: large_articles.id = large_tags.article_id
WARNING:  ParadeDB: Fetching column 'id' from relation large_articles with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'article_id' from relation large_tags with CTID 1
WARNING:  ParadeDB: Fetched column 'article_id' (attno 2) = Some("2")
WARNING:  ParadeDB: Iteration 3: outer[1] (ctid 2) × inner[0] (ctid 1) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[1] × inner[0] after 3 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[1], inner[0]
WARNING:  ParadeDB: Creating result tuple with 0 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: large_articles, inner: large_tags
WARNING:  ParadeDB: Fetching real heap tuple values from relations large_articles and large_tags
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: large_articles, inner: large_tags
WARNING:  ParadeDB: Detected relations from predicates - outer: 'large_articles', inner: 'large_tags'
WARNING:  ParadeDB: Fetching all columns with names from relation large_articles with CTID 2
WARNING:  ParadeDB: large_articles column 'id' = '2'
WARNING:  ParadeDB: large_articles column 'headline' = 'Article 2: Business Market Analysis'
WARNING:  ParadeDB: large_articles column 'body' = 'Detailed article content about global economic trends and market dynamics with comprehensive analysis and expert opinions'
WARNING:  ParadeDB: large_articles column 'category' = 'business'
WARNING:  ParadeDB: Successfully fetched 4 columns from large_articles relation
WARNING:  ParadeDB: Fetching all columns with names from relation large_tags with CTID 1
WARNING:  ParadeDB: large_tags column 'id' = '1'
WARNING:  ParadeDB: large_tags column 'article_id' = '2'
WARNING:  ParadeDB: large_tags column 'tag_name' = 'machine-learning'
WARNING:  ParadeDB: large_tags column 'tag_category' = 'secondary'
WARNING:  ParadeDB: Successfully fetched 4 columns from large_tags relation
WARNING:  ParadeDB: Fetched 4 columns from outer relation, 4 from inner relation
WARNING:  ParadeDB: Mapped 0 out of 0 column values: []
WARNING:  ParadeDB: Created join result tuple with real heap data: []
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [2]
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Current positions - outer: 1/2, inner: 1/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: large_articles, inner: large_tags
WARNING:  ParadeDB: Determining join keys for relations large_articles and large_tags using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (article_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("large_articles"), RTI 2 to relid Some("large_tags")
WARNING:  ParadeDB: Found matching join condition: large_articles.id = large_tags.article_id
WARNING:  ParadeDB: Fetching column 'id' from relation large_articles with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'article_id' from relation large_tags with CTID 2
WARNING:  ParadeDB: Fetched column 'article_id' (attno 2) = Some("3")
WARNING:  ParadeDB: Iteration 1: outer[1] (ctid 2) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: All join combinations exhausted
WARNING:  ParadeDB: Join execution finished after advancing position
WARNING:  ParadeDB: Cleaning up join execution state
WARNING:  ParadeDB: Join execution cleanup complete
 count 
-------
     1
(1 row)

Time: 9.255 ms
\timing off
-- Test 8: Filter pushdown validation
-- Verify that filters are actually being pushed down to Tantivy
-- Test with multiple filter keys
SELECT a.headline, t.tag_name
FROM large_articles a
JOIN large_tags t ON a.id = t.article_id
WHERE a.body @@@ 'technology innovation' AND t.tag_name @@@ 'artificial-intelligence OR machine-learning'
LIMIT 10;
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["large_articles"], inner relids: ["large_tags"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation large_articles (rti 1)
WARNING:  ParadeDB: Checked relations ["large_articles"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation large_tags (rti 2)
WARNING:  ParadeDB: Checked relations ["large_tags"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.article_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation large_articles (rti 1)
WARNING:  ParadeDB: Extracted search query for large_articles: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation large_tags (rti 2)
WARNING:  ParadeDB: Extracted search query for large_tags: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for large_articles - uses_search: true
WARNING:  ParadeDB: Inner predicate for large_tags - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["large_articles"], inner: ["large_tags"]
WARNING:  ParadeDB: Join path estimates - rows: 446705, startup_cost: 50.00, total_cost: 2283.53
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["large_tags"], inner relids: ["large_articles"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation large_tags (rti 2)
WARNING:  ParadeDB: Checked relations ["large_tags"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation large_articles (rti 1)
WARNING:  ParadeDB: Checked relations ["large_articles"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.article_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation large_tags (rti 2)
WARNING:  ParadeDB: Extracted search query for large_tags: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation large_articles (rti 1)
WARNING:  ParadeDB: Extracted search query for large_articles: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for large_tags - uses_search: true
WARNING:  ParadeDB: Inner predicate for large_articles - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["large_tags"], inner: ["large_articles"]
WARNING:  ParadeDB: Join path estimates - rows: 446705, startup_cost: 50.00, total_cost: 2283.53
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Join target list has 2 entries
WARNING:  ParadeDB: Mapped join variable varno=1, varattno=2 to 'join_attr_1'
WARNING:  ParadeDB: Mapped join variable varno=2, varattno=3 to 'join_attr_2'
WARNING:  ParadeDB: Set custom scan target list for join node
WARNING:  ParadeDB: Creating custom scan state for join node (scanrelid = 0)
WARNING:  ParadeDB: Extracted search predicates from private data - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Stored outer relation OIDs: ["large_articles"]
WARNING:  ParadeDB: Stored inner relation OIDs: ["large_tags"]
WARNING:  ParadeDB: Storing 2 variable mappings from planning phase
WARNING:  ParadeDB: Planning-time mapping: varno=1, attno=2 -> 'join_attr_1'
WARNING:  ParadeDB: Planning-time mapping: varno=2, attno=3 -> 'join_attr_2'
WARNING:  ParadeDB: Beginning custom scan for join node
WARNING:  ParadeDB: Initializing join execution
WARNING:  ParadeDB: Join execution initialization complete
WARNING:  ParadeDB: Executing join step in phase: NotStarted
WARNING:  ParadeDB: Starting join execution
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1
WARNING:  ParadeDB: Outer predicate 0: relation=large_articles, uses_search=true
WARNING:  ParadeDB: Inner predicate 0: relation=large_tags, uses_search=true
WARNING:  ParadeDB: Initialized mock results - outer: 2, inner: 2
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: large_articles, inner: large_tags
WARNING:  ParadeDB: Determining join keys for relations large_articles and large_tags using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (article_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("large_articles"), RTI 2 to relid Some("large_tags")
WARNING:  ParadeDB: Found matching join condition: large_articles.id = large_tags.article_id
WARNING:  ParadeDB: Fetching column 'id' from relation large_articles with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'article_id' from relation large_tags with CTID 1
WARNING:  ParadeDB: Fetched column 'article_id' (attno 2) = Some("2")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[0] (ctid 1) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [1]
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: large_articles, inner: large_tags
WARNING:  ParadeDB: Determining join keys for relations large_articles and large_tags using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (article_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("large_articles"), RTI 2 to relid Some("large_tags")
WARNING:  ParadeDB: Found matching join condition: large_articles.id = large_tags.article_id
WARNING:  ParadeDB: Fetching column 'id' from relation large_articles with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'article_id' from relation large_tags with CTID 2
WARNING:  ParadeDB: Fetched column 'article_id' (attno 2) = Some("3")
WARNING:  ParadeDB: Iteration 2: outer[0] (ctid 1) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next outer tuple [2/2], reset inner to 0
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: large_articles, inner: large_tags
WARNING:  ParadeDB: Determining join keys for relations large_articles and large_tags using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (article_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("large_articles"), RTI 2 to relid Some("large_tags")
WARNING:  ParadeDB: Found matching join condition: large_articles.id = large_tags.article_id
WARNING:  ParadeDB: Fetching column 'id' from relation large_articles with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'article_id' from relation large_tags with CTID 1
WARNING:  ParadeDB: Fetched column 'article_id' (attno 2) = Some("2")
WARNING:  ParadeDB: Iteration 3: outer[1] (ctid 2) × inner[0] (ctid 1) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[1] × inner[0] after 3 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[1], inner[0]
WARNING:  ParadeDB: Creating result tuple with 2 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: large_articles, inner: large_tags
WARNING:  ParadeDB: Fetching real heap tuple values from relations large_articles and large_tags
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: large_articles, inner: large_tags
WARNING:  ParadeDB: Detected relations from predicates - outer: 'large_articles', inner: 'large_tags'
WARNING:  ParadeDB: Fetching all columns with names from relation large_articles with CTID 2
WARNING:  ParadeDB: large_articles column 'id' = '2'
WARNING:  ParadeDB: large_articles column 'headline' = 'Article 2: Business Market Analysis'
WARNING:  ParadeDB: large_articles column 'body' = 'Detailed article content about global economic trends and market dynamics with comprehensive analysis and expert opinions'
WARNING:  ParadeDB: large_articles column 'category' = 'business'
WARNING:  ParadeDB: Successfully fetched 4 columns from large_articles relation
WARNING:  ParadeDB: Fetching all columns with names from relation large_tags with CTID 1
WARNING:  ParadeDB: large_tags column 'id' = '1'
WARNING:  ParadeDB: large_tags column 'article_id' = '2'
WARNING:  ParadeDB: large_tags column 'tag_name' = 'machine-learning'
WARNING:  ParadeDB: large_tags column 'tag_category' = 'secondary'
WARNING:  ParadeDB: Successfully fetched 4 columns from large_tags relation
WARNING:  ParadeDB: Fetched 4 columns from outer relation, 4 from inner relation
WARNING:  ParadeDB: Analyzing 2 target entries using execution-time varno/attno mapping: [(1, Some((Ok("{VAR :varno -3 :varattno 1 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1}"),))), (2, Some((Ok("{VAR :varno -3 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 3 :location -1}"),)))]
WARNING:  ParadeDB: Mapped varno 4294967293 to outer relation large_articles
WARNING:  ParadeDB: Built execution-time varno mapping with 1 entries: [(4294967293, "large_articles")]
WARNING:  ParadeDB: Analyzing target entry 1 (resno: 1)
WARNING:  ParadeDB: Found Var in target entry 1 - varno: -3, attno: 1, varnosyn: 1, varattnosyn: 2
WARNING:  ParadeDB: Variable references INDEX/intermediate result, using varnosyn: 1, varattnosyn: 2
WARNING:  ParadeDB: Mapping original variable varnosyn: 1, varattnosyn: 2 to relation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: large_articles, inner: large_tags
WARNING:  ParadeDB: Resolved varnosyn 1 to relation large_articles
WARNING:  ParadeDB: varnosyn 1 resolved to relation large_articles, attno 2
WARNING:  ParadeDB: Relation large_articles attno 2 -> column name 'headline'
WARNING:  ParadeDB: Target entry 1 mapped to: RelationColumn(large_articles,headline)
WARNING:  ParadeDB: Analyzing target entry 2 (resno: 2)
WARNING:  ParadeDB: Found Var in target entry 2 - varno: -3, attno: 2, varnosyn: 2, varattnosyn: 3
WARNING:  ParadeDB: Variable references INDEX/intermediate result, using varnosyn: 2, varattnosyn: 3
WARNING:  ParadeDB: Mapping original variable varnosyn: 2, varattnosyn: 3 to relation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: large_articles, inner: large_tags
WARNING:  ParadeDB: Resolved varnosyn 2 to relation large_tags
WARNING:  ParadeDB: varnosyn 2 resolved to relation large_tags, attno 3
WARNING:  ParadeDB: Relation large_tags attno 3 -> column name 'tag_name'
WARNING:  ParadeDB: Target entry 2 mapped to: RelationColumn(large_tags,tag_name)
WARNING:  ParadeDB: Mapped 2 out of 2 column values: [Some("Article 2: Business Market Analysis"), Some("machine-learning")]
WARNING:  ParadeDB: Created join result tuple with real heap data: [Some("Article 2: Business Market Analysis"), Some("machine-learning")]
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [2]
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Current positions - outer: 1/2, inner: 1/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: large_articles, inner: large_tags
WARNING:  ParadeDB: Determining join keys for relations large_articles and large_tags using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (article_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("large_articles"), RTI 2 to relid Some("large_tags")
WARNING:  ParadeDB: Found matching join condition: large_articles.id = large_tags.article_id
WARNING:  ParadeDB: Fetching column 'id' from relation large_articles with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'article_id' from relation large_tags with CTID 2
WARNING:  ParadeDB: Fetched column 'article_id' (attno 2) = Some("3")
WARNING:  ParadeDB: Iteration 1: outer[1] (ctid 2) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: All join combinations exhausted
WARNING:  ParadeDB: Join execution finished after advancing position
WARNING:  ParadeDB: Cleaning up join execution state
WARNING:  ParadeDB: Join execution cleanup complete
              headline               |     tag_name     
-------------------------------------+------------------
 Article 2: Business Market Analysis | machine-learning
(1 row)

-- Test with complex search predicates
SELECT d.title, c.comment_text
FROM medium_docs d
JOIN medium_comments c ON d.id = c.doc_id
WHERE d.content @@@ 'technology AND innovation' AND c.comment_text @@@ 'excellent OR interesting'
LIMIT 5;
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["medium_docs"], inner relids: ["medium_comments"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation medium_docs (rti 1)
WARNING:  ParadeDB: Checked relations ["medium_docs"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation medium_comments (rti 2)
WARNING:  ParadeDB: Checked relations ["medium_comments"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.doc_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation medium_docs (rti 1)
WARNING:  ParadeDB: Extracted search query for medium_docs: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation medium_comments (rti 2)
WARNING:  ParadeDB: Extracted search query for medium_comments: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for medium_docs - uses_search: true
WARNING:  ParadeDB: Inner predicate for medium_comments - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["medium_docs"], inner: ["medium_comments"]
WARNING:  ParadeDB: Join path estimates - rows: 20000, startup_cost: 50.00, total_cost: 150.00
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Join pathlist callback called - jointype: 0, outer relids: ["medium_comments"], inner relids: ["medium_docs"]
WARNING:  ParadeDB: Both sides are base relations - proceeding with standard join
WARNING:  ParadeDB: Found BM25 index for relation medium_comments (rti 2)
WARNING:  ParadeDB: Checked relations ["medium_comments"] for BM25 indexes, found: true
WARNING:  ParadeDB: Found BM25 index for relation medium_docs (rti 1)
WARNING:  ParadeDB: Checked relations ["medium_docs"] for BM25 indexes, found: true
WARNING:  ParadeDB: Join feasibility check - outer has BM25: true, inner has BM25: true
WARNING:  ParadeDB: Analyzing join search predicates
WARNING:  ParadeDB: Found 1 join restriction clauses
WARNING:  ParadeDB: Analyzing join clause of type T_OpExpr
WARNING:  ParadeDB: Extracted join condition: 1.id = 2.doc_id
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation medium_comments (rti 2)
WARNING:  ParadeDB: Extracted search query for medium_comments: uses_search_operator=true
WARNING:  ParadeDB: Analyzing 1 base restriction clauses for relation
WARNING:  ParadeDB: Extracting predicates for relation medium_docs (rti 1)
WARNING:  ParadeDB: Extracted search query for medium_docs: uses_search_operator=true
WARNING:  ParadeDB: Extracted 1 outer predicates, 1 inner predicates, 1 join conditions
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Join is feasible based on composite analysis: BothBaseRelations
WARNING:  ParadeDB: Outer predicate for medium_comments - uses_search: true
WARNING:  ParadeDB: Inner predicate for medium_docs - uses_search: true
WARNING:  ParadeDB: Bilateral search detected - proceeding with custom join path
WARNING:  ParadeDB: Storing join relation OIDs - outer: ["medium_comments"], inner: ["medium_docs"]
WARNING:  ParadeDB: Join path estimates - rows: 20000, startup_cost: 50.00, total_cost: 150.00
WARNING:  ParadeDB: Created custom join path, adding to joinrel
WARNING:  ParadeDB: Planning custom join path with scanrelid = 0
WARNING:  ParadeDB: Join target list has 2 entries
WARNING:  ParadeDB: Mapped join variable varno=1, varattno=2 to 'join_attr_1'
WARNING:  ParadeDB: Mapped join variable varno=2, varattno=3 to 'join_attr_2'
WARNING:  ParadeDB: Set custom scan target list for join node
WARNING:  ParadeDB: Creating custom scan state for join node (scanrelid = 0)
WARNING:  ParadeDB: Extracted search predicates from private data - outer: 1, inner: 1, bilateral: true
WARNING:  ParadeDB: Stored outer relation OIDs: ["medium_docs"]
WARNING:  ParadeDB: Stored inner relation OIDs: ["medium_comments"]
WARNING:  ParadeDB: Storing 2 variable mappings from planning phase
WARNING:  ParadeDB: Planning-time mapping: varno=1, attno=2 -> 'join_attr_1'
WARNING:  ParadeDB: Planning-time mapping: varno=2, attno=3 -> 'join_attr_2'
WARNING:  ParadeDB: Beginning custom scan for join node
WARNING:  ParadeDB: Initializing join execution
WARNING:  ParadeDB: Join execution initialization complete
WARNING:  ParadeDB: Executing join step in phase: NotStarted
WARNING:  ParadeDB: Starting join execution
WARNING:  ParadeDB: Found search predicates - outer: 1, inner: 1
WARNING:  ParadeDB: Outer predicate 0: relation=medium_docs, uses_search=true
WARNING:  ParadeDB: Inner predicate 0: relation=medium_comments, uses_search=true
WARNING:  ParadeDB: Initialized mock results - outer: 2, inner: 2
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Current positions - outer: 0/2, inner: 0/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: medium_docs, inner: medium_comments
WARNING:  ParadeDB: Determining join keys for relations medium_docs and medium_comments using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (doc_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("medium_docs"), RTI 2 to relid Some("medium_comments")
WARNING:  ParadeDB: Found matching join condition: medium_docs.id = medium_comments.doc_id
WARNING:  ParadeDB: Fetching column 'id' from relation medium_docs with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'doc_id' from relation medium_comments with CTID 1
WARNING:  ParadeDB: Fetched column 'doc_id' (attno 2) = Some("2")
WARNING:  ParadeDB: Iteration 1: outer[0] (ctid 1) × inner[0] (ctid 1) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [1]
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: medium_docs, inner: medium_comments
WARNING:  ParadeDB: Determining join keys for relations medium_docs and medium_comments using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (doc_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("medium_docs"), RTI 2 to relid Some("medium_comments")
WARNING:  ParadeDB: Found matching join condition: medium_docs.id = medium_comments.doc_id
WARNING:  ParadeDB: Fetching column 'id' from relation medium_docs with CTID 1
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("1")
WARNING:  ParadeDB: Fetching column 'doc_id' from relation medium_comments with CTID 2
WARNING:  ParadeDB: Fetched column 'doc_id' (attno 2) = Some("3")
WARNING:  ParadeDB: Iteration 2: outer[0] (ctid 1) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: Advanced to next outer tuple [2/2], reset inner to 0
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: medium_docs, inner: medium_comments
WARNING:  ParadeDB: Determining join keys for relations medium_docs and medium_comments using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (doc_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("medium_docs"), RTI 2 to relid Some("medium_comments")
WARNING:  ParadeDB: Found matching join condition: medium_docs.id = medium_comments.doc_id
WARNING:  ParadeDB: Fetching column 'id' from relation medium_docs with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'doc_id' from relation medium_comments with CTID 1
WARNING:  ParadeDB: Fetched column 'doc_id' (attno 2) = Some("2")
WARNING:  ParadeDB: Iteration 3: outer[1] (ctid 2) × inner[0] (ctid 1) = true
WARNING:  ParadeDB: Join condition satisfied - creating result tuple for outer[1] × inner[0] after 3 evaluations
WARNING:  ParadeDB: Creating join result tuple for outer[1], inner[0]
WARNING:  ParadeDB: Creating result tuple with 2 attributes
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: medium_docs, inner: medium_comments
WARNING:  ParadeDB: Fetching real heap tuple values from relations medium_docs and medium_comments
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: medium_docs, inner: medium_comments
WARNING:  ParadeDB: Detected relations from predicates - outer: 'medium_docs', inner: 'medium_comments'
WARNING:  ParadeDB: Fetching all columns with names from relation medium_docs with CTID 2
WARNING:  ParadeDB: medium_docs column 'id' = '2'
WARNING:  ParadeDB: medium_docs column 'title' = 'Document 2'
WARNING:  ParadeDB: medium_docs column 'content' = 'Content about business and finance with detailed analysis and insights'
WARNING:  ParadeDB: medium_docs column 'author' = 'Author 3'
WARNING:  ParadeDB: Successfully fetched 4 columns from medium_docs relation
WARNING:  ParadeDB: Fetching all columns with names from relation medium_comments with CTID 1
WARNING:  ParadeDB: medium_comments column 'id' = '1'
WARNING:  ParadeDB: medium_comments column 'doc_id' = '2'
WARNING:  ParadeDB: medium_comments column 'comment_text' = 'Comment about interesting perspective'
WARNING:  ParadeDB: medium_comments column 'commenter' = 'User2'
WARNING:  ParadeDB: Successfully fetched 4 columns from medium_comments relation
WARNING:  ParadeDB: Fetched 4 columns from outer relation, 4 from inner relation
WARNING:  ParadeDB: Analyzing 2 target entries using execution-time varno/attno mapping: [(1, Some((Ok("{VAR :varno -3 :varattno 1 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 2 :location -1}"),))), (2, Some((Ok("{VAR :varno -3 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 2 :varattnosyn 3 :location -1}"),)))]
WARNING:  ParadeDB: Mapped varno 4294967293 to outer relation medium_docs
WARNING:  ParadeDB: Built execution-time varno mapping with 1 entries: [(4294967293, "medium_docs")]
WARNING:  ParadeDB: Analyzing target entry 1 (resno: 1)
WARNING:  ParadeDB: Found Var in target entry 1 - varno: -3, attno: 1, varnosyn: 1, varattnosyn: 2
WARNING:  ParadeDB: Variable references INDEX/intermediate result, using varnosyn: 1, varattnosyn: 2
WARNING:  ParadeDB: Mapping original variable varnosyn: 1, varattnosyn: 2 to relation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: medium_docs, inner: medium_comments
WARNING:  ParadeDB: Resolved varnosyn 1 to relation medium_docs
WARNING:  ParadeDB: varnosyn 1 resolved to relation medium_docs, attno 2
WARNING:  ParadeDB: Relation medium_docs attno 2 -> column name 'title'
WARNING:  ParadeDB: Target entry 1 mapped to: RelationColumn(medium_docs,title)
WARNING:  ParadeDB: Analyzing target entry 2 (resno: 2)
WARNING:  ParadeDB: Found Var in target entry 2 - varno: -3, attno: 2, varnosyn: 2, varattnosyn: 3
WARNING:  ParadeDB: Variable references INDEX/intermediate result, using varnosyn: 2, varattnosyn: 3
WARNING:  ParadeDB: Mapping original variable varnosyn: 2, varattnosyn: 3 to relation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: medium_docs, inner: medium_comments
WARNING:  ParadeDB: Resolved varnosyn 2 to relation medium_comments
WARNING:  ParadeDB: varnosyn 2 resolved to relation medium_comments, attno 3
WARNING:  ParadeDB: Relation medium_comments attno 3 -> column name 'comment_text'
WARNING:  ParadeDB: Target entry 2 mapped to: RelationColumn(medium_comments,comment_text)
WARNING:  ParadeDB: Mapped 2 out of 2 column values: [Some("Document 2"), Some("Comment about interesting perspective")]
WARNING:  ParadeDB: Created join result tuple with real heap data: [Some("Document 2"), Some("Comment about interesting perspective")]
WARNING:  ParadeDB: Advanced to next inner tuple [2/2] for outer [2]
WARNING:  ParadeDB: Executing join step in phase: JoinMatching
WARNING:  ParadeDB: In join matching phase
WARNING:  ParadeDB: Current positions - outer: 1/2, inner: 1/2
WARNING:  ParadeDB: Matching and returning next tuple with join condition evaluation
WARNING:  ParadeDB: Using stored relation OIDs from join state - outer: medium_docs, inner: medium_comments
WARNING:  ParadeDB: Determining join keys for relations medium_docs and medium_comments using extracted join conditions
WARNING:  ParadeDB: Found 1 extracted join conditions from query plan
WARNING:  ParadeDB: Checking join condition: RTI 1 (id) = RTI 2 (doc_id)
WARNING:  ParadeDB: Mapped RTI 1 to relid Some("medium_docs"), RTI 2 to relid Some("medium_comments")
WARNING:  ParadeDB: Found matching join condition: medium_docs.id = medium_comments.doc_id
WARNING:  ParadeDB: Fetching column 'id' from relation medium_docs with CTID 2
WARNING:  ParadeDB: Fetched column 'id' (attno 1) = Some("2")
WARNING:  ParadeDB: Fetching column 'doc_id' from relation medium_comments with CTID 2
WARNING:  ParadeDB: Fetched column 'doc_id' (attno 2) = Some("3")
WARNING:  ParadeDB: Iteration 1: outer[1] (ctid 2) × inner[1] (ctid 2) = false
WARNING:  ParadeDB: Join condition not satisfied - advancing to next combination
WARNING:  ParadeDB: All join combinations exhausted
WARNING:  ParadeDB: Join execution finished after advancing position
WARNING:  ParadeDB: Cleaning up join execution state
WARNING:  ParadeDB: Join execution cleanup complete
   title    |             comment_text              
------------+---------------------------------------
 Document 2 | Comment about interesting perspective
(1 row)

-- Cleanup
DROP TABLE small_products CASCADE;
DROP TABLE small_reviews CASCADE;
DROP TABLE medium_docs CASCADE;
DROP TABLE medium_comments CASCADE;
DROP TABLE large_articles CASCADE;
DROP TABLE large_tags CASCADE;
RESET paradedb.enable_custom_join;
RESET paradedb.enable_semi_join_optimization; 
