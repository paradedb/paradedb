EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description @@@ 'shoes'::fuzzy(2);
                                                                                                           QUERY PLAN                                                                                                           
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"parse_with_field":{"field":"description","query_string":"shoes","lenient":null,"conjunction_mode":null,"fuzzy_data":{"distance":2,"prefix":false,"transposition_cost_one":false}}}}}
(6 rows)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description &&& 'shoes'::fuzzy(2);
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"match":{"field":"description","value":"shoes","tokenizer":null,"distance":2,"transposition_cost_one":false,"prefix":false,"conjunction_mode":true}}}}
(6 rows)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description ||| 'shoes'::fuzzy(2);
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"match":{"field":"description","value":"shoes","tokenizer":null,"distance":2,"transposition_cost_one":false,"prefix":false,"conjunction_mode":false}}}}
(6 rows)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description === 'shoes'::fuzzy(2);
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"fuzzy_term":{"field":"description","value":"shoes","distance":2,"transposition_cost_one":false,"prefix":false}}}}
(6 rows)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description @@@ pdb.term('shoes')::fuzzy(2);
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on mock_items
   Table: mock_items
   Index: idxregress_mock_items
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"fuzzy_term":{"field":"description","value":"shoes","distance":2,"transposition_cost_one":false,"prefix":false}}}}
(6 rows)

SELECT * FROM regress.mock_items WHERE description === 'sho'::fuzzy(0) ORDER BY id; -- no results
 id | description | rating | category | in_stock | metadata | created_at | last_updated_date | latest_available_time | weight_range | sku 
----+-------------+--------+----------+----------+----------+------------+-------------------+-----------------------+--------------+-----
(0 rows)

SELECT * FROM regress.mock_items WHERE description === 'sho'::fuzzy(1) ORDER BY id; -- no results
 id | description | rating | category | in_stock | metadata | created_at | last_updated_date | latest_available_time | weight_range | sku 
----+-------------+--------+----------+----------+----------+------------+-------------------+-----------------------+--------------+-----
(0 rows)

SELECT * FROM regress.mock_items WHERE description === 'sho'::fuzzy(2) ORDER BY id; -- 3 rows
 id |     description     | rating | category | in_stock |                    metadata                     |        created_at        | last_updated_date | latest_available_time | weight_range |                 sku                  
----+---------------------+--------+----------+----------+-------------------------------------------------+--------------------------+-------------------+-----------------------+--------------+--------------------------------------
  3 | Sleek running shoes |      5 | Footwear | t        | {"color": "Blue", "location": "China"}          | Fri Apr 28 10:55:43 2023 | 04-29-2023        | 10:55:43              | [2,10)       | da2fea21-0003-411b-9e8c-2cb64e471293
  4 | White jogging shoes |      3 | Footwear | f        | {"color": "White", "location": "United States"} | Thu Apr 20 16:38:02 2023 | 04-22-2023        | 16:38:02              | (,11)        | da2fea21-0004-411b-9e8c-2cb64e471293
  5 | Generic shoes       |      4 | Footwear | t        | {"color": "Brown", "location": "Canada"}        | Tue May 02 08:45:11 2023 | 05-03-2023        | 08:45:11              | [3,)         | da2fea21-0005-411b-9e8c-2cb64e471293
(3 rows)

--
-- (currently) unsupported for phrase and proximity
--
EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description ### 'running shoes'::fuzzy(2);
ERROR:  operator is not unique: text ### fuzzy at character 97
EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF) SELECT * FROM regress.mock_items WHERE description @@@ ('running' ##3## 'shoes')::fuzzy(2);
ERROR:  cannot cast type pdb.proximityclause to fuzzy at character 126
--
-- validate json representation
--
SELECT 'beer'::fuzzy(2);
                                                        fuzzy                                                        
---------------------------------------------------------------------------------------------------------------------
 {"unclassified_string":{"string":"beer","fuzzy_data":{"distance":2,"prefix":false,"transposition_cost_one":false}}}
(1 row)

SELECT 'beer'::fuzzy(2, t, t);
                                                       fuzzy                                                       
-------------------------------------------------------------------------------------------------------------------
 {"unclassified_string":{"string":"beer","fuzzy_data":{"distance":2,"prefix":true,"transposition_cost_one":true}}}
(1 row)

SELECT 'beer'::fuzzy(2, t, f);
                                                       fuzzy                                                        
--------------------------------------------------------------------------------------------------------------------
 {"unclassified_string":{"string":"beer","fuzzy_data":{"distance":2,"prefix":true,"transposition_cost_one":false}}}
(1 row)

SELECT 'beer'::fuzzy(2, f, f);
                                                        fuzzy                                                        
---------------------------------------------------------------------------------------------------------------------
 {"unclassified_string":{"string":"beer","fuzzy_data":{"distance":2,"prefix":false,"transposition_cost_one":false}}}
(1 row)

SELECT 'beer'::fuzzy(2, f, t);
                                                       fuzzy                                                        
--------------------------------------------------------------------------------------------------------------------
 {"unclassified_string":{"string":"beer","fuzzy_data":{"distance":2,"prefix":false,"transposition_cost_one":true}}}
(1 row)

SELECT 'beer'::fuzzy(2, "true", "true");
                                                       fuzzy                                                       
-------------------------------------------------------------------------------------------------------------------
 {"unclassified_string":{"string":"beer","fuzzy_data":{"distance":2,"prefix":true,"transposition_cost_one":true}}}
(1 row)

SELECT 'beer'::fuzzy(2, "false", "false");
                                                        fuzzy                                                        
---------------------------------------------------------------------------------------------------------------------
 {"unclassified_string":{"string":"beer","fuzzy_data":{"distance":2,"prefix":false,"transposition_cost_one":false}}}
(1 row)

--
-- error conditions
--
SELECT 'beer'::fuzzy(-1);
ERROR:  fuzzy value must be 0, 1, or 2 at character 16
SELECT 'beer'::fuzzy(3);
ERROR:  fuzzy value must be 0, 1, or 2 at character 16
SELECT 'beer'::fuzzy(hi_mom);
ERROR:  invalid fuzzy value: hi_mom at character 16
SELECT 'beer'::fuzzy(2, true, true);    -- thanks, Postgres!
ERROR:  type modifiers must be simple constants or identifiers at character 16
