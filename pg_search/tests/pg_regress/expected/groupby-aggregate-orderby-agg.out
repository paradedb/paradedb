-- Test ORDER BY aggregate functionality specifically
-- This test file focuses on verifying that ORDER BY with aggregate functions works correctly
-- Create extension and enable the aggregate custom scan
CREATE EXTENSION IF NOT EXISTS pg_search;
SET paradedb.enable_aggregate_custom_scan = true;
-- Create test table and index
DROP TABLE IF EXISTS test_products CASCADE;
CREATE TABLE test_products (
    id SERIAL PRIMARY KEY,
    category TEXT,
    price DECIMAL(10,2),
    rating INTEGER,
    description TEXT
);
-- Insert test data
INSERT INTO test_products (category, price, rating, description) VALUES
('Electronics', 299.99, 4, 'laptop computer wireless'),
('Electronics', 199.99, 5, 'laptop gaming wireless'),
('Electronics', 99.99, 3, 'keyboard wireless'),
('Books', 29.99, 5, 'programming book laptop'),
('Books', 39.99, 4, 'database book'),
('Clothing', 49.99, 3, 'jacket winter'),
('Clothing', 79.99, 4, 'jacket laptop case'),
('Electronics', 159.99, 4, 'keyboard mechanical');
-- Create search index
CREATE INDEX test_products_idx ON test_products 
USING bm25 (id, category, price, rating, description)
WITH (
    key_field='id',
    text_fields='{"description": {}, "category": {"fast": true}}',
    numeric_fields='{"rating": {"fast": true}, "price": {"fast": true}}'
);
-- Test 1: Named aggregate ORDER BY (should work)
EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF, VERBOSE)
SELECT category, COUNT(*) as product_count
FROM test_products 
WHERE description @@@ 'laptop OR keyboard'
GROUP BY category
ORDER BY product_count DESC;
ERROR:  could not find pathkey item to sort
SELECT category, COUNT(*) as product_count
FROM test_products 
WHERE description @@@ 'laptop OR keyboard'
GROUP BY category
ORDER BY product_count DESC;
ERROR:  could not find pathkey item to sort
-- Test 2: Direct aggregate ORDER BY (should work)
EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF, VERBOSE)
SELECT category, COUNT(*)
FROM test_products 
WHERE description @@@ 'laptop OR keyboard'
GROUP BY category
ORDER BY COUNT(*) DESC;
ERROR:  could not find pathkey item to sort
SELECT category, COUNT(*)
FROM test_products 
WHERE description @@@ 'laptop OR keyboard'
GROUP BY category
ORDER BY COUNT(*) DESC;
ERROR:  could not find pathkey item to sort
-- Test 3: SUM aggregate ORDER BY
EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF, VERBOSE)
SELECT category, SUM(price) as total_price
FROM test_products 
WHERE description @@@ 'laptop OR keyboard'
GROUP BY category
ORDER BY total_price DESC;
ERROR:  could not find pathkey item to sort
SELECT category, SUM(price) as total_price
FROM test_products 
WHERE description @@@ 'laptop OR keyboard'
GROUP BY category
ORDER BY total_price DESC;
ERROR:  could not find pathkey item to sort
-- Test 4: Multiple aggregate ORDER BY
EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF, VERBOSE)
SELECT category, COUNT(*) as cnt, AVG(price) as avg_price
FROM test_products 
WHERE description @@@ 'laptop OR keyboard'
GROUP BY category
ORDER BY cnt DESC, avg_price ASC;
ERROR:  could not find pathkey item to sort
SELECT category, COUNT(*) as cnt, AVG(price) as avg_price
FROM test_products 
WHERE description @@@ 'laptop OR keyboard'
GROUP BY category
ORDER BY cnt DESC, avg_price ASC;
ERROR:  could not find pathkey item to sort
-- Test 5: Mix of aggregate and field ORDER BY
EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF, VERBOSE)
SELECT category, COUNT(*) as cnt
FROM test_products 
WHERE description @@@ 'laptop OR keyboard'
GROUP BY category
ORDER BY cnt DESC, category ASC;
ERROR:  could not find pathkey item to sort
SELECT category, COUNT(*) as cnt, AVG(price) as avg_price
FROM test_products 
WHERE description @@@ 'laptop OR keyboard'
GROUP BY category
ORDER BY cnt DESC, avg_price ASC;
ERROR:  could not find pathkey item to sort
-- Test 6: ORDER BY with LIMIT (common use case)
EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF, VERBOSE)
SELECT category, COUNT(*) as product_count
FROM test_products 
WHERE description @@@ 'laptop OR keyboard OR jacket'
GROUP BY category
ORDER BY product_count DESC
LIMIT 2;
ERROR:  could not find pathkey item to sort
SELECT category, COUNT(*) as product_count
FROM test_products 
WHERE description @@@ 'laptop OR keyboard OR jacket'
GROUP BY category
ORDER BY product_count DESC
LIMIT 2;
ERROR:  could not find pathkey item to sort
-- Verify these work by checking the actual results
-- The results should be ordered correctly by the aggregate values
-- Cleanup
DROP TABLE IF EXISTS test_products CASCADE;
RESET paradedb.enable_aggregate_custom_scan;
