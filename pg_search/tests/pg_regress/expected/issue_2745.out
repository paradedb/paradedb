\i common/common_setup.sql
CREATE EXTENSION IF NOT EXISTS pg_search;
-- Disable parallel workers to avoid differences in plans
SET max_parallel_workers_per_gather = 0;
SET enable_indexscan to OFF;
SET paradedb.enable_mixed_fast_field_exec = true;
DROP TABLE IF EXISTS contacts_companies, contact_list;
CREATE TABLE contacts_companies (
    contact_id BIGINT PRIMARY KEY,
    company_id BIGINT,
    contact_name TEXT
);
CREATE TABLE contact_list (
    id BIGINT,
    list_id TEXT
);
INSERT INTO contacts_companies (contact_id, company_id, contact_name) VALUES
(17969, 1001, 'Alice'),
(17970, 1002, 'Bob'),
(17971, 1003, 'Carol'),
(17972, 1003, 'Joe'),
(17973, 1004, 'Dave');
INSERT INTO contact_list (id, list_id) VALUES (17970, 'ABCD123');
CREATE INDEX ON contacts_companies USING bm25 (contact_id, company_id, contact_name) WITH (key_field = 'contact_id');
SET enable_seqscan = off; SET enable_indexscan = off;
-- Github issue repro
SET paradedb.enable_custom_scan = on;
SELECT contact_name FROM contacts_companies
WHERE contact_name SIMILAR TO 'Alice'
AND NOT EXISTS (SELECT 1 FROM contact_list WHERE contact_id = contact_list.id);
 contact_name 
--------------
 Alice
(1 row)

EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF)
SELECT contact_name FROM contacts_companies
WHERE contact_name SIMILAR TO 'Alice'
AND NOT EXISTS (SELECT 1 FROM contact_list WHERE contact_id = contact_list.id);


 Hash Right Anti Join
   Hash Cond: (contact_list.id = contacts_companies.contact_id)
   ->  Seq Scan on contact_list
   ->  Hash
         ->  Custom Scan (ParadeDB Scan) on contacts_companies
               Table: contacts_companies
               Index: contacts_companies_contact_id_company_id_contact_name_idx
               Exec Method: NormalScanExecState
               Scores: false
               Tantivy Query: {"heap_filter":{"indexed_query":"all","field_filters":[{"expr_node":"{OPEXPR :opno 641 :opfuncid 1254 :opresulttype 16 :opretset false :opcollid 0 :inputcollid 100 :args ({VAR :varno 1 :varattno 3 :vartype 25 :vartypmod -1 :varcollid 100 :varnullingrels (b) :varlevelsup 0 :varnosyn 1 :varattnosyn 3 :location -1} {CONST :consttype 25 :consttypmod -1 :constcollid 100 :constlen -1 :constbyval false :constisnull false :location -1 :constvalue 15 [ 60 0 0 0 94 40 63 58 65 108 105 99 101 41 36 ]}) :location -1}","description":"OpExpr with operator OID 641"}]}}
(10 rows)

SET paradedb.enable_custom_scan = off;
SELECT contact_name FROM contacts_companies
WHERE contact_name SIMILAR TO 'Alice'
AND NOT EXISTS (SELECT 1 FROM contact_list WHERE contact_id = contact_list.id);
 contact_name 
--------------
 Alice
(1 row)

-- User-reported query repro
SET paradedb.enable_custom_scan = on;
SELECT DISTINCT contact_id
FROM contacts_companies
WHERE contact_id = ANY(ARRAY[17969,17970,17971,17973])
AND NOT EXISTS (
    SELECT 1 FROM contact_list cl WHERE contact_id = cl.id
);
 contact_id 
------------
      17969
      17971
      17973
(3 rows)

SET paradedb.enable_custom_scan = off;
SELECT DISTINCT contact_id
FROM contacts_companies
WHERE contact_id = ANY(ARRAY[17969,17970,17971,17973])
AND NOT EXISTS (
    SELECT 1 FROM contact_list cl WHERE contact_id = cl.id
);
 contact_id 
------------
      17969
      17971
      17973
(3 rows)

DROP TABLE contacts_companies, contact_list;
