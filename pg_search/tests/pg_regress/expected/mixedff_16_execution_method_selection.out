-- Test proper execution method selection for mixed fast fields
-- This test verifies that the MixedFastFieldExecState is chosen when appropriate
-- and that NormalScanExecState is not used when mixed fast fields are available
-- Disable parallel workers to avoid differences in plans
SET max_parallel_workers_per_gather = 0;
-- Create test table with various field types
DROP TABLE IF EXISTS exec_method_test;
CREATE TABLE exec_method_test (
    id SERIAL PRIMARY KEY,
    text_field1 TEXT,
    text_field2 TEXT,
    text_field3 TEXT,
    num_field1 INTEGER,
    num_field2 FLOAT,
    num_field3 NUMERIC,
    bool_field BOOLEAN,
    non_indexed_field TEXT
);
-- Insert test data
INSERT INTO exec_method_test (
    text_field1, text_field2, text_field3,
    num_field1, num_field2, num_field3,
    bool_field, non_indexed_field
)
SELECT
    'Text ' || i,
    'Sample ' || (i % 10),
    'Category ' || (i % 5),
    i,
    (i * 1.5)::float,
    (i * 2.25)::numeric,
    i % 2 = 0,
    'Non-indexed ' || i
FROM generate_series(1, 50) i;
-- Create index with mixed fast fields
DROP INDEX IF EXISTS exec_method_idx;
CREATE INDEX exec_method_idx ON exec_method_test
USING bm25 (
    id, text_field1, text_field2, text_field3,
    num_field1, num_field2, num_field3,
    bool_field
)
WITH (
    key_field = 'id',
    text_fields = '{"text_field1": {"tokenizer": {"type": "default"}, "fast": true}, "text_field2": {"tokenizer": {"type": "default"}, "fast": true}, "text_field3": {"tokenizer": {"type": "default"}, "fast": true}}',
    numeric_fields = '{"num_field1": {"fast": true}, "num_field2": {"fast": true}, "num_field3": {"fast": true}}',
    boolean_fields = '{"bool_field": {"fast": true}}'
);
-- Test 1: Should use MixedFastFieldExecState with multiple string fields
EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF)
SELECT text_field1, text_field2
FROM exec_method_test
WHERE text_field1 @@@ 'Text';
                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on exec_method_test
   Table: exec_method_test
   Index: exec_method_idx
   Segment Count: 1
   Exec Method: MixedFastFieldExecState
   Fast Fields: text_field1, text_field2
   String Fast Fields: text_field1, text_field2
   Scores: false
   Tantivy Query: {"with_index":{"query":{"parse_with_field":{"field":"text_field1","query_string":"Text","lenient":null,"conjunction_mode":null}}}}
(9 rows)

-- Test 2: Should use MixedFastFieldExecState with mixed string and numeric fields
EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF)
SELECT text_field1, num_field1, num_field2
FROM exec_method_test
WHERE text_field1 @@@ 'Text' AND num_field1 > 10;
                                                                                                                                    QUERY PLAN                                                                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on exec_method_test
   Table: exec_method_test
   Index: exec_method_idx
   Segment Count: 1
   Exec Method: MixedFastFieldExecState
   Fast Fields: text_field1, num_field1, num_field2
   String Fast Fields: text_field1
   Numeric Fast Fields: num_field1, num_field2
   Scores: false
   Tantivy Query: {"boolean":{"must":[{"with_index":{"query":{"parse_with_field":{"field":"text_field1","query_string":"Text","lenient":null,"conjunction_mode":null}}}},{"range":{"field":"num_field1","lower_bound":{"excluded":10},"upper_bound":null,"is_datetime":false}}]}}
(10 rows)

-- Test 3: Should use MixedFastFieldExecState with all field types
EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF)
SELECT text_field1, text_field2, num_field1, bool_field
FROM exec_method_test
WHERE text_field1 @@@ 'Text' AND bool_field = true;
                                                                                                                 QUERY PLAN                                                                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on exec_method_test
   Table: exec_method_test
   Index: exec_method_idx
   Segment Count: 1
   Exec Method: MixedFastFieldExecState
   Fast Fields: text_field1, text_field2, num_field1, bool_field
   String Fast Fields: text_field1, text_field2
   Numeric Fast Fields: num_field1, bool_field
   Scores: false
   Tantivy Query: {"boolean":{"must":[{"with_index":{"query":{"parse_with_field":{"field":"text_field1","query_string":"Text","lenient":null,"conjunction_mode":null}}}},{"term":{"field":"bool_field","value":true,"is_datetime":false}}]}}
(10 rows)

-- Test 4: Should use StringFastFieldExecState when only one string field
EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF)
SELECT text_field1
FROM exec_method_test
WHERE text_field1 @@@ 'Text';
                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on exec_method_test
   Table: exec_method_test
   Index: exec_method_idx
   Segment Count: 1
   Exec Method: StringFastFieldExecState
   Fast Fields: text_field1
   String Agg Field: text_field1
   Scores: false
   Tantivy Query: {"with_index":{"query":{"parse_with_field":{"field":"text_field1","query_string":"Text","lenient":null,"conjunction_mode":null}}}}
(9 rows)

-- Test 5: Should use NumericFastFieldExecState when only numeric fields
EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF)
SELECT num_field1, num_field2
FROM exec_method_test
WHERE num_field1 > 25;
          QUERY PLAN          
------------------------------
 Seq Scan on exec_method_test
   Filter: (num_field1 > 25)
(2 rows)

-- Test 6: Should NOT use any FastField method when non-indexed fields are selected
EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF)
SELECT text_field1, non_indexed_field
FROM exec_method_test
WHERE text_field1 @@@ 'Text';
                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on exec_method_test
   Table: exec_method_test
   Index: exec_method_idx
   Segment Count: 1
   Exec Method: NormalScanExecState
   Scores: false
   Tantivy Query: {"with_index":{"query":{"parse_with_field":{"field":"text_field1","query_string":"Text","lenient":null,"conjunction_mode":null}}}}
(7 rows)

-- Test 7: Should use MixedFastFieldExecState even with ORDER BY
EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF)
SELECT text_field1, num_field1
FROM exec_method_test
WHERE text_field1 @@@ 'Text'
ORDER BY num_field1 DESC;
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Sort Key: num_field1 DESC
   ->  Custom Scan (ParadeDB Scan) on exec_method_test
         Table: exec_method_test
         Index: exec_method_idx
         Segment Count: 1
         Exec Method: MixedFastFieldExecState
         Fast Fields: text_field1, num_field1
         String Fast Fields: text_field1
         Numeric Fast Fields: num_field1
         Scores: false
         Tantivy Query: {"with_index":{"query":{"parse_with_field":{"field":"text_field1","query_string":"Text","lenient":null,"conjunction_mode":null}}}}
(12 rows)

-- Test 8: Should use MixedFastFieldExecState with filtering on multiple field types
EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF)
SELECT text_field1, text_field2, num_field1, bool_field
FROM exec_method_test
WHERE text_field1 @@@ 'Text' 
  AND text_field2 @@@ 'Sample'
  AND num_field1 BETWEEN 10 AND 40
  AND bool_field = true;


 Custom Scan (ParadeDB Scan) on exec_method_test
   Table: exec_method_test
   Index: exec_method_idx
   Segment Count: 1
   Exec Method: MixedFastFieldExecState
   Fast Fields: text_field1, text_field2, num_field1, bool_field
   String Fast Fields: text_field1, text_field2
   Numeric Fast Fields: num_field1, bool_field
   Scores: false
   Tantivy Query: {"boolean":{"must":[{"with_index":{"query":{"parse_with_field":{"field":"text_field1","query_string":"Text","lenient":null,"conjunction_mode":null}}}},{"with_index":{"query":{"parse_with_field":{"field":"text_field2","query_string":"Sample","lenient":null,"conjunction_mode":null}}}},{"range":{"field":"num_field1","lower_bound":{"included":10},"upper_bound":null,"is_datetime":false}},{"range":{"field":"num_field1","lower_bound":null,"upper_bound":{"included":40},"is_datetime":false}},{"term":{"field":"bool_field","value":true,"is_datetime":false}}]}}
(10 rows)

-- Test 9: Verify correct execution method in a subquery
EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF)
SELECT t.text_field1, t.num_field1
FROM (
    SELECT text_field1, num_field1
    FROM exec_method_test
    WHERE text_field1 @@@ 'Text' AND num_field1 > 10
) t
WHERE t.num_field1 < 30;
                                                                                                                                                                                       QUERY PLAN                                                                                                                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (ParadeDB Scan) on exec_method_test
   Table: exec_method_test
   Index: exec_method_idx
   Segment Count: 1
   Exec Method: MixedFastFieldExecState
   Fast Fields: text_field1, num_field1
   String Fast Fields: text_field1
   Numeric Fast Fields: num_field1
   Scores: false
   Tantivy Query: {"boolean":{"must":[{"with_index":{"query":{"parse_with_field":{"field":"text_field1","query_string":"Text","lenient":null,"conjunction_mode":null}}}},{"range":{"field":"num_field1","lower_bound":{"excluded":10},"upper_bound":null,"is_datetime":false}},{"range":{"field":"num_field1","lower_bound":null,"upper_bound":{"excluded":30},"is_datetime":false}}]}}
(10 rows)

-- Verify actual results match expected values (not just execution method)
SELECT text_field1, text_field2, num_field1
FROM exec_method_test
WHERE text_field1 @@@ 'Text 1'
  AND num_field1 < 20
ORDER BY num_field1;
 text_field1 | text_field2 | num_field1 
-------------+-------------+------------
 Text 1      | Sample 1    |          1
 Text 2      | Sample 2    |          2
 Text 3      | Sample 3    |          3
 Text 4      | Sample 4    |          4
 Text 5      | Sample 5    |          5
 Text 6      | Sample 6    |          6
 Text 7      | Sample 7    |          7
 Text 8      | Sample 8    |          8
 Text 9      | Sample 9    |          9
 Text 10     | Sample 0    |         10
 Text 11     | Sample 1    |         11
 Text 12     | Sample 2    |         12
 Text 13     | Sample 3    |         13
 Text 14     | Sample 4    |         14
 Text 15     | Sample 5    |         15
 Text 16     | Sample 6    |         16
 Text 17     | Sample 7    |         17
 Text 18     | Sample 8    |         18
 Text 19     | Sample 9    |         19
(19 rows)

-- Clean up
DROP INDEX IF EXISTS exec_method_idx;
DROP TABLE IF EXISTS exec_method_test; 
-- Reset parallel workers setting to default
RESET max_parallel_workers_per_gather;
 
