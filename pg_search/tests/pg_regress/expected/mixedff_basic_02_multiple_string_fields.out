-- Tests multiple string fast fields functionality
\i common/mixedff_basic_setup.sql
CREATE EXTENSION IF NOT EXISTS pg_search;
-- Disable parallel workers to avoid differences in plans
SET max_parallel_workers_per_gather = 0;
SET enable_indexscan to OFF;
SET paradedb.enable_mixed_fast_field_exec = true;
-- Drop any existing test tables from this group
DROP TABLE IF EXISTS mixed_numeric_string_test CASCADE;
-- Create test table for mixed numeric/string testing
CREATE TABLE mixed_numeric_string_test (
    id TEXT PRIMARY KEY,
    numeric_field1 INTEGER NOT NULL,
    numeric_field2 BIGINT NOT NULL,
    string_field1 TEXT NOT NULL,
    string_field2 TEXT NOT NULL,
    string_field3 TEXT NOT NULL,
    content TEXT
);
-- Create index with both numeric and string fast fields
CREATE INDEX mixed_test_search ON mixed_numeric_string_test USING bm25 (
    id,
    numeric_field1,
    numeric_field2,
    string_field1,
    string_field2,
    string_field3,
    content
) WITH (
    key_field = 'id',
    text_fields = '{"string_field1": {"tokenizer": {"type": "default"}, "fast": true}, "string_field2": {"tokenizer": {"type": "default"}, "fast": true}, "string_field3": {"tokenizer": {"type": "default"}, "fast": true}, "content": {"tokenizer": {"type": "default"}}}',
    numeric_fields = '{"numeric_field1": {"fast": true}, "numeric_field2": {"fast": true}}'
);
psql:common/mixedff_basic_setup.sql:34: WARNING:  the `raw` tokenizer is deprecated
-- Insert sample data
INSERT INTO mixed_numeric_string_test (id, numeric_field1, numeric_field2, string_field1, string_field2, string_field3, content) VALUES
('mix1', 100, 10000, 'Apple', 'Red', 'Fruit', 'This is a red apple'),
('mix2', 200, 20000, 'Banana', 'Yellow', 'Fruit', 'This is a yellow banana'),
('mix3', 300, 30000, 'Carrot', 'Orange', 'Vegetable', 'This is an orange carrot'),
('mix4', 400, 40000, 'Donut', 'Brown', 'Dessert', 'This is a chocolate donut'),
('mix5', 500, 50000, 'Egg', 'White', 'Protein', 'This is a white egg'); 
\echo 'Test: Multiple string fast fields'
Test: Multiple string fast fields
-- Query with multiple string fields 
EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF)
SELECT string_field1, string_field2, string_field3
FROM mixed_numeric_string_test
WHERE content @@@ 'red'
ORDER BY id;
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Sort Key: id
   ->  Custom Scan (ParadeDB Scan) on mixed_numeric_string_test
         Table: mixed_numeric_string_test
         Index: mixed_test_search
         Segment Count: 1
         Exec Method: MixedFastFieldExecState
         Fast Fields: id, string_field1, string_field2, string_field3
         String Fast Fields: id, string_field1, string_field2, string_field3
         Scores: false
         Tantivy Query: {"with_index":{"query":{"parse_with_field":{"field":"content","query_string":"red","lenient":null,"conjunction_mode":null}}}}
(11 rows)

-- Execute query and check results
SELECT string_field1, string_field2, string_field3
FROM mixed_numeric_string_test
WHERE content @@@ 'red'
ORDER BY id;
 string_field1 | string_field2 | string_field3 
---------------+---------------+---------------
 Apple         | Red           | Fruit
(1 row)

\i common/mixedff_basic_cleanup.sql
-- Cleanup for basic mixed fast fields tests (01-04)
-- Drop the table used in these tests
DROP TABLE IF EXISTS mixed_numeric_string_test CASCADE;
-- Reset parallel workers setting to default
RESET max_parallel_workers_per_gather;
RESET enable_indexscan;
RESET paradedb.enable_mixed_fast_field_exec;
SELECT 'Basic tests cleanup complete' AS status; 
            status            
------------------------------
 Basic tests cleanup complete
(1 row)

