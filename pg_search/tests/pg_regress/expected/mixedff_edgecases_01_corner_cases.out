-- Tests corner cases for mixed fast fields
\i common/mixedff_edgecases_setup.sql
CREATE EXTENSION IF NOT EXISTS pg_search;
-- Disable parallel workers to avoid differences in plans
SET max_parallel_workers_per_gather = 0;
SET enable_indexscan to OFF;
SET paradedb.enable_mixed_fast_field_exec = true;
-- Drop any existing test tables from this group
DROP TABLE IF EXISTS corner_case_test CASCADE;
DROP TABLE IF EXISTS nullable_test CASCADE;
DROP TABLE IF EXISTS mixed_numeric_string_test CASCADE;
-- Create corner case test table
CREATE TABLE corner_case_test (
    id TEXT PRIMARY KEY,
    -- String fields with different characteristics
    empty_string TEXT NOT NULL,
    very_long_string TEXT NOT NULL,
    special_chars TEXT NOT NULL,
    non_utf8_bytes BYTEA NOT NULL,
    -- Numeric fields with different characteristics
    extreme_large BIGINT NOT NULL,
    extreme_small BIGINT NOT NULL,
    float_value FLOAT NOT NULL,
    zero_value INTEGER NOT NULL,
    negative_value INTEGER NOT NULL,
    -- Boolean field
    bool_field BOOLEAN NOT NULL,
    -- Regular fields for testing
    content TEXT
);
-- Create BM25 index with fast fields for all columns
CREATE INDEX corner_case_search ON corner_case_test USING bm25 (
    id,
    empty_string,
    very_long_string,
    special_chars,
    extreme_large,
    extreme_small,
    float_value,
    zero_value,
    negative_value,
    bool_field,
    content
) WITH (
    key_field = 'id',
    text_fields = '{"empty_string": {"tokenizer": {"type": "default"}, "fast": true}, "very_long_string": {"tokenizer": {"type": "default"}, "fast": true}, "special_chars": {"tokenizer": {"type": "default"}, "fast": true}, "content": {"tokenizer": {"type": "default"}}}',
    numeric_fields = '{"extreme_large": {"fast": true}, "extreme_small": {"fast": true}, "float_value": {"fast": true}, "zero_value": {"fast": true}, "negative_value": {"fast": true}}',
    boolean_fields = '{"bool_field": {"fast": true}}'
);
psql:common/mixedff_edgecases_setup.sql:51: WARNING:  the `raw` tokenizer is deprecated
-- Insert extreme test data
INSERT INTO corner_case_test (
    id, 
    empty_string, 
    very_long_string, 
    special_chars, 
    non_utf8_bytes,
    extreme_large, 
    extreme_small, 
    float_value, 
    zero_value, 
    negative_value, 
    bool_field, 
    content
) VALUES
('case1', '', repeat('a', 8000), '!@#$%^&*()_+{}[]|:;"''<>,.?/', E'\\x00', 9223372036854775807, -9223372036854775808, 1.7976931348623157e+308, 0, -2147483648, true, 'Contains test term'),
('case2', '', repeat('b', 2), '-_.+', E'\\x00', 0, 0, 0.0, 0, 0, false, 'Contains test term'),
('case3', 'not_empty', '', '漢字', E'\\x00', 42, -42, 3.14159, 0, -1, true, 'Contains test term');
-- Add complex string patterns 
INSERT INTO corner_case_test (
    id, 
    empty_string, 
    very_long_string, 
    special_chars, 
    non_utf8_bytes,
    extreme_large, 
    extreme_small, 
    float_value, 
    zero_value, 
    negative_value, 
    bool_field, 
    content
) VALUES
('complex1', 'pattern with spaces', 'line1
line2
line3', 'tab    tab', E'\\x00', 1, 1, 1.0, 1, 1, true, 'complex pattern test'),
('complex2', 'quotation "marks"', 'backslash\\test', 'percent%test', E'\\x00', 2, 2, 2.0, 2, 2, false, 'complex pattern test');
-- Set up the nullable test table
CREATE TABLE nullable_test (
    id TEXT PRIMARY KEY,
    string_field TEXT,
    numeric_field INTEGER,
    content TEXT
);
CREATE INDEX nullable_search ON nullable_test USING bm25 (
    id, string_field, numeric_field, content
) WITH (
    key_field = 'id',
    text_fields = '{"string_field": {"tokenizer": {"type": "default"}, "fast": true}, "content": {"tokenizer": {"type": "default"}}}',
    numeric_fields = '{"numeric_field": {"fast": true}}'
);
psql:common/mixedff_edgecases_setup.sql:106: WARNING:  the `raw` tokenizer is deprecated
INSERT INTO nullable_test (id, string_field, numeric_field, content) VALUES
('null1', NULL, NULL, 'null test case'),
('null2', 'not null', 42, 'null test case');
-- Add string edge cases test table
CREATE TABLE mixed_numeric_string_test (
    id TEXT PRIMARY KEY,
    numeric_field1 INTEGER NOT NULL,
    numeric_field2 BIGINT NOT NULL,
    string_field1 TEXT NOT NULL,
    string_field2 TEXT NOT NULL,
    string_field3 TEXT NOT NULL,
    content TEXT
);
CREATE INDEX mixed_string_edge_search ON mixed_numeric_string_test USING bm25 (
    id,
    numeric_field1,
    numeric_field2,
    string_field1,
    string_field2,
    string_field3,
    content
) WITH (
    key_field = 'id',
    text_fields = '{"string_field1": {"tokenizer": {"type": "default"}, "fast": true}, "string_field2": {"tokenizer": {"type": "default"}, "fast": true}, "string_field3": {"tokenizer": {"type": "default"}, "fast": true}, "content": {"tokenizer": {"type": "default"}}}',
    numeric_fields = '{"numeric_field1": {"fast": true}, "numeric_field2": {"fast": true}}'
);
psql:common/mixedff_edgecases_setup.sql:135: WARNING:  the `raw` tokenizer is deprecated
INSERT INTO mixed_numeric_string_test (id, numeric_field1, numeric_field2, string_field1, string_field2, string_field3, content) VALUES
('edge1', 1, 1, '', 'empty_first', 'test', 'edge case test'),
('edge2', 2, 2, 'special_chars_!@#$%^&*()', 'test', 'test', 'edge case test'),
('edge3', 3, 3, repeat('very_long_string_', 10), 'test', 'test', 'edge case test'); 
\echo 'Test: Corner cases and edge values'
Test: Corner cases and edge values
\echo 'Test: Empty strings'
Test: Empty strings
-- Check execution plan
EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF)
SELECT id, empty_string
FROM corner_case_test
WHERE content @@@ 'test'
ORDER BY id;
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Sort Key: id
   ->  Custom Scan (ParadeDB Scan) on corner_case_test
         Table: corner_case_test
         Index: corner_case_search
         Segment Count: 2
         Exec Method: MixedFastFieldExecState
         Fast Fields: empty_string, id
         String Fast Fields: empty_string, id
         Scores: false
         Tantivy Query: {"with_index":{"query":{"parse_with_field":{"field":"content","query_string":"test","lenient":null,"conjunction_mode":null}}}}
(11 rows)

-- Test handling of empty strings
SELECT id, empty_string
FROM corner_case_test
WHERE content @@@ 'test'
ORDER BY id;
    id    |    empty_string     
----------+---------------------
 case1    | 
 case2    | 
 case3    | not_empty
 complex1 | pattern with spaces
 complex2 | quotation "marks"
(5 rows)

\echo 'Test: Very long strings'
Test: Very long strings
-- Test handling of very long strings
EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF)
SELECT id, length(very_long_string) as long_string_length
FROM corner_case_test
WHERE content @@@ 'test'
ORDER BY id;
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Sort Key: id
   ->  Custom Scan (ParadeDB Scan) on corner_case_test
         Table: corner_case_test
         Index: corner_case_search
         Segment Count: 2
         Exec Method: NormalScanExecState
         Scores: false
         Tantivy Query: {"with_index":{"query":{"parse_with_field":{"field":"content","query_string":"test","lenient":null,"conjunction_mode":null}}}}
(9 rows)

SELECT id, length(very_long_string) as long_string_length
FROM corner_case_test
WHERE content @@@ 'test'
ORDER BY id;
    id    | long_string_length 
----------+--------------------
 case1    |               8000
 case2    |                  2
 case3    |                  0
 complex1 |                 17
 complex2 |                 15
(5 rows)

\echo 'Test: Special characters'
Test: Special characters
-- Test handling of special characters
EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF)
SELECT id, special_chars
FROM corner_case_test
WHERE content @@@ 'test'
ORDER BY id;
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Sort Key: id
   ->  Custom Scan (ParadeDB Scan) on corner_case_test
         Table: corner_case_test
         Index: corner_case_search
         Segment Count: 2
         Exec Method: MixedFastFieldExecState
         Fast Fields: id, special_chars
         String Fast Fields: id, special_chars
         Scores: false
         Tantivy Query: {"with_index":{"query":{"parse_with_field":{"field":"content","query_string":"test","lenient":null,"conjunction_mode":null}}}}
(11 rows)

SELECT id, special_chars
FROM corner_case_test
WHERE content @@@ 'test'
ORDER BY id;
    id    |        special_chars        
----------+-----------------------------
 case1    | !@#$%^&*()_+{}[]|:;"'<>,.?/
 case2    | -_.+
 case3    | 漢字
 complex1 | tab    tab
 complex2 | percent%test
(5 rows)

\echo 'Test: Extreme numeric values'
Test: Extreme numeric values
-- Check execution plan
EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF)
SELECT id, extreme_large, extreme_small
FROM corner_case_test
WHERE content @@@ 'test'
ORDER BY id;
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Sort Key: id
   ->  Custom Scan (ParadeDB Scan) on corner_case_test
         Table: corner_case_test
         Index: corner_case_search
         Segment Count: 2
         Exec Method: MixedFastFieldExecState
         Fast Fields: id, extreme_large, extreme_small
         String Fast Fields: id
         Numeric Fast Fields: extreme_large, extreme_small
         Scores: false
         Tantivy Query: {"with_index":{"query":{"parse_with_field":{"field":"content","query_string":"test","lenient":null,"conjunction_mode":null}}}}
(12 rows)

-- Test handling of extreme numeric values
SELECT id, extreme_large, extreme_small
FROM corner_case_test
WHERE content @@@ 'test'
ORDER BY id;
    id    |    extreme_large    |    extreme_small     
----------+---------------------+----------------------
 case1    | 9223372036854775807 | -9223372036854775808
 case2    |                   0 |                    0
 case3    |                  42 |                  -42
 complex1 |                   1 |                    1
 complex2 |                   2 |                    2
(5 rows)

\echo 'Test: Boolean values'
Test: Boolean values
-- Test boolean field handling
EXPLAIN (FORMAT TEXT, COSTS OFF, TIMING OFF)
SELECT id, bool_field
FROM corner_case_test
WHERE content @@@ 'test'
ORDER BY id;
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Sort Key: id
   ->  Custom Scan (ParadeDB Scan) on corner_case_test
         Table: corner_case_test
         Index: corner_case_search
         Segment Count: 2
         Exec Method: MixedFastFieldExecState
         Fast Fields: id, bool_field
         String Fast Fields: id
         Numeric Fast Fields: bool_field
         Scores: false
         Tantivy Query: {"with_index":{"query":{"parse_with_field":{"field":"content","query_string":"test","lenient":null,"conjunction_mode":null}}}}
(12 rows)

SELECT id, bool_field
FROM corner_case_test
WHERE content @@@ 'test'
ORDER BY id;
    id    | bool_field 
----------+------------
 case1    | t
 case2    | f
 case3    | t
 complex1 | t
 complex2 | f
(5 rows)

\i common/mixedff_edgecases_cleanup.sql
-- Cleanup for edge cases tests (05-06, 11-12)
-- Drop the tables used in these tests
DROP TABLE IF EXISTS corner_case_test CASCADE;
DROP TABLE IF EXISTS nullable_test CASCADE;
DROP TABLE IF EXISTS mixed_numeric_string_test CASCADE;
-- Reset parallel workers setting to default
RESET max_parallel_workers_per_gather;
RESET enable_indexscan;
RESET paradedb.enable_mixed_fast_field_exec;
SELECT 'Edge cases tests cleanup complete' AS status; 
              status               
-----------------------------------
 Edge cases tests cleanup complete
(1 row)

