CREATE EXTENSION IF NOT EXISTS pg_search;
DROP TABLE IF EXISTS prox;
CREATE TABLE prox (
    id serial8,
    text text
);
INSERT INTO prox (text) VALUES ('a b c d e f g h i j k l m n o p q r s t u v w x y z');
INSERT INTO prox (text) VALUES ('bbq chicken is delicious');
INSERT INTO prox (text) VALUES ('bbq ribs are delicious');
INSERT INTO prox (text) VALUES ('chicken will be served at the bbq party');
INSERT INTO prox (text) VALUES ('ribs will be served at the party bbq');
CREATE INDEX idxprox ON prox USING bm25 (id, text) WITH (key_field = 'id');
-- no match
SELECT * FROM prox WHERE text @@@ pdb.proximity('a', 23, 'z');
 id | text 
----+------
(0 rows)

-- match
SELECT * FROM prox WHERE text @@@ pdb.proximity('a', 24, 'z');
 id |                        text                         
----+-----------------------------------------------------
  1 | a b c d e f g h i j k l m n o p q r s t u v w x y z
(1 row)

-- no match
SELECT * FROM prox WHERE text @@@ pdb.proximity_in_order('delicious', 2, pdb.prox_array('bbq', 'chicken'));
 id | text 
----+------
(0 rows)

-- match
SELECT * FROM prox WHERE text @@@ pdb.proximity('delicious', 2, pdb.prox_array('bbq', 'chicken'));
 id |           text           
----+--------------------------
  2 | bbq chicken is delicious
  3 | bbq ribs are delicious
(2 rows)

SELECT * FROM prox WHERE text @@@ pdb.proximity_in_order(pdb.prox_array('bbq', 'chicken'), 2, 'delicious');
 id |           text           
----+--------------------------
  2 | bbq chicken is delicious
  3 | bbq ribs are delicious
(2 rows)

-- match
SELECT * FROM prox WHERE text @@@ pdb.proximity(pdb.prox_clause(pdb.prox_array('chicken', 'ribs'), 0, 'will'), 4, pdb.prox_clause('bbq', 0, 'party'));
 id |                  text                   
----+-----------------------------------------
  4 | chicken will be served at the bbq party
  5 | ribs will be served at the party bbq
(2 rows)

SELECT * FROM prox WHERE text @@@ pdb.proximity_in_order(pdb.prox_clause(pdb.prox_array('chicken', 'ribs'), 0, 'will'), 4, pdb.prox_clause('bbq', 0, 'party'));
 id |                  text                   
----+-----------------------------------------
  4 | chicken will be served at the bbq party
  5 | ribs will be served at the party bbq
(2 rows)

-- match
SELECT * FROM prox WHERE text @@@ pdb.proximity(pdb.prox_regex('del...ous'), 1, pdb.prox_array('chicken', pdb.prox_regex('r..s')));
 id |           text           
----+--------------------------
  2 | bbq chicken is delicious
  3 | bbq ribs are delicious
(2 rows)

-- no match
SELECT * FROM prox WHERE text @@@ pdb.proximity_in_order(pdb.prox_regex('del...ous'), 1, pdb.prox_array('chicken', pdb.prox_regex('r..s')));
 id | text 
----+------
(0 rows)

--
-- just to assert the json representation
--
select pdb.proximity('a', 42, 'b');
                                      proximity                                       
--------------------------------------------------------------------------------------
 {"proximity":{"left":{"term":"a"},"distance":{"any_order":42},"right":{"term":"b"}}}
(1 row)

select pdb.proximity_in_order('a', 42, 'b');
                                 proximity_in_order                                  
-------------------------------------------------------------------------------------
 {"proximity":{"left":{"term":"a"},"distance":{"in_order":42},"right":{"term":"b"}}}
(1 row)

select pdb.prox_term('the_term');
 prox_term 
-----------
 the_term
(1 row)

select pdb.prox_regex('the_pattern');
                       prox_regex                        
---------------------------------------------------------
 {"regex":{"pattern":"the_pattern","max_expansions":50}}
(1 row)

select pdb.prox_regex('the_pattern', 100);
                        prox_regex                        
----------------------------------------------------------
 {"regex":{"pattern":"the_pattern","max_expansions":100}}
(1 row)

select pdb.prox_array('a', 'b', 'c', pdb.prox_term('d'), pdb.prox_regex('e'));
                                                   prox_array                                                    
-----------------------------------------------------------------------------------------------------------------
 {"clauses":[{"term":"a"},{"term":"b"},{"term":"c"},{"term":"d"},{"regex":{"pattern":"e","max_expansions":50}}]}
(1 row)

select pdb.prox_clause('a', 42, 'b');
                                     prox_clause                                      
--------------------------------------------------------------------------------------
 {"proximity":{"left":{"term":"a"},"distance":{"any_order":42},"right":{"term":"b"}}}
(1 row)

--
-- use the #operator
--
SELECT paradedb.snippet(text) FROM prox WHERE text @@@ ('a' ##24## 'z');   -- match
                              snippet                              
-------------------------------------------------------------------
 <b>a</b> b c d e f g h i j k l m n o p q r s t u v w x y <b>z</b>
(1 row)

SELECT paradedb.snippet(text) FROM prox WHERE text @@@ ('a' ##3## 'c' ##2## 'g');   -- no match
 snippet 
---------
(0 rows)

SELECT paradedb.snippet(text) FROM prox WHERE text @@@ ('a' ##3## 'c' ##3## 'g');   -- match
                                 snippet                                  
--------------------------------------------------------------------------
 <b>a</b> b <b>c</b> d e f <b>g</b> h i j k l m n o p q r s t u v w x y z
(1 row)

SELECT paradedb.snippet(text) FROM prox WHERE text @@@ (ARRAY['a', 'b', 'c'] ##1## 'd');   -- match
                                     snippet                                     
---------------------------------------------------------------------------------
 <b>a</b> <b>b</b> <b>c</b> <b>d</b> e f g h i j k l m n o p q r s t u v w x y z
(1 row)

SELECT paradedb.snippet(text) FROM prox WHERE text @@@ ('a' ##1## ARRAY['b', 'c', 'd']);   -- match
                                     snippet                                     
---------------------------------------------------------------------------------
 <b>a</b> <b>b</b> <b>c</b> <b>d</b> e f g h i j k l m n o p q r s t u v w x y z
(1 row)

