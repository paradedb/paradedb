\i common/snippet_json_advanced_setup.sql
CREATE EXTENSION IF NOT EXISTS pg_search;
DROP TABLE IF EXISTS authors;
DROP TABLE IF EXISTS books;
DROP TABLE IF EXISTS reviews;
CREATE TABLE authors (
    id SERIAL PRIMARY KEY,
    name TEXT,
    metadata JSONB
);
CREATE TABLE books (
    id SERIAL PRIMARY KEY,
    author_id INT,
    metadata JSON
);
CREATE TABLE reviews (
    id SERIAL PRIMARY KEY,
    book_id INT,
    metadata JSONB
);
INSERT INTO authors (name, metadata) VALUES
('J.K. Rowling', '{"age": 55, "text": "British author best known for the Harry Potter fantasy series"}'),
('Stephen King', '{"age": 75, "text": "American author known for his horror and supernatural fiction novels"}'),
('Agatha Christie', '{"age": 80, "text": "English writer known for her detective novels featuring Hercule Poirot"}'),
('Dan Brown', '{"age": 60, "text": "American author of thriller novels including The Da Vinci Code"}'),
('J.R.R. Tolkien', '{"age": 100, "text": "English author and philologist famous for The Lord of the Rings"}');
INSERT INTO books (author_id, metadata) VALUES
(2, '{"content": "This is a test test of the snippet function with multiple test words", "titles": ["test", "snippet", "function"], "test": "test"}'),
(2, '{"content": "Another test of the snippet snippet function with repeated snippet words", "titles": ["test", "test", "function"], "test": "test"}'),
(1, '{"content": "Yet another test test test of the function function function", "titles": ["test", "snippet", "test"], "test": "test"}'),
(3, '{"content": "test Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur? test At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat. test", "titles": ["test", "snippet", "function"], "test": "test"}');
INSERT INTO reviews (book_id, metadata) VALUES
(1, '{"review": "This is a test review of the snippet function with multiple test words"}'),
(2, '{"review": "Another test review of the snippet snippet function with repeated snippet words"}'),
(3, '{"review": "Yet another test review of the function function function"}'),
(3, '{"review": "test review of the snippet function with multiple test words"}'),
(2, '{"review": "test review of the snippet snippet function with repeated snippet words"}'),
(1, '{"review": "test review of the function function function"}');
CREATE INDEX ON authors USING bm25 (
    id,
    name,
    metadata
) WITH (key_field = 'id');
CREATE INDEX ON books USING bm25 (
    id,
    author_id,
    metadata
) WITH (key_field = 'id');
CREATE INDEX ON reviews USING bm25 (
    id,
    book_id,
    metadata
) WITH (key_field = 'id');
WITH book_snippets AS (
    SELECT
        b.id as book_id,
        paradedb.snippet(a.metadata->>'text') as author_snippet,
        paradedb.snippet_positions(a.metadata->>'text') as author_positions,
        paradedb.snippet(b.metadata->>'content') as book_content_snippet,
        paradedb.snippet_positions(b.metadata->>'content') as book_content_positions,
        paradedb.score(b.id) as book_score,
        paradedb.score(a.id) as author_score
    FROM books b
    JOIN authors a ON b.author_id = a.id
    WHERE b.id @@@ paradedb.parse('metadata.content:test') OR a.id @@@ paradedb.parse('metadata.text:Harry')
)
SELECT
    bs.*,
    r.metadata->>'review' as review_text,
    paradedb.snippet(r.metadata->>'review') as review_snippet,
    paradedb.snippet_positions(r.metadata->>'review') as review_positions,
    paradedb.score(r.id) as review_score
FROM book_snippets bs
LEFT JOIN reviews r ON r.book_id = bs.book_id
WHERE r.id @@@ paradedb.parse('metadata.review:test') AND r.id @@@ paradedb.parse('metadata.review:snippet')
ORDER BY bs.book_id, r.id;
 book_id |                            author_snippet                            | author_positions |                                   book_content_snippet                                    |     book_content_positions      | book_score | author_score |                                   review_text                                   |                                               review_snippet                                                |             review_positions             | review_score 

       1 |                                                                      |                  | This is a <b>test</b> <b>test</b> of the snippet function with multiple <b>test</b> words | {"{10,14}","{15,19}","{58,62}"} | 0.21010332 |            0 | This is a test review of the snippet function with multiple test words          | This is a <b>test</b> review of the <b>snippet</b> function with multiple <b>test</b> words                 | {"{10,14}","{29,36}","{60,64}"}          |   0.83736646
       2 |                                                                      |                  | Another <b>test</b> of the snippet snippet function with repeated snippet words           | {"{8,12}"}                      | 0.17698145 |            0 | Another test review of the snippet snippet function with repeated snippet words | Another <b>test</b> review of the <b>snippet</b> <b>snippet</b> function with repeated <b>snippet</b> words | {"{8,12}","{27,34}","{35,42}","{66,73}"} |    0.9784815
       2 |                                                                      |                  | Another <b>test</b> of the snippet snippet function with repeated snippet words           | {"{8,12}"}                      | 0.17698145 |            0 | test review of the snippet snippet function with repeated snippet words         | <b>test</b> review of the <b>snippet</b> <b>snippet</b> function with repeated <b>snippet</b> words         | {"{0,4}","{19,26}","{27,34}","{58,65}"}  |    0.9784815
       3 | British author best known for the <b>Harry</b> Potter fantasy series | {"{34,39}"}      | Yet another <b>test</b> <b>test</b> <b>test</b> of the function function function         | {"{12,16}","{17,21}","{22,26}"} | 0.21010332 |    2.2094626 | test review of the snippet function with multiple test words                    | <b>test</b> review of the <b>snippet</b> function with multiple <b>test</b> words                           | {"{0,4}","{19,26}","{50,54}"}            |   0.83736646
(4 rows)

-- Test comprehensive snippet functionality across all JSON fields
SELECT
    b.id as book_id,
    a.name as author_name,
    paradedb.snippet(b.metadata->>'content') as book_snippet,
    paradedb.snippet_positions(b.metadata->>'content') as book_positions,
    paradedb.snippet(a.metadata->>'text') as author_snippet,
    paradedb.snippet_positions(a.metadata->>'text') as author_positions,
    paradedb.snippet(r.metadata->>'review') as review_snippet,
    paradedb.snippet_positions(r.metadata->>'review') as review_positions,
    paradedb.score(b.id) as book_score,
    paradedb.score(a.id) as author_score,
    paradedb.score(r.id) as review_score
FROM books b
JOIN authors a ON b.author_id = a.id
LEFT JOIN reviews r ON r.book_id = b.id
WHERE b.id @@@ paradedb.parse('metadata.content:test')
    OR a.id @@@ paradedb.parse('metadata.text:fantasy')
    OR r.id @@@ paradedb.parse('metadata.review:test')
    OR r.id @@@ paradedb.parse('metadata.review:snippet')
ORDER BY b.id, r.id;
 book_id |   author_name   |                                                                       book_snippet                                                                       |            book_positions             |                            author_snippet                            | author_positions |                                               review_snippet                                                |             review_positions             | book_score | author_score | review_score 

       1 | Stephen King    | This is a <b>test</b> <b>test</b> of the snippet function with multiple <b>test</b> words                                                                | {"{10,14}","{15,19}","{58,62}"}       |                                                                      |                  | This is a <b>test</b> review of the <b>snippet</b> function with multiple <b>test</b> words                 | {"{10,14}","{29,36}","{60,64}"}          | 0.21010332 |            0 |   0.83736646
       1 | Stephen King    | This is a <b>test</b> <b>test</b> of the snippet function with multiple <b>test</b> words                                                                | {"{10,14}","{15,19}","{58,62}"}       |                                                                      |                  | <b>test</b> review of the function function function                                                        | {"{0,4}"}                                | 0.21010332 |            0 |   0.11753877
       2 | Stephen King    | Another <b>test</b> of the snippet snippet function with repeated snippet words                                                                          | {"{8,12}"}                            |                                                                      |                  | Another <b>test</b> review of the <b>snippet</b> <b>snippet</b> function with repeated <b>snippet</b> words | {"{8,12}","{27,34}","{35,42}","{66,73}"} | 0.17698145 |            0 |    0.9784815
       2 | Stephen King    | Another <b>test</b> of the snippet snippet function with repeated snippet words                                                                          | {"{8,12}"}                            |                                                                      |                  | <b>test</b> review of the <b>snippet</b> <b>snippet</b> function with repeated <b>snippet</b> words         | {"{0,4}","{19,26}","{27,34}","{58,65}"}  | 0.17698145 |            0 |    0.9784815
       3 | J.K. Rowling    | Yet another <b>test</b> <b>test</b> <b>test</b> of the function function function                                                                        | {"{12,16}","{17,21}","{22,26}"}       | British author best known for the Harry Potter <b>fantasy</b> series | {"{47,54}"}      | Yet another <b>test</b> review of the function function function                                            | {"{12,16}"}                              | 0.21010332 |    2.2094626 |   0.11753877
       3 | J.K. Rowling    | Yet another <b>test</b> <b>test</b> <b>test</b> of the function function function                                                                        | {"{12,16}","{17,21}","{22,26}"}       | British author best known for the Harry Potter <b>fantasy</b> series | {"{47,54}"}      | <b>test</b> review of the <b>snippet</b> function with multiple <b>test</b> words                           | {"{0,4}","{19,26}","{50,54}"}            | 0.21010332 |    2.2094626 |   0.83736646
       4 | Agatha Christie | <b>test</b> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim | {"{0,4}","{1317,1321}","{2167,2171}"} |                                                                      |                  |                                                                                                             |                                          | 0.21010332 |            0 |             
(7 rows)

-- Test snippet with multiple search terms in JSON fields
SELECT
    a.name,
    a.metadata->>'age' as age,
    paradedb.snippet(a.metadata->>'text') as text_snippet,
    paradedb.snippet_positions(a.metadata->>'text') as text_positions,
    paradedb.score(a.id) as author_score
FROM authors a
WHERE a.id @@@ paradedb.parse('metadata.text:author') AND a.id @@@ paradedb.parse('metadata.text:novels')
ORDER BY a.id;
     name     | age |                                    text_snippet                                    |    text_positions    | author_score 
--------------+-----+------------------------------------------------------------------------------------+----------------------+--------------
 Stephen King | 75  | American <b>author</b> known for his horror and supernatural fiction <b>novels</b> | {"{9,15}","{62,68}"} |    1.3175524
 Dan Brown    | 60  | American <b>author</b> of thriller <b>novels</b> including The Da Vinci Code       | {"{9,15}","{28,34}"} |    1.3175524
(2 rows)

-- Test snippet with JSON array fields (titles)
SELECT
    b.id,
    b.metadata->>'titles' as titles,
    paradedb.snippet(b.metadata->>'content') as content_snippet,
    paradedb.snippet_positions(b.metadata->>'content') as content_positions,
    paradedb.score(b.id) as book_score
FROM books b
WHERE b.id @@@ paradedb.parse('metadata.content:function') OR b.id @@@ paradedb.parse('metadata.titles:test')
ORDER BY b.id;
 id |             titles              |                                                                     content_snippet                                                                      |                       content_positions                       | book_score 
----+---------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------+------------
  1 | ["test", "snippet", "function"] | This is a <b>test</b> <b>test</b> of the snippet <b>function</b> with multiple <b>test</b> words                                                         | {"{10,14}","{15,19}","{35,43}","{58,62}"}                     | 0.77611315
  2 | ["test", "test", "function"]    | Another <b>test</b> of the snippet snippet <b>function</b> with repeated snippet words                                                                   | {"{8,12}","{36,44}"}                                          | 0.79984426
  3 | ["test", "snippet", "test"]     | Yet another <b>test</b> <b>test</b> <b>test</b> of the <b>function</b> <b>function</b> <b>function</b>                                                   | {"{12,16}","{17,21}","{22,26}","{34,42}","{43,51}","{52,60}"} |  0.9119711
  4 | ["test", "snippet", "function"] | <b>test</b> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim | {"{0,4}","{1317,1321}","{2167,2171}"}                         | 0.17698145
(4 rows)

-- Test complex JSON path queries with snippet
SELECT
    a.name as author_name,
    (a.metadata->>'age')::int as author_age,
    paradedb.snippet(a.metadata->>'text') as author_bio_snippet,
    b.id as book_id,
    paradedb.snippet(b.metadata->>'content') as book_content_snippet,
    r.id as review_id,
    paradedb.snippet(r.metadata->>'review') as review_snippet,
    paradedb.score(a.id) as author_score,
    paradedb.score(b.id) as book_score,
    paradedb.score(r.id) as review_score
FROM authors a
JOIN books b ON b.author_id = a.id
LEFT JOIN reviews r ON r.book_id = b.id
WHERE (a.id @@@ paradedb.parse('metadata.age:55'))
    AND (a.id @@@ paradedb.parse('metadata.text:author') OR b.id @@@ paradedb.parse('metadata.content:test'))
ORDER BY a.id, b.id, r.id;
 author_name  | author_age |                          author_bio_snippet                          | book_id |                               book_content_snippet                                | review_id | review_snippet | author_score | book_score | review_score 
--------------+------------+----------------------------------------------------------------------+---------+-----------------------------------------------------------------------------------+-----------+----------------+--------------+------------+--------------
 J.K. Rowling |         55 | British <b>author</b> best known for the Harry Potter fantasy series |       3 | Yet another <b>test</b> <b>test</b> <b>test</b> of the function function function |         3 |                |    2.2094626 | 0.21010332 |             
 J.K. Rowling |         55 | British <b>author</b> best known for the Harry Potter fantasy series |       3 | Yet another <b>test</b> <b>test</b> <b>test</b> of the function function function |         4 |                |    2.2094626 | 0.21010332 |             
(2 rows)

\i common/snippet_json_advanced_cleanup.sql
DROP TABLE IF EXISTS authors;
DROP TABLE IF EXISTS books;
DROP TABLE IF EXISTS reviews;
