SELECT 'Running Shoes.  olé'::paradedb.simple::text[];
        text         
---------------------
 {running,shoes,olé}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.simple('lowercase=false')::text[];
        text         
---------------------
 {Running,Shoes,olé}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.simple('lowercase=false', 'stemmer=english', 'ascii_folding=true')::text[];
      text      
----------------
 {Run,Shoe,ole}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.whitespace::text[];
         text         
----------------------
 {running,shoes.,olé}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.whitespace('lowercase=false')::text[];
         text         
----------------------
 {Running,Shoes.,olé}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.whitespace('lowercase=false', 'stemmer=english', 'ascii_folding=true')::text[];
       text       
------------------
 {Run,Shoes.,ole}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.exact::text[];
          text           
-------------------------
 {"Running Shoes.  olé"}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.exact('alias=foo')::text[];  -- only option supported for exact
          text           
-------------------------
 {"Running Shoes.  olé"}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.exact('lowercase=false', 'stemmer=english', 'ascii_folding=true')::text[];
ERROR:  type modifier is not allowed for type "exact" at character 31
SELECT 'Running Shoes.  olé'::paradedb.chinese_compatible::text[];
        text         
---------------------
 {running,shoes,olé}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.chinese_compatible('lowercase=false')::text[];
        text         
---------------------
 {Running,Shoes,olé}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.chinese_compatible('lowercase=false', 'stemmer=english', 'ascii_folding=true')::text[];
      text      
----------------
 {Run,Shoe,ole}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.lindera::text[]; -- error, needs a language
ERROR:  typmod lookup should not fail: MissingKey("language")
SELECT 'Running Shoes.  olé'::paradedb.lindera('language=chinese')::text[]; -- error, needs a language
              text              
--------------------------------
 {running," ",shoes,.,"  ",olé}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.lindera('language=japanese')::text[]; -- error, needs a language
              text              
--------------------------------
 {running," ",shoes,.,"  ",olé}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.lindera('language=korean')::text[]; -- error, needs a language
              text              
--------------------------------
 {running," ",shoes,.,"  ",olé}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.lindera(chinese, 'lowercase=false')::text[];
              text              
--------------------------------
 {Running," ",Shoes,.,"  ",olé}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.lindera(chinese, 'lowercase=false', 'stemmer=english', 'ascii_folding=true')::text[];
           text            
---------------------------
 {Run," ",Shoe,.,"  ",ole}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.lindera(japanese, 'lowercase=false')::text[];
              text              
--------------------------------
 {Running," ",Shoes,.,"  ",olé}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.lindera(japanese, 'lowercase=false', 'stemmer=english', 'ascii_folding=true')::text[];
           text            
---------------------------
 {Run," ",Shoe,.,"  ",ole}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.lindera(korean, 'lowercase=false')::text[];
              text              
--------------------------------
 {Running," ",Shoes,.,"  ",olé}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.lindera(korean, 'lowercase=false', 'stemmer=english', 'ascii_folding=true')::text[];
           text            
---------------------------
 {Run," ",Shoe,.,"  ",ole}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.jieba::text[];
                text                
------------------------------------
 {running," ",shoes,.," "," ",ol,é}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.jieba('lowercase=false')::text[];
                text                
------------------------------------
 {Running," ",Shoes,.," "," ",ol,é}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.jieba('lowercase=false', 'stemmer=english', 'ascii_folding=true')::text[];
             text              
-------------------------------
 {Run," ",Shoe,.," "," ",ol,e}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.ngram::text[]; -- error, needs min/max
ERROR:  typmod lookup should not fail: MissingKey("min")
SELECT 'Running Shoes.  olé'::paradedb.ngram(2, 3)::text[];
                                                                        text                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------
 {ru,run,un,unn,nn,nni,ni,nin,in,ing,ng,"ng ","g ","g s"," s"," sh",sh,sho,ho,hoe,oe,oes,es,es.,s.,"s. ",". ",".  ","  ","  o"," o"," ol",ol,olé,lé}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.ngram(2, 3, 'prefix_only=true')::text[];
   text   
----------
 {ru,run}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.ngram('min=2', 'max=3', 'prefix_only=true')::text[];
   text   
----------
 {ru,run}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.ngram(2, 3, 'lowercase=false')::text[];
                                                                        text                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------
 {Ru,Run,un,unn,nn,nni,ni,nin,in,ing,ng,"ng ","g ","g S"," S"," Sh",Sh,Sho,ho,hoe,oe,oes,es,es.,s.,"s. ",". ",".  ","  ","  o"," o"," ol",ol,olé,lé}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.ngram(2, 3, 'lowercase=false', 'stemmer=english', 'ascii_folding=true')::text[];
                                                                        text                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------
 {Ru,Run,un,unn,nn,nni,ni,nin,in,ing,ng,"ng ","g ","g S"," S"," Sh",Sh,Sho,ho,hoe,oe,oe,es,es.,s.,"s. ",". ",".  ","  ","  o"," o"," ol",ol,ole,le}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.ngram('min=2', 'max=3', 'lowercase=false', 'stemmer=english', 'ascii_folding=true')::text[];
                                                                        text                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------
 {Ru,Run,un,unn,nn,nni,ni,nin,in,ing,ng,"ng ","g ","g S"," S"," Sh",Sh,Sho,ho,hoe,oe,oe,es,es.,s.,"s. ",". ",".  ","  ","  o"," o"," ol",ol,ole,le}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.stemmed::text[]; -- error, needs a language
ERROR:  typmod lookup should not fail: MissingKey("language")
SELECT 'Running Shoes.  olé'::paradedb.stemmed(arabic)::text[];
        text         
---------------------
 {running,shoes,olé}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.stemmed(danish)::text[];
        text         
---------------------
 {running,shoes,olé}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.stemmed(dutch)::text[];
        text         
---------------------
 {running,shoes,ole}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.stemmed(english)::text[];
      text      
----------------
 {run,shoe,olé}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.stemmed(finnish)::text[];
        text         
---------------------
 {running,shoes,olé}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.stemmed(french)::text[];
       text        
-------------------
 {running,sho,olé}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.stemmed(german)::text[];
        text         
---------------------
 {running,shoes,olé}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.stemmed(greek)::text[];
        text         
---------------------
 {running,shoes,olé}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.stemmed(hungarian)::text[];
        text        
--------------------
 {running,shoes,ol}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.stemmed(italian)::text[];
        text         
---------------------
 {running,shoes,olè}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.stemmed(norwegian)::text[];
        text         
---------------------
 {running,shoes,olé}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.stemmed(portuguese)::text[];
       text        
-------------------
 {running,sho,olé}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.stemmed(romanian)::text[];
        text         
---------------------
 {running,shoes,olé}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.stemmed(russian)::text[];
        text         
---------------------
 {running,shoes,olé}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.stemmed(spanish)::text[];
       text        
-------------------
 {running,sho,ole}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.stemmed(swedish)::text[];
        text         
---------------------
 {running,shoes,olé}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.stemmed(tamil)::text[];
        text         
---------------------
 {running,shoes,olé}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.stemmed(turkish)::text[];
         text         
----------------------
 {runningi,shoes,olé}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.stemmed(foo)::text[]; -- error
ERROR:  typmod lookup should not fail: InvalidLanguage("foo")
SELECT 'Running Shoes.  olé'::paradedb.stemmed('language=english', 'lowercase=false', 'ascii_folding=true')::text[];
      text      
----------------
 {Run,Shoe,ole}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.regex::text[]; -- error, needs a regular expression
ERROR:  typmod lookup should not fail: MissingKey("pattern")
SELECT 'Running Shoes.  olé'::paradedb.regex('ing|oes')::text[];
   text    
-----------
 {ing,oes}
(1 row)

SELECT 'Running Shoes.  olé'::paradedb.regex('ing|oes', 'lowercase=false', 'stemmer=english', 'ascii_folding=true')::text[];
   text   
----------
 {ing,oe}
(1 row)

