# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc efb75712cd6488621882dfc8962442c0aaf6b81ed766743fe93e9c34b2eb5d87 # shrinks to (json_data, _) = ("{\n                \"level1\": {\n                    \"level2\": {\n                        \"level3\": {\n                            \"text\": \"test\",\n                            \"array\": [\"test\"]\n                        }\n                    }\n                }\n            }", "test"), operator = "->", path = "'level1'->'level2'->'level3'->'text'", search_term = "test"
cc ce8d3f07d55d941b00ae2757168496f7e3201f2589c5e62a750f1f61b5133b13 # shrinks to (json_data, _) = ("{\n                \"level1\": {\n                    \"level2\": {\n                        \"level3\": {\n                            \"text\": \"value array property data test document json highlight value object text database match field array document snippet property information object\",\n                            \"array\": [\"result property json property text object data information document data field highlight index property information result field array index database\", \"field index object database information array index highlight snippet text text text value text array match search information test json\", \"json array property text json content query test value search field test array match highlight snippet search object field database\"]\n                        }\n                    }\n                }\n            }", "value array property data test document json highlight value object text database match field array document snippet property information object"), operator = "#>", (path, parse_path) = ("level1->level2->level3->text", "level1.level2.level3.text"), search_term = "content"
